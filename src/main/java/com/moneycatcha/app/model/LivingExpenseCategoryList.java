//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "livingExpenseCategoryList")
@XmlEnum
public enum LivingExpenseCategoryList {
    
    @XmlEnumValue("Childcare")
    CHILDCARE("Childcare"),
    
    @XmlEnumValue("Clothing and personal care")
    CLOTHING_AND_PERSONAL_CARE("Clothing and personal care"),
    
    @XmlEnumValue("Education")
    EDUCATION("Education"),
    
    @XmlEnumValue("Groceries")
    GROCERIES("Groceries"),
    
    @XmlEnumValue("Insurance")
    INSURANCE("Insurance"),
    
    @XmlEnumValue("Investment property utilities, rates and related costs")
    INVESTMENT_PROPERTY_UTILITIES_RATES_AND_RELATED_COSTS("Investment property utilities, rates and related costs"),
    
    @XmlEnumValue("Medical and health")
    MEDICAL_AND_HEALTH("Medical and health"),
    
    @XmlEnumValue("Other")
    OTHER("Other"),
    
    @XmlEnumValue("Owner occupied property utilities, rates and related costs")
    OWNER_OCCUPIED_PROPERTY_UTILITIES_RATES_AND_RELATED_COSTS("Owner occupied property utilities, rates and related costs"),
    
    @XmlEnumValue("Recreation and entertainment")
    RECREATION_AND_ENTERTAINMENT("Recreation and entertainment"),
    
    @XmlEnumValue("Telephone, internet, pay TV and media streaming subscriptions")
    TELEPHONE_INTERNET_PAY_TV_AND_MEDIA_STREAMING_SUBSCRIPTIONS("Telephone, internet, pay TV and media streaming subscriptions"),
    
    @XmlEnumValue("Transport")
    TRANSPORT("Transport");
    private final String value;
    LivingExpenseCategoryList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static LivingExpenseCategoryList fromValue(String v) {
        for (LivingExpenseCategoryList c: LivingExpenseCategoryList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
