//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "itAndAVEquipmentTypeList")
@XmlEnum
public enum ItAndAVEquipmentTypeList {
    
    @XmlEnumValue("Audio Visual")
    AUDIO_VISUAL("Audio Visual"),
    
    @XmlEnumValue("Client Computing")
    CLIENT_COMPUTING("Client Computing"),
    
    @XmlEnumValue("Gaming")
    GAMING("Gaming"),
    
    @XmlEnumValue("HiFi")
    HI_FI("HiFi"),
    
    @XmlEnumValue("Network Infrastructure")
    NETWORK_INFRASTRUCTURE("Network Infrastructure"),
    
    @XmlEnumValue("Other")
    OTHER("Other"),
    
    @XmlEnumValue("Peripherals")
    PERIPHERALS("Peripherals"),
    
    @XmlEnumValue("Photography")
    PHOTOGRAPHY("Photography"),
    
    @XmlEnumValue("Point of Sale System")
    POINT_OF_SALE_SYSTEM("Point of Sale System"),
    
    @XmlEnumValue("Portable Audio")
    PORTABLE_AUDIO("Portable Audio"),
    
    @XmlEnumValue("Security Hardware and Appliances")
    SECURITY_HARDWARE_AND_APPLIANCES("Security Hardware and Appliances"),
    
    @XmlEnumValue("Server Computing")
    SERVER_COMPUTING("Server Computing"),
    
    @XmlEnumValue("Software")
    SOFTWARE("Software"),
    
    @XmlEnumValue("Storage Infrastructure")
    STORAGE_INFRASTRUCTURE("Storage Infrastructure"),
    
    @XmlEnumValue("Surveillance Equipment")
    SURVEILLANCE_EQUIPMENT("Surveillance Equipment"),
    
    @XmlEnumValue("Television")
    TELEVISION("Television"),
    
    @XmlEnumValue("Video")
    VIDEO("Video");
    private final String value;
    ItAndAVEquipmentTypeList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static ItAndAVEquipmentTypeList fromValue(String v) {
        for (ItAndAVEquipmentTypeList c: ItAndAVEquipmentTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
