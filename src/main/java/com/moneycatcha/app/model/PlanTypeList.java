//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "planTypeList")
@XmlEnum
public enum PlanTypeList {
    
    @XmlEnumValue("Building Unit Plan")
    BUILDING_UNIT_PLAN("Building Unit Plan"),
    
    @XmlEnumValue("Building Unit Plan of Amalgamation")
    BUILDING_UNIT_PLAN_OF_AMALGAMATION("Building Unit Plan of Amalgamation"),
    
    @XmlEnumValue("Building Unit Plan of Resubdivision")
    BUILDING_UNIT_PLAN_OF_RESUBDIVISION("Building Unit Plan of Resubdivision"),
    
    @XmlEnumValue("Community Plan")
    COMMUNITY_PLAN("Community Plan"),
    
    @XmlEnumValue("Crown Plan")
    CROWN_PLAN("Crown Plan"),
    
    @XmlEnumValue("Deposited Plan")
    DEPOSITED_PLAN("Deposited Plan"),
    
    @XmlEnumValue("Diagram")
    DIAGRAM("Diagram"),
    
    @XmlEnumValue("Filed Plan")
    FILED_PLAN("Filed Plan"),
    
    @XmlEnumValue("Group Title Plan")
    GROUP_TITLE_PLAN("Group Title Plan"),
    
    @XmlEnumValue("Group Title Plan of Amalgamation")
    GROUP_TITLE_PLAN_OF_AMALGAMATION("Group Title Plan of Amalgamation"),
    
    @XmlEnumValue("Group Title Plan of Resubdivision")
    GROUP_TITLE_PLAN_OF_RESUBDIVISION("Group Title Plan of Resubdivision"),
    
    @XmlEnumValue("Leasehold Building Unit Plan (South Bank)")
    LEASEHOLD_BUILDING_UNIT_PLAN_SOUTH_BANK("Leasehold Building Unit Plan (South Bank)"),
    
    @XmlEnumValue("Lower Building Unit Plan")
    LOWER_BUILDING_UNIT_PLAN("Lower Building Unit Plan"),
    
    @XmlEnumValue("Mixed Community Plan")
    MIXED_COMMUNITY_PLAN("Mixed Community Plan"),
    
    @XmlEnumValue("Mixed Precinct Plan")
    MIXED_PRECINCT_PLAN("Mixed Precinct Plan"),
    
    @XmlEnumValue("Mixed Stratum Plan")
    MIXED_STRATUM_PLAN("Mixed Stratum Plan"),
    
    @XmlEnumValue("Plan")
    PLAN("Plan"),
    
    @XmlEnumValue("Plan of Subdivision")
    PLAN_OF_SUBDIVISION("Plan of Subdivision"),
    
    @XmlEnumValue("Registered Plan")
    REGISTERED_PLAN("Registered Plan"),
    
    @XmlEnumValue("Strata Plan")
    STRATA_PLAN("Strata Plan"),
    
    @XmlEnumValue("Stratum Plan (South Bank)")
    STRATUM_PLAN_SOUTH_BANK("Stratum Plan (South Bank)"),
    
    @XmlEnumValue("Stratum Plan of Amalgamation (South Bank)")
    STRATUM_PLAN_OF_AMALGAMATION_SOUTH_BANK("Stratum Plan of Amalgamation (South Bank)"),
    
    @XmlEnumValue("Stratum Plan of Subdivision (South Bank)")
    STRATUM_PLAN_OF_SUBDIVISION_SOUTH_BANK("Stratum Plan of Subdivision (South Bank)"),
    
    @XmlEnumValue("Survey Plan")
    SURVEY_PLAN("Survey Plan"),
    
    @XmlEnumValue("Survey Strata Plan")
    SURVEY_STRATA_PLAN("Survey Strata Plan"),
    
    @XmlEnumValue("Upper Building Unit Plan")
    UPPER_BUILDING_UNIT_PLAN("Upper Building Unit Plan");
    private final String value;
    PlanTypeList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static PlanTypeList fromValue(String v) {
        for (PlanTypeList c: PlanTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
