//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import lombok.Data;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "attachment",
    "content",
    "instructions",
    "publisher",
    "recipient",
    "schemaVersion",
    "transformMetadata"
})
@XmlRootElement(name = "Package")

@Data

@Entity
public class Message {
    @XmlElement(name = "Attachment")
    protected List<Message.Attachment> attachment;
    @XmlElement(name = "Content")
    protected Message.Content content;
    @XmlElement(name = "Instructions", required = true)
    protected Message.Instructions instructions;
    @XmlElement(name = "Publisher", required = true)
    protected Message.Publisher publisher;
    @XmlElement(name = "Recipient", required = true)
    protected List<Message.Recipient> recipient;
    @XmlElement(name = "SchemaVersion", required = true)
    protected Message.SchemaVersion schemaVersion;
    @XmlElement(name = "TransformMetadata")
    protected Message.TransformMetadata transformMetadata;
    @XmlAttribute(name = "ProductionData")
    protected YesNoList productionData;
    @XmlAttribute(name = "UniqueID")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    protected String uniqueID;
    public List<Message.Attachment> getAttachment() {
        if (attachment == null) {
            attachment = new ArrayList<Message.Attachment>();
        }
        return this.attachment;
    }
    public List<Message.Recipient> getRecipient() {
        if (recipient == null) {
            recipient = new ArrayList<Message.Recipient>();
        }
        return this.recipient;
    }
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "inlineAttachment"
    })

@Data

@Entity
    public static class Attachment {
        @XmlElement(name = "InlineAttachment")
        protected byte[] inlineAttachment;
        @XmlAttribute(name = "Filename")
        protected String filename;
        @XmlAttribute(name = "UniqueID")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        protected String uniqueID;
        @XmlAttribute(name = "URI")
        protected String uri;
    }
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "application",
        "needsAnalysis",
        "statementOfPosition"
    })

@Data

@Entity
    public static class Content {
        @XmlElement(name = "Application")
        protected Message.Content.Application application;
        @XmlElement(name = "NeedsAnalysis")
        protected Message.Content.NeedsAnalysis needsAnalysis;
        @XmlElement(name = "StatementOfPosition")
        protected List<Message.Content.StatementOfPosition> statementOfPosition;
        public List<Message.Content.StatementOfPosition> getStatementOfPosition() {
            if (statementOfPosition == null) {
                statementOfPosition = new ArrayList<Message.Content.StatementOfPosition>();
            }
            return this.statementOfPosition;
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "accountVariation",
            "address",
            "businessChannel",
            "companyApplicant",
            "companyFinancials",
            "contributionFunds",
            "customerTransactionAnalysis",
            "declarations",
            "depositAccountDetails",
            "detailedComment",
            "household",
            "insurance",
            "lendingGuarantee",
            "liability",
            "loanDetails",
            "masterAgreement",
            "nonRealEstateAsset",
            "otherExpense",
            "otherIncome",
            "overview",
            "personApplicant",
            "productPackage",
            "productSet",
            "realEstateAsset",
            "relatedCompany",
            "relatedPerson",
            "salesChannel",
            "settlement",
            "splitLoan",
            "summary",
            "trustApplicant",
            "vendorTaxInvoice"
        })

@Data

@Entity
        public static class Application {
            @XmlElement(name = "AccountVariation")
            protected List<Message.Content.Application.AccountVariation> accountVariation;
            @XmlElement(name = "Address")
            protected List<AddressType> address;
            @XmlElement(name = "BusinessChannel")
            protected Message.Content.Application.BusinessChannel businessChannel;
            @XmlElement(name = "CompanyApplicant")
            protected List<Message.Content.Application.CompanyApplicant> companyApplicant;
            @XmlElement(name = "CompanyFinancials")
            protected List<Message.Content.Application.CompanyFinancials> companyFinancials;
            @XmlElement(name = "ContributionFunds")
            protected List<Message.Content.Application.ContributionFunds> contributionFunds;
            @XmlElement(name = "CustomerTransactionAnalysis")
            protected List<Message.Content.Application.CustomerTransactionAnalysis> customerTransactionAnalysis;
            @XmlElement(name = "Declarations")
            protected Message.Content.Application.Declarations declarations;
            @XmlElement(name = "DepositAccountDetails")
            protected List<Message.Content.Application.DepositAccountDetails> depositAccountDetails;
            @XmlElement(name = "DetailedComment")
            protected List<Message.Content.Application.DetailedComment> detailedComment;
            @XmlElement(name = "Household")
            protected List<Message.Content.Application.Household> household;
            @XmlElement(name = "Insurance")
            protected List<Message.Content.Application.Insurance> insurance;
            @XmlElement(name = "LendingGuarantee")
            protected List<Message.Content.Application.LendingGuarantee> lendingGuarantee;
            @XmlElement(name = "Liability")
            protected List<Message.Content.Application.Liability> liability;
            @XmlElement(name = "LoanDetails")
            protected List<Message.Content.Application.LoanDetails> loanDetails;
            @XmlElement(name = "MasterAgreement")
            protected List<Message.Content.Application.MasterAgreement> masterAgreement;
            @XmlElement(name = "NonRealEstateAsset")
            protected List<Message.Content.Application.NonRealEstateAsset> nonRealEstateAsset;
            @XmlElement(name = "OtherExpense")
            protected List<Message.Content.Application.OtherExpense> otherExpense;
            @XmlElement(name = "OtherIncome")
            protected List<Message.Content.Application.OtherIncome> otherIncome;
            @XmlElement(name = "Overview")
            protected Message.Content.Application.Overview overview;
            @XmlElement(name = "PersonApplicant")
            protected List<Message.Content.Application.PersonApplicant> personApplicant;
            @XmlElement(name = "ProductPackage")
            protected List<Message.Content.Application.ProductPackage> productPackage;
            @XmlElement(name = "ProductSet")
            protected List<Message.Content.Application.ProductSet> productSet;
            @XmlElement(name = "RealEstateAsset")
            protected List<Message.Content.Application.RealEstateAsset> realEstateAsset;
            @XmlElement(name = "RelatedCompany")
            protected List<Message.Content.Application.RelatedCompany> relatedCompany;
            @XmlElement(name = "RelatedPerson")
            protected List<Message.Content.Application.RelatedPerson> relatedPerson;
            @XmlElement(name = "SalesChannel")
            protected Message.Content.Application.SalesChannel salesChannel;
            @XmlElement(name = "Settlement")
            protected List<Message.Content.Application.Settlement> settlement;
            @XmlElement(name = "SplitLoan")
            protected List<Message.Content.Application.SplitLoan> splitLoan;
            @XmlElement(name = "Summary")
            protected Message.Content.Application.Summary summary;
            @XmlElement(name = "TrustApplicant")
            protected List<Message.Content.Application.TrustApplicant> trustApplicant;
            @XmlElement(name = "VendorTaxInvoice")
            protected List<VendorTaxInvoiceType> vendorTaxInvoice;
            @XmlAttribute(name = "ProductionData")
            protected YesNoList productionData;
            @XmlAttribute(name = "UniqueID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            protected String uniqueID;
            public List<Message.Content.Application.AccountVariation> getAccountVariation() {
                if (accountVariation == null) {
                    accountVariation = new ArrayList<Message.Content.Application.AccountVariation>();
                }
                return this.accountVariation;
            }
            public List<AddressType> getAddress() {
                if (address == null) {
                    address = new ArrayList<AddressType>();
                }
                return this.address;
            }
            public List<Message.Content.Application.CompanyApplicant> getCompanyApplicant() {
                if (companyApplicant == null) {
                    companyApplicant = new ArrayList<Message.Content.Application.CompanyApplicant>();
                }
                return this.companyApplicant;
            }
            public List<Message.Content.Application.CompanyFinancials> getCompanyFinancials() {
                if (companyFinancials == null) {
                    companyFinancials = new ArrayList<Message.Content.Application.CompanyFinancials>();
                }
                return this.companyFinancials;
            }
            public List<Message.Content.Application.ContributionFunds> getContributionFunds() {
                if (contributionFunds == null) {
                    contributionFunds = new ArrayList<Message.Content.Application.ContributionFunds>();
                }
                return this.contributionFunds;
            }
            public List<Message.Content.Application.CustomerTransactionAnalysis> getCustomerTransactionAnalysis() {
                if (customerTransactionAnalysis == null) {
                    customerTransactionAnalysis = new ArrayList<Message.Content.Application.CustomerTransactionAnalysis>();
                }
                return this.customerTransactionAnalysis;
            }
            public List<Message.Content.Application.DepositAccountDetails> getDepositAccountDetails() {
                if (depositAccountDetails == null) {
                    depositAccountDetails = new ArrayList<Message.Content.Application.DepositAccountDetails>();
                }
                return this.depositAccountDetails;
            }
            public List<Message.Content.Application.DetailedComment> getDetailedComment() {
                if (detailedComment == null) {
                    detailedComment = new ArrayList<Message.Content.Application.DetailedComment>();
                }
                return this.detailedComment;
            }
            public List<Message.Content.Application.Household> getHousehold() {
                if (household == null) {
                    household = new ArrayList<Message.Content.Application.Household>();
                }
                return this.household;
            }
            public List<Message.Content.Application.Insurance> getInsurance() {
                if (insurance == null) {
                    insurance = new ArrayList<Message.Content.Application.Insurance>();
                }
                return this.insurance;
            }
            public List<Message.Content.Application.LendingGuarantee> getLendingGuarantee() {
                if (lendingGuarantee == null) {
                    lendingGuarantee = new ArrayList<Message.Content.Application.LendingGuarantee>();
                }
                return this.lendingGuarantee;
            }
            public List<Message.Content.Application.Liability> getLiability() {
                if (liability == null) {
                    liability = new ArrayList<Message.Content.Application.Liability>();
                }
                return this.liability;
            }
            public List<Message.Content.Application.LoanDetails> getLoanDetails() {
                if (loanDetails == null) {
                    loanDetails = new ArrayList<Message.Content.Application.LoanDetails>();
                }
                return this.loanDetails;
            }
            public List<Message.Content.Application.MasterAgreement> getMasterAgreement() {
                if (masterAgreement == null) {
                    masterAgreement = new ArrayList<Message.Content.Application.MasterAgreement>();
                }
                return this.masterAgreement;
            }
            public List<Message.Content.Application.NonRealEstateAsset> getNonRealEstateAsset() {
                if (nonRealEstateAsset == null) {
                    nonRealEstateAsset = new ArrayList<Message.Content.Application.NonRealEstateAsset>();
                }
                return this.nonRealEstateAsset;
            }
            public List<Message.Content.Application.OtherExpense> getOtherExpense() {
                if (otherExpense == null) {
                    otherExpense = new ArrayList<Message.Content.Application.OtherExpense>();
                }
                return this.otherExpense;
            }
            public List<Message.Content.Application.OtherIncome> getOtherIncome() {
                if (otherIncome == null) {
                    otherIncome = new ArrayList<Message.Content.Application.OtherIncome>();
                }
                return this.otherIncome;
            }
            public List<Message.Content.Application.PersonApplicant> getPersonApplicant() {
                if (personApplicant == null) {
                    personApplicant = new ArrayList<Message.Content.Application.PersonApplicant>();
                }
                return this.personApplicant;
            }
            public List<Message.Content.Application.ProductPackage> getProductPackage() {
                if (productPackage == null) {
                    productPackage = new ArrayList<Message.Content.Application.ProductPackage>();
                }
                return this.productPackage;
            }
            public List<Message.Content.Application.ProductSet> getProductSet() {
                if (productSet == null) {
                    productSet = new ArrayList<Message.Content.Application.ProductSet>();
                }
                return this.productSet;
            }
            public List<Message.Content.Application.RealEstateAsset> getRealEstateAsset() {
                if (realEstateAsset == null) {
                    realEstateAsset = new ArrayList<Message.Content.Application.RealEstateAsset>();
                }
                return this.realEstateAsset;
            }
            public List<Message.Content.Application.RelatedCompany> getRelatedCompany() {
                if (relatedCompany == null) {
                    relatedCompany = new ArrayList<Message.Content.Application.RelatedCompany>();
                }
                return this.relatedCompany;
            }
            public List<Message.Content.Application.RelatedPerson> getRelatedPerson() {
                if (relatedPerson == null) {
                    relatedPerson = new ArrayList<Message.Content.Application.RelatedPerson>();
                }
                return this.relatedPerson;
            }
            public List<Message.Content.Application.Settlement> getSettlement() {
                if (settlement == null) {
                    settlement = new ArrayList<Message.Content.Application.Settlement>();
                }
                return this.settlement;
            }
            public List<Message.Content.Application.SplitLoan> getSplitLoan() {
                if (splitLoan == null) {
                    splitLoan = new ArrayList<Message.Content.Application.SplitLoan>();
                }
                return this.splitLoan;
            }
            public List<Message.Content.Application.TrustApplicant> getTrustApplicant() {
                if (trustApplicant == null) {
                    trustApplicant = new ArrayList<Message.Content.Application.TrustApplicant>();
                }
                return this.trustApplicant;
            }
            public List<VendorTaxInvoiceType> getVendorTaxInvoice() {
                if (vendorTaxInvoice == null) {
                    vendorTaxInvoice = new ArrayList<VendorTaxInvoiceType>();
                }
                return this.vendorTaxInvoice;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "addBorrower",
                "addGuarantee",
                "addGuaranteeSecurity",
                "addGuarantor",
                "addSecurity",
                "balanceIncrease",
                "changeLoanTerm",
                "changeRepaymentAmount",
                "changeRepaymentFrequency",
                "changeRepaymentType",
                "closeAccount",
                "interestRateDiscount",
                "lendingGuaranteeLimitDecrease",
                "lendingGuaranteeLimitIncrease",
                "limitIncrease",
                "reduceBalance",
                "reduceLimit",
                "releaseGuarantee",
                "releaseGuaranteeSecurity",
                "releaseGuarantor",
                "releaseSecurity",
                "removeBorrower",
                "splitAccount",
                "switchProduct",
                "updatePartyDetails"
            })

@Data

@Entity
            public static class AccountVariation {
                @XmlElement(name = "AddBorrower")
                protected Message.Content.Application.AccountVariation.AddBorrower addBorrower;
                @XmlElement(name = "AddGuarantee")
                protected Message.Content.Application.AccountVariation.AddGuarantee addGuarantee;
                @XmlElement(name = "AddGuaranteeSecurity")
                protected Message.Content.Application.AccountVariation.AddGuaranteeSecurity addGuaranteeSecurity;
                @XmlElement(name = "AddGuarantor")
                protected Message.Content.Application.AccountVariation.AddGuarantor addGuarantor;
                @XmlElement(name = "AddSecurity")
                protected Message.Content.Application.AccountVariation.AddSecurity addSecurity;
                @XmlElement(name = "BalanceIncrease")
                protected Message.Content.Application.AccountVariation.BalanceIncrease balanceIncrease;
                @XmlElement(name = "ChangeLoanTerm")
                protected Message.Content.Application.AccountVariation.ChangeLoanTerm changeLoanTerm;
                @XmlElement(name = "ChangeRepaymentAmount")
                protected Message.Content.Application.AccountVariation.ChangeRepaymentAmount changeRepaymentAmount;
                @XmlElement(name = "ChangeRepaymentFrequency")
                protected Message.Content.Application.AccountVariation.ChangeRepaymentFrequency changeRepaymentFrequency;
                @XmlElement(name = "ChangeRepaymentType")
                protected Message.Content.Application.AccountVariation.ChangeRepaymentType changeRepaymentType;
                @XmlElement(name = "CloseAccount")
                protected Message.Content.Application.AccountVariation.CloseAccount closeAccount;
                @XmlElement(name = "InterestRateDiscount")
                protected Message.Content.Application.AccountVariation.InterestRateDiscount interestRateDiscount;
                @XmlElement(name = "LendingGuaranteeLimitDecrease")
                protected Message.Content.Application.AccountVariation.LendingGuaranteeLimitDecrease lendingGuaranteeLimitDecrease;
                @XmlElement(name = "LendingGuaranteeLimitIncrease")
                protected Message.Content.Application.AccountVariation.LendingGuaranteeLimitIncrease lendingGuaranteeLimitIncrease;
                @XmlElement(name = "LimitIncrease")
                protected Message.Content.Application.AccountVariation.LimitIncrease limitIncrease;
                @XmlElement(name = "ReduceBalance")
                protected Message.Content.Application.AccountVariation.ReduceBalance reduceBalance;
                @XmlElement(name = "ReduceLimit")
                protected Message.Content.Application.AccountVariation.ReduceLimit reduceLimit;
                @XmlElement(name = "ReleaseGuarantee")
                protected Message.Content.Application.AccountVariation.ReleaseGuarantee releaseGuarantee;
                @XmlElement(name = "ReleaseGuaranteeSecurity")
                protected Message.Content.Application.AccountVariation.ReleaseGuaranteeSecurity releaseGuaranteeSecurity;
                @XmlElement(name = "ReleaseGuarantor")
                protected Message.Content.Application.AccountVariation.ReleaseGuarantor releaseGuarantor;
                @XmlElement(name = "ReleaseSecurity")
                protected Message.Content.Application.AccountVariation.ReleaseSecurity releaseSecurity;
                @XmlElement(name = "RemoveBorrower")
                protected Message.Content.Application.AccountVariation.RemoveBorrower removeBorrower;
                @XmlElement(name = "SplitAccount")
                protected Message.Content.Application.AccountVariation.SplitAccount splitAccount;
                @XmlElement(name = "SwitchProduct")
                protected Message.Content.Application.AccountVariation.SwitchProduct switchProduct;
                @XmlElement(name = "UpdatePartyDetails")
                protected Message.Content.Application.AccountVariation.UpdatePartyDetails updatePartyDetails;
                @XmlAttribute(name = "Type")
                protected VariationTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "VariationDescription")
                protected String variationDescription;
                @XmlAttribute(name = "x_AccountToVary")
                @XmlIDREF
                protected Object xAccountToVary;
                @XmlAttribute(name = "x_LendingGuaranteeToVary")
                @XmlIDREF
                protected Object xLendingGuaranteeToVary;
                @XmlAttribute(name = "x_PostVariationAccount")
                @XmlIDREF
                protected Object xPostVariationAccount;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AddBorrower {
                    @XmlAttribute(name = "x_Borrower")
                    @XmlIDREF
                    protected Object xBorrower;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AddGuarantee {
                    @XmlAttribute(name = "x_LendingGuarantee")
                    @XmlIDREF
                    protected Object xLendingGuarantee;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AddGuaranteeSecurity {
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AddGuarantor {
                    @XmlAttribute(name = "x_Guarantor")
                    @XmlIDREF
                    protected Object xGuarantor;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AddSecurity {
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class BalanceIncrease {
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "IncreaseAmount")
                    protected BigDecimal increaseAmount;
                    @XmlAttribute(name = "NewBalance")
                    protected BigDecimal newBalance;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ChangeLoanTerm {
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "NewFixedLoanTerm")
                    protected BigInteger newFixedLoanTerm;
                    @XmlAttribute(name = "NewTotalLoanTerm")
                    protected BigInteger newTotalLoanTerm;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ChangeRepaymentAmount {
                    @XmlAttribute(name = "RepaymentAmount")
                    protected BigDecimal repaymentAmount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ChangeRepaymentFrequency {
                    @XmlAttribute(name = "RepaymentFrequency")
                    protected FrequencyFullList repaymentFrequency;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ChangeRepaymentType {
                    @XmlAttribute(name = "RepaymentType")
                    protected PaymentTypeList repaymentType;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class CloseAccount {
                    @XmlAttribute(name = "DestroyCard")
                    protected YesNoList destroyCard;
                    @XmlAttribute(name = "PayoutAmount")
                    protected BigDecimal payoutAmount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class InterestRateDiscount {
                    @XmlAttribute(name = "DiscountRate")
                    protected BigDecimal discountRate;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class LendingGuaranteeLimitDecrease {
                    @XmlAttribute(name = "DecreaseAmount")
                    protected BigDecimal decreaseAmount;
                    @XmlAttribute(name = "NewLimit")
                    protected BigDecimal newLimit;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class LendingGuaranteeLimitIncrease {
                    @XmlAttribute(name = "IncreaseAmount")
                    protected BigDecimal increaseAmount;
                    @XmlAttribute(name = "NewLimit")
                    protected BigDecimal newLimit;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "newLimitRequestedInForeignCurrency"
                })

@Data

@Entity
                public static class LimitIncrease {
                    @XmlElement(name = "NewLimitRequestedInForeignCurrency")
                    protected AmountInForeignCurrencyType newLimitRequestedInForeignCurrency;
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "IncreaseAmount")
                    protected BigDecimal increaseAmount;
                    @XmlAttribute(name = "IsNewLimitRequestedInForeignCurrency")
                    protected YesNoList isNewLimitRequestedInForeignCurrency;
                    @XmlAttribute(name = "NewLimit")
                    protected BigDecimal newLimit;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ReduceBalance {
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "NewBalance")
                    protected BigDecimal newBalance;
                    @XmlAttribute(name = "ReductionAmount")
                    protected BigDecimal reductionAmount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "newLimitRequestedInForeignCurrency"
                })

@Data

@Entity
                public static class ReduceLimit {
                    @XmlElement(name = "NewLimitRequestedInForeignCurrency")
                    protected AmountInForeignCurrencyType newLimitRequestedInForeignCurrency;
                    @XmlAttribute(name = "IsNewLimitRequestedInForeignCurrency")
                    protected YesNoList isNewLimitRequestedInForeignCurrency;
                    @XmlAttribute(name = "LimitReduction")
                    protected BigDecimal limitReduction;
                    @XmlAttribute(name = "NewLimit")
                    protected BigDecimal newLimit;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ReleaseGuarantee {
                    @XmlAttribute(name = "x_LendingGuarantee")
                    @XmlIDREF
                    protected Object xLendingGuarantee;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ReleaseGuaranteeSecurity {
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "Reason")
                    protected ReleaseSecurityReasonList reason;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ReleaseGuarantor {
                    @XmlAttribute(name = "x_Guarantor")
                    @XmlIDREF
                    protected Object xGuarantor;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ReleaseSecurity {
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    @XmlAttribute(name = "Reason")
                    protected ReleaseSecurityReasonList reason;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class RemoveBorrower {
                    @XmlAttribute(name = "x_Borrower")
                    @XmlIDREF
                    protected Object xBorrower;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "account"
                })

@Data

@Entity
                public static class SplitAccount {
                    @XmlElement(name = "Account")
                    protected List<Message.Content.Application.AccountVariation.SplitAccount.Account> account;
                    @XmlAttribute(name = "ActionDate")
                    protected XMLGregorianCalendar actionDate;
                    public List<Message.Content.Application.AccountVariation.SplitAccount.Account> getAccount() {
                        if (account == null) {
                            account = new ArrayList<Message.Content.Application.AccountVariation.SplitAccount.Account>();
                        }
                        return this.account;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Account {
                        @XmlAttribute(name = "x_AccountDetails")
                        @XmlIDREF
                        protected Object xAccountDetails;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SwitchProduct {
                    @XmlAttribute(name = "x_ProductDetails")
                    @XmlIDREF
                    protected Object xProductDetails;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class UpdatePartyDetails {
                    @XmlAttribute(name = "x_LoanParty")
                    @XmlIDREF
                    protected Object xLoanParty;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "contact"
            })

@Data

@Entity
            public static class BusinessChannel {
                @XmlElement(name = "Contact")
                protected Message.Content.Application.BusinessChannel.Contact contact;
                @XmlAttribute(name = "ABN")
                protected String abn;
                @XmlAttribute(name = "ACN")
                protected String acn;
                @XmlAttribute(name = "CompanyName")
                protected String companyName;
                @XmlAttribute(name = "LenderID")
                protected String lenderID;
                @XmlAttribute(name = "LicenceNumber")
                protected String licenceNumber;
                @XmlAttribute(name = "LicenceType")
                protected LicenceTypeList licenceType;
                @XmlAttribute(name = "OtherIdentifier")
                protected String otherIdentifier;
                @XmlAttribute(name = "Type")
                protected BusinessChannelTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contactPerson",
                    "officeFax",
                    "officePhone"
                })

@Data

@Entity
                public static class Contact {
                    @XmlElement(name = "ContactPerson")
                    protected Message.Content.Application.BusinessChannel.Contact.ContactPerson contactPerson;
                    @XmlElement(name = "OfficeFax")
                    protected PhoneType officeFax;
                    @XmlElement(name = "OfficePhone")
                    protected PhoneType officePhone;
                    @XmlAttribute(name = "Email")
                    protected String email;
                    @XmlAttribute(name = "WebAddress")
                    protected String webAddress;
                    @XmlAttribute(name = "x_Address")
                    @XmlIDREF
                    protected Object xAddress;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ContactPerson {
                        @XmlAttribute(name = "FirstName")
                        protected String firstName;
                        @XmlAttribute(name = "NameTitle")
                        protected NameTitleList nameTitle;
                        @XmlAttribute(name = "Role")
                        protected String role;
                        @XmlAttribute(name = "Surname")
                        protected String surname;
                    }
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "authorisedSignatory",
                "beneficialOwner",
                "business",
                "contact",
                "creditHistory",
                "declaredIncome",
                "director",
                "existingCustomer",
                "financialAnalysis",
                "foreignTaxAssociation",
                "incomePrevious",
                "incomePrior",
                "incomeRecent",
                "incomeYearToDate",
                "partner",
                "relatedLegalEntities",
                "responsibleLending",
                "shareholder",
                "sourceOfWealth"
            })

@Data

@Entity
            public static class CompanyApplicant {
                @XmlElement(name = "AuthorisedSignatory")
                protected List<Message.Content.Application.CompanyApplicant.AuthorisedSignatory> authorisedSignatory;
                @XmlElement(name = "BeneficialOwner")
                protected List<Message.Content.Application.CompanyApplicant.BeneficialOwner> beneficialOwner;
                @XmlElement(name = "Business")
                protected Message.Content.Application.CompanyApplicant.Business business;
                @XmlElement(name = "Contact")
                protected Message.Content.Application.CompanyApplicant.Contact contact;
                @XmlElement(name = "CreditHistory")
                protected List<Message.Content.Application.CompanyApplicant.CreditHistory> creditHistory;
                @XmlElement(name = "DeclaredIncome")
                protected Message.Content.Application.CompanyApplicant.DeclaredIncome declaredIncome;
                @XmlElement(name = "Director")
                protected List<Message.Content.Application.CompanyApplicant.Director> director;
                @XmlElement(name = "ExistingCustomer")
                protected Message.Content.Application.CompanyApplicant.ExistingCustomer existingCustomer;
                @XmlElement(name = "FinancialAnalysis")
                protected Message.Content.Application.CompanyApplicant.FinancialAnalysis financialAnalysis;
                @XmlElement(name = "ForeignTaxAssociation")
                protected ForeignTaxAssociationType foreignTaxAssociation;
                @XmlElement(name = "IncomePrevious")
                protected Message.Content.Application.CompanyApplicant.IncomePrevious incomePrevious;
                @XmlElement(name = "IncomePrior")
                protected Message.Content.Application.CompanyApplicant.IncomePrior incomePrior;
                @XmlElement(name = "IncomeRecent")
                protected Message.Content.Application.CompanyApplicant.IncomeRecent incomeRecent;
                @XmlElement(name = "IncomeYearToDate")
                protected Message.Content.Application.CompanyApplicant.IncomeYearToDate incomeYearToDate;
                @XmlElement(name = "Partner")
                protected List<Message.Content.Application.CompanyApplicant.Partner> partner;
                @XmlElement(name = "RelatedLegalEntities")
                protected Message.Content.Application.CompanyApplicant.RelatedLegalEntities relatedLegalEntities;
                @XmlElement(name = "ResponsibleLending")
                protected ResponsibleLendingType responsibleLending;
                @XmlElement(name = "Shareholder")
                protected List<Message.Content.Application.CompanyApplicant.Shareholder> shareholder;
                @XmlElement(name = "SourceOfWealth")
                protected List<Message.Content.Application.CompanyApplicant.SourceOfWealth> sourceOfWealth;
                @XmlAttribute(name = "ABN")
                protected String abn;
                @XmlAttribute(name = "ABNVerified")
                protected YesNoList abnVerified;
                @XmlAttribute(name = "ACN")
                protected String acn;
                @XmlAttribute(name = "AllowDirectMarketing")
                protected YesNoList allowDirectMarketing;
                @XmlAttribute(name = "AllowThirdPartyDisclosure")
                protected YesNoList allowThirdPartyDisclosure;
                @XmlAttribute(name = "ApplicantType")
                protected ApplicantTypeList applicantType;
                @XmlAttribute(name = "ARBN")
                protected String arbn;
                @XmlAttribute(name = "ARSN")
                protected String arsn;
                @XmlAttribute(name = "BusinessName")
                protected String businessName;
                @XmlAttribute(name = "BusinessNameSameAsCompanyName")
                protected YesNoList businessNameSameAsCompanyName;
                @XmlAttribute(name = "BusinessStructure")
                protected BusinessStructureExcludingTrustList businessStructure;
                @XmlAttribute(name = "CompanyName")
                protected String companyName;
                @XmlAttribute(name = "CreditStatus")
                protected CreditStatusList creditStatus;
                @XmlAttribute(name = "CustomerTypeCode")
                protected String customerTypeCode;
                @XmlAttribute(name = "CustomerTypeDescription")
                protected String customerTypeDescription;
                @XmlAttribute(name = "DateRegistered")
                protected XMLGregorianCalendar dateRegistered;
                @XmlAttribute(name = "ExchangeListedOn")
                protected String exchangeListedOn;
                @XmlAttribute(name = "ExemptStatus")
                protected ExemptStatusList exemptStatus;
                @XmlAttribute(name = "GSTRegisteredDate")
                protected XMLGregorianCalendar gstRegisteredDate;
                @XmlAttribute(name = "IsExistingCustomer")
                protected YesNoList isExistingCustomer;
                @XmlAttribute(name = "IsHoldingCompany")
                protected YesNoList isHoldingCompany;
                @XmlAttribute(name = "LicenceNumber")
                protected String licenceNumber;
                @XmlAttribute(name = "NumberOfDirectors")
                protected BigInteger numberOfDirectors;
                @XmlAttribute(name = "NumberOfPartners")
                protected BigInteger numberOfPartners;
                @XmlAttribute(name = "NumberOfShareholders")
                protected BigInteger numberOfShareholders;
                @XmlAttribute(name = "OECDCRSStatus")
                protected OecdCRSStatusList oecdcrsStatus;
                @XmlAttribute(name = "PrimaryApplicant")
                protected YesNoList primaryApplicant;
                @XmlAttribute(name = "PublicAuthority")
                protected YesNoList publicAuthority;
                @XmlAttribute(name = "ReasonForObtainingLoan")
                protected String reasonForObtainingLoan;
                @XmlAttribute(name = "RegisteredForGST")
                protected YesNoList registeredForGST;
                @XmlAttribute(name = "RegisteredInCountry")
                protected CountryCodeList registeredInCountry;
                @XmlAttribute(name = "RegisteredInState")
                protected AuStateList registeredInState;
                @XmlAttribute(name = "TradingMoreThanTwoYears")
                protected YesNoList tradingMoreThanTwoYears;
                @XmlAttribute(name = "TypeOfIncorporation")
                protected TypeOfIncorporationList typeOfIncorporation;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "x_Accountant")
                @XmlIDREF
                protected Object xAccountant;
                @XmlAttribute(name = "x_SoleTrader")
                @XmlIDREF
                protected Object xSoleTrader;
                @XmlAttribute(name = "x_Solicitor")
                @XmlIDREF
                protected Object xSolicitor;
                @XmlAttribute(name = "x_TradeReference")
                @XmlIDREF
                protected Object xTradeReference;
                public List<Message.Content.Application.CompanyApplicant.AuthorisedSignatory> getAuthorisedSignatory() {
                    if (authorisedSignatory == null) {
                        authorisedSignatory = new ArrayList<Message.Content.Application.CompanyApplicant.AuthorisedSignatory>();
                    }
                    return this.authorisedSignatory;
                }
                public List<Message.Content.Application.CompanyApplicant.BeneficialOwner> getBeneficialOwner() {
                    if (beneficialOwner == null) {
                        beneficialOwner = new ArrayList<Message.Content.Application.CompanyApplicant.BeneficialOwner>();
                    }
                    return this.beneficialOwner;
                }
                public List<Message.Content.Application.CompanyApplicant.CreditHistory> getCreditHistory() {
                    if (creditHistory == null) {
                        creditHistory = new ArrayList<Message.Content.Application.CompanyApplicant.CreditHistory>();
                    }
                    return this.creditHistory;
                }
                public List<Message.Content.Application.CompanyApplicant.Director> getDirector() {
                    if (director == null) {
                        director = new ArrayList<Message.Content.Application.CompanyApplicant.Director>();
                    }
                    return this.director;
                }
                public List<Message.Content.Application.CompanyApplicant.Partner> getPartner() {
                    if (partner == null) {
                        partner = new ArrayList<Message.Content.Application.CompanyApplicant.Partner>();
                    }
                    return this.partner;
                }
                public List<Message.Content.Application.CompanyApplicant.Shareholder> getShareholder() {
                    if (shareholder == null) {
                        shareholder = new ArrayList<Message.Content.Application.CompanyApplicant.Shareholder>();
                    }
                    return this.shareholder;
                }
                public List<Message.Content.Application.CompanyApplicant.SourceOfWealth> getSourceOfWealth() {
                    if (sourceOfWealth == null) {
                        sourceOfWealth = new ArrayList<Message.Content.Application.CompanyApplicant.SourceOfWealth>();
                    }
                    return this.sourceOfWealth;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AuthorisedSignatory {
                    @XmlAttribute(name = "PositionTitle")
                    protected String positionTitle;
                    @XmlAttribute(name = "x_Signatory")
                    @XmlIDREF
                    protected Object xSignatory;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class BeneficialOwner {
                    @XmlAttribute(name = "x_BeneficialOwner")
                    @XmlIDREF
                    protected Object xBeneficialOwner;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "concentrationRisk",
                    "diversification",
                    "importExport",
                    "propertyInvestment"
                })

@Data

@Entity
                public static class Business {
                    @XmlElement(name = "ConcentrationRisk")
                    protected Message.Content.Application.CompanyApplicant.Business.ConcentrationRisk concentrationRisk;
                    @XmlElement(name = "Diversification")
                    protected Message.Content.Application.CompanyApplicant.Business.Diversification diversification;
                    @XmlElement(name = "ImportExport")
                    protected Message.Content.Application.CompanyApplicant.Business.ImportExport importExport;
                    @XmlElement(name = "PropertyInvestment")
                    protected Message.Content.Application.CompanyApplicant.Business.PropertyInvestment propertyInvestment;
                    @XmlAttribute(name = "AustralianBIC")
                    protected String australianBIC;
                    @XmlAttribute(name = "CustomIndustryCode")
                    protected String customIndustryCode;
                    @XmlAttribute(name = "FranchiseDetails")
                    protected String franchiseDetails;
                    @XmlAttribute(name = "GICSCode")
                    protected String gicsCode;
                    @XmlAttribute(name = "Industry")
                    protected String industry;
                    @XmlAttribute(name = "IndustryCode")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    protected String industryCode;
                    @XmlAttribute(name = "IsAFranchise")
                    protected YesNoIntentList isAFranchise;
                    @XmlAttribute(name = "MainBusinessActivity")
                    protected String mainBusinessActivity;
                    @XmlAttribute(name = "NumberOfEmployees")
                    protected BigInteger numberOfEmployees;
                    @XmlAttribute(name = "NumberOfLocations")
                    protected BigInteger numberOfLocations;
                    @XmlAttribute(name = "OwnPremises")
                    protected YesNoList ownPremises;
                    @XmlAttribute(name = "PrincipalTradingAddressLeaseAgreementDetails")
                    protected String principalTradingAddressLeaseAgreementDetails;
                    @XmlAttribute(name = "PrincipalTradingAddressLeased")
                    protected YesNoList principalTradingAddressLeased;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ConcentrationRisk {
                        @XmlAttribute(name = "ConcentrationRiskDetails")
                        protected String concentrationRiskDetails;
                        @XmlAttribute(name = "CustomerOrSupplierConcentration")
                        protected YesNoList customerOrSupplierConcentration;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Diversification {
                        @XmlAttribute(name = "Details")
                        protected String details;
                        @XmlAttribute(name = "DiversifiedDate")
                        protected XMLGregorianCalendar diversifiedDate;
                        @XmlAttribute(name = "IsDiversified")
                        protected YesNoList isDiversified;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ImportExport {
                        @XmlAttribute(name = "Details")
                        protected String details;
                        @XmlAttribute(name = "IsInvolved")
                        protected YesNoIntentList isInvolved;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class PropertyInvestment {
                        @XmlAttribute(name = "Details")
                        protected String details;
                        @XmlAttribute(name = "IsInvolved")
                        protected YesNoIntentList isInvolved;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contactPerson",
                    "officeFax",
                    "officeMobile",
                    "officePhone",
                    "previousRegisteredAddressDuration",
                    "principalTradingAddressDuration",
                    "registeredAddressDuration"
                })

@Data

@Entity
                public static class Contact {
                    @XmlElement(name = "ContactPerson")
                    protected Message.Content.Application.CompanyApplicant.Contact.ContactPerson contactPerson;
                    @XmlElement(name = "OfficeFax")
                    protected PhoneType officeFax;
                    @XmlElement(name = "OfficeMobile")
                    protected PhoneType officeMobile;
                    @XmlElement(name = "OfficePhone")
                    protected PhoneType officePhone;
                    @XmlElement(name = "PreviousRegisteredAddressDuration")
                    protected DurationType previousRegisteredAddressDuration;
                    @XmlElement(name = "PrincipalTradingAddressDuration")
                    protected DurationType principalTradingAddressDuration;
                    @XmlElement(name = "RegisteredAddressDuration")
                    protected DurationType registeredAddressDuration;
                    @XmlAttribute(name = "Email")
                    protected String email;
                    @XmlAttribute(name = "PreferredContact")
                    protected PreferredContactCompanyList preferredContact;
                    @XmlAttribute(name = "PreviousRegisteredAddressEndDate")
                    protected XMLGregorianCalendar previousRegisteredAddressEndDate;
                    @XmlAttribute(name = "PreviousRegisteredAddressStartDate")
                    protected XMLGregorianCalendar previousRegisteredAddressStartDate;
                    @XmlAttribute(name = "PrincipalTradingAddressStartDate")
                    protected XMLGregorianCalendar principalTradingAddressStartDate;
                    @XmlAttribute(name = "RegisteredAddressStartDate")
                    protected XMLGregorianCalendar registeredAddressStartDate;
                    @XmlAttribute(name = "WebAddress")
                    protected String webAddress;
                    @XmlAttribute(name = "x_MailingAddress")
                    @XmlIDREF
                    protected Object xMailingAddress;
                    @XmlAttribute(name = "x_PreviousRegisteredAddress")
                    @XmlIDREF
                    protected Object xPreviousRegisteredAddress;
                    @XmlAttribute(name = "x_PrincipalTradingAddress")
                    @XmlIDREF
                    protected Object xPrincipalTradingAddress;
                    @XmlAttribute(name = "x_RegisteredAddress")
                    @XmlIDREF
                    protected Object xRegisteredAddress;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ContactPerson {
                        @XmlAttribute(name = "FirstName")
                        protected String firstName;
                        @XmlAttribute(name = "NameTitle")
                        protected NameTitleList nameTitle;
                        @XmlAttribute(name = "Role")
                        protected String role;
                        @XmlAttribute(name = "Surname")
                        protected String surname;
                        @XmlAttribute(name = "x_ContactPerson")
                        @XmlIDREF
                        protected Object xContactPerson;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class CreditHistory {
                    @XmlAttribute(name = "Details")
                    protected String details;
                    @XmlAttribute(name = "IsCurrent")
                    protected YesNoList isCurrent;
                    @XmlAttribute(name = "Issue")
                    protected CreditHistoryIssueList issue;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class DeclaredIncome {
                    @XmlAttribute(name = "IncomeAmount")
                    protected BigDecimal incomeAmount;
                    @XmlAttribute(name = "NetIncomeAmount")
                    protected BigDecimal netIncomeAmount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Director {
                    @XmlAttribute(name = "x_Director")
                    @XmlIDREF
                    protected Object xDirector;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "accountNumber"
                })

@Data

@Entity
                public static class ExistingCustomer {
                    @XmlElement(name = "AccountNumber")
                    protected FinancialAccountType accountNumber;
                    @XmlAttribute(name = "CustomerNumber")
                    protected String customerNumber;
                    @XmlAttribute(name = "CustomerSince")
                    protected XMLGregorianCalendar customerSince;
                    @XmlAttribute(name = "CustomerSinceMonth")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    protected String customerSinceMonth;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "companyFinancials"
                })

@Data

@Entity
                public static class FinancialAnalysis {
                    @XmlElement(name = "CompanyFinancials")
                    protected List<Message.Content.Application.CompanyApplicant.FinancialAnalysis.CompanyFinancials> companyFinancials;
                    @XmlAttribute(name = "AnnualPaymentOnCommitments")
                    protected BigDecimal annualPaymentOnCommitments;
                    @XmlAttribute(name = "CompleteFinancialAnalysis")
                    protected YesNoList completeFinancialAnalysis;
                    public List<Message.Content.Application.CompanyApplicant.FinancialAnalysis.CompanyFinancials> getCompanyFinancials() {
                        if (companyFinancials == null) {
                            companyFinancials = new ArrayList<Message.Content.Application.CompanyApplicant.FinancialAnalysis.CompanyFinancials>();
                        }
                        return this.companyFinancials;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class CompanyFinancials {
                        @XmlAttribute(name = "x_CompanyFinancials")
                        @XmlIDREF
                        protected Object xCompanyFinancials;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomePrevious {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.CompanyApplicant.IncomePrevious.Addback addback;
                    @XmlAttribute(name = "CompanyProfitAfterTax")
                    protected BigDecimal companyProfitAfterTax;
                    @XmlAttribute(name = "CompanyProfitBeforeTax")
                    protected BigDecimal companyProfitBeforeTax;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                    protected YesNoList incomeGreaterThanPreviousYear;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAttribute(name = "TaxOfficeAssessments")
                    protected YesNoList taxOfficeAssessments;
                    @XmlAttribute(name = "x_Accountant")
                    @XmlIDREF
                    protected Object xAccountant;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.CompanyApplicant.IncomePrevious.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarExpense")
                        protected BigDecimal carExpense;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToDirector")
                        protected BigDecimal paymentToDirector;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.CompanyApplicant.IncomePrevious.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.CompanyApplicant.IncomePrevious.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomePrior {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.CompanyApplicant.IncomePrior.Addback addback;
                    @XmlAttribute(name = "CompanyProfitAfterTax")
                    protected BigDecimal companyProfitAfterTax;
                    @XmlAttribute(name = "CompanyProfitBeforeTax")
                    protected BigDecimal companyProfitBeforeTax;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                    protected YesNoList incomeGreaterThanPreviousYear;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAttribute(name = "TaxOfficeAssessments")
                    protected YesNoList taxOfficeAssessments;
                    @XmlAttribute(name = "x_Accountant")
                    @XmlIDREF
                    protected Object xAccountant;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.CompanyApplicant.IncomePrior.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarExpense")
                        protected BigDecimal carExpense;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToDirector")
                        protected BigDecimal paymentToDirector;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.CompanyApplicant.IncomePrior.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.CompanyApplicant.IncomePrior.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomeRecent {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.CompanyApplicant.IncomeRecent.Addback addback;
                    @XmlAttribute(name = "CompanyProfitAfterTax")
                    protected BigDecimal companyProfitAfterTax;
                    @XmlAttribute(name = "CompanyProfitBeforeTax")
                    protected BigDecimal companyProfitBeforeTax;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                    protected YesNoList incomeGreaterThanPreviousYear;
                    @XmlAttribute(name = "ProofCode")
                    protected ProofCodeCompanyList proofCode;
                    @XmlAttribute(name = "ProofSighted")
                    protected YesNoList proofSighted;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAttribute(name = "TaxOfficeAssessments")
                    protected YesNoList taxOfficeAssessments;
                    @XmlAttribute(name = "x_Accountant")
                    @XmlIDREF
                    protected Object xAccountant;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.CompanyApplicant.IncomeRecent.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarExpense")
                        protected BigDecimal carExpense;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToDirector")
                        protected BigDecimal paymentToDirector;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.CompanyApplicant.IncomeRecent.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.CompanyApplicant.IncomeRecent.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomeYearToDate {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.CompanyApplicant.IncomeYearToDate.Addback addback;
                    @XmlAttribute(name = "CompanyProfitAfterTax")
                    protected BigDecimal companyProfitAfterTax;
                    @XmlAttribute(name = "CompanyProfitBeforeTax")
                    protected BigDecimal companyProfitBeforeTax;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarExpense")
                        protected BigDecimal carExpense;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToDirector")
                        protected BigDecimal paymentToDirector;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.CompanyApplicant.IncomeYearToDate.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Partner {
                    @XmlAttribute(name = "PartnerType")
                    protected PartnerTypeList partnerType;
                    @XmlAttribute(name = "PercentOwned")
                    protected BigDecimal percentOwned;
                    @XmlAttribute(name = "x_Partner")
                    @XmlIDREF
                    protected Object xPartner;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class RelatedLegalEntities {
                    @XmlAttribute(name = "CurrentCustomers")
                    protected String currentCustomers;
                    @XmlAttribute(name = "EntityCount")
                    protected BigInteger entityCount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Shareholder {
                    @XmlAttribute(name = "PercentOwned")
                    protected BigDecimal percentOwned;
                    @XmlAttribute(name = "x_Shareholder")
                    @XmlIDREF
                    protected Object xShareholder;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SourceOfWealth {
                    @XmlAttribute(name = "Detail")
                    protected String detail;
                    @XmlAttribute(name = "Percentage")
                    protected BigDecimal percentage;
                    @XmlAttribute(name = "Type")
                    protected SourceOfFundsTypeList type;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "balanceSheet",
                "currentMarketData",
                "profitAndLoss"
            })

@Data

@Entity
            public static class CompanyFinancials {
                @XmlElement(name = "BalanceSheet")
                protected Message.Content.Application.CompanyFinancials.BalanceSheet balanceSheet;
                @XmlElement(name = "CurrentMarketData")
                protected Message.Content.Application.CompanyFinancials.CurrentMarketData currentMarketData;
                @XmlElement(name = "ProfitAndLoss")
                protected Message.Content.Application.CompanyFinancials.ProfitAndLoss profitAndLoss;
                @XmlAttribute(name = "EndDate")
                protected XMLGregorianCalendar endDate;
                @XmlAttribute(name = "StartDate")
                protected XMLGregorianCalendar startDate;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "assets",
                    "liabilities"
                })

@Data

@Entity
                public static class BalanceSheet {
                    @XmlElement(name = "Assets")
                    protected Message.Content.Application.CompanyFinancials.BalanceSheet.Assets assets;
                    @XmlElement(name = "Liabilities")
                    protected Message.Content.Application.CompanyFinancials.BalanceSheet.Liabilities liabilities;
                    @XmlAttribute(name = "Equity")
                    protected BigDecimal equity;
                    @XmlAttribute(name = "NetAssets")
                    protected BigDecimal netAssets;
                    @XmlAttribute(name = "PaidUpCapital")
                    protected BigDecimal paidUpCapital;
                    @XmlAttribute(name = "RetainedEarnings")
                    protected BigDecimal retainedEarnings;
                    @XmlAttribute(name = "ShareholderFunds")
                    protected BigDecimal shareholderFunds;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Assets {
                        @XmlAttribute(name = "Cash")
                        protected BigDecimal cash;
                        @XmlAttribute(name = "CashAndCashEquivalents")
                        protected BigDecimal cashAndCashEquivalents;
                        @XmlAttribute(name = "Intangibles")
                        protected BigDecimal intangibles;
                        @XmlAttribute(name = "Inventory")
                        protected BigDecimal inventory;
                        @XmlAttribute(name = "TangibleAssets")
                        protected BigDecimal tangibleAssets;
                        @XmlAttribute(name = "TotalAssets")
                        protected BigDecimal totalAssets;
                        @XmlAttribute(name = "TotalCurrentAssets")
                        protected BigDecimal totalCurrentAssets;
                        @XmlAttribute(name = "TradeDebtors")
                        protected BigDecimal tradeDebtors;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Liabilities {
                        @XmlAttribute(name = "DebtAtNominalValue")
                        protected BigDecimal debtAtNominalValue;
                        @XmlAttribute(name = "TotalCurrentLiabilities")
                        protected BigDecimal totalCurrentLiabilities;
                        @XmlAttribute(name = "TotalLiabilities")
                        protected BigDecimal totalLiabilities;
                        @XmlAttribute(name = "TradeCreditors")
                        protected BigDecimal tradeCreditors;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class CurrentMarketData {
                    @XmlAttribute(name = "ValueOfCommonEquity")
                    protected BigDecimal valueOfCommonEquity;
                    @XmlAttribute(name = "ValueOfMinorityInterests")
                    protected BigDecimal valueOfMinorityInterests;
                    @XmlAttribute(name = "ValueOfPreferredEquity")
                    protected BigDecimal valueOfPreferredEquity;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ProfitAndLoss {
                    @XmlAttribute(name = "AmortisationExpense")
                    protected BigDecimal amortisationExpense;
                    @XmlAttribute(name = "CostOfGoodsSold")
                    protected BigDecimal costOfGoodsSold;
                    @XmlAttribute(name = "DepreciationExpense")
                    protected BigDecimal depreciationExpense;
                    @XmlAttribute(name = "EBIT")
                    protected BigDecimal ebit;
                    @XmlAttribute(name = "EBITDA")
                    protected BigDecimal ebitda;
                    @XmlAttribute(name = "GrossProfit")
                    protected BigDecimal grossProfit;
                    @XmlAttribute(name = "IncomeTax")
                    protected BigDecimal incomeTax;
                    @XmlAttribute(name = "InterestExpense")
                    protected BigDecimal interestExpense;
                    @XmlAttribute(name = "NetProfitBeforeTax")
                    protected BigDecimal netProfitBeforeTax;
                    @XmlAttribute(name = "PaymentsToDirectors")
                    protected BigDecimal paymentsToDirectors;
                    @XmlAttribute(name = "Sales")
                    protected BigDecimal sales;
                    @XmlAttribute(name = "TotalExpenses")
                    protected BigDecimal totalExpenses;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")

@Data

@Entity
            public static class ContributionFunds {
                @XmlAttribute(name = "Amount")
                protected BigDecimal amount;
                @XmlAttribute(name = "Description")
                protected String description;
                @XmlAttribute(name = "Loan")
                protected YesNoList loan;
                @XmlAttribute(name = "Type")
                protected ContributionFundsTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "x_AssociatedLoanAccount")
                @XmlIDREF
                protected Object xAssociatedLoanAccount;
                @XmlAttribute(name = "x_FundsHeldInAccount")
                @XmlIDREF
                protected Object xFundsHeldInAccount;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "categorySet",
                "result"
            })

@Data

@Entity
            public static class CustomerTransactionAnalysis {
                @XmlElement(name = "CategorySet")
                protected List<Message.Content.Application.CustomerTransactionAnalysis.CategorySet> categorySet;
                @XmlElement(name = "Result")
                protected Message.Content.Application.CustomerTransactionAnalysis.Result result;
                @XmlAttribute(name = "AnalysisID")
                protected String analysisID;
                @XmlAttribute(name = "DataAggregator")
                protected String dataAggregator;
                @XmlAttribute(name = "EndDate")
                protected XMLGregorianCalendar endDate;
                @XmlAttribute(name = "StartDate")
                protected XMLGregorianCalendar startDate;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.CustomerTransactionAnalysis.CategorySet> getCategorySet() {
                    if (categorySet == null) {
                        categorySet = new ArrayList<Message.Content.Application.CustomerTransactionAnalysis.CategorySet>();
                    }
                    return this.categorySet;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "aggregatedTransactions"
                })

@Data

@Entity
                public static class CategorySet {
                    @XmlElement(name = "AggregatedTransactions")
                    protected List<Message.Content.Application.CustomerTransactionAnalysis.CategorySet.AggregatedTransactions> aggregatedTransactions;
                    @XmlAttribute(name = "CategorySetName")
                    protected String categorySetName;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    public List<Message.Content.Application.CustomerTransactionAnalysis.CategorySet.AggregatedTransactions> getAggregatedTransactions() {
                        if (aggregatedTransactions == null) {
                            aggregatedTransactions = new ArrayList<Message.Content.Application.CustomerTransactionAnalysis.CategorySet.AggregatedTransactions>();
                        }
                        return this.aggregatedTransactions;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class AggregatedTransactions {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "AmountOnMonthlyBasis")
                        protected BigDecimal amountOnMonthlyBasis;
                        @XmlAttribute(name = "Category")
                        protected AggregatedTransactionsCategoryTypeList category;
                        @XmlAttribute(name = "OtherCategory")
                        protected String otherCategory;
                        @XmlAttribute(name = "OtherCategoryCode")
                        protected String otherCategoryCode;
                        @XmlAttribute(name = "Type")
                        protected TransactionTypeList type;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Result {
                    @XmlAttribute(name = "ManualCheckDetails")
                    protected String manualCheckDetails;
                    @XmlAttribute(name = "ReferForManualCheck")
                    protected YesNoList referForManualCheck;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "brokerDeclarations"
            })

@Data

@Entity
            public static class Declarations {
                @XmlElement(name = "BrokerDeclarations")
                protected Message.Content.Application.Declarations.BrokerDeclarations brokerDeclarations;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class BrokerDeclarations {
                    @XmlAttribute(name = "InterestOnlyMeetsRequirements")
                    protected YesNoList interestOnlyMeetsRequirements;
                    @XmlAttribute(name = "InterestOnlyMeetsRequirementsDescription")
                    protected String interestOnlyMeetsRequirementsDescription;
                    @XmlAttribute(name = "InterestOnlyRisksExplained")
                    protected YesNoList interestOnlyRisksExplained;
                    @XmlAttribute(name = "InterestOnlyRisksExplainedDescription")
                    protected String interestOnlyRisksExplainedDescription;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "accountOwners",
                "commission",
                "documentationInstructions",
                "featuresSelected",
                "_package",
                "sourceOfInitialDeposit"
            })

@Data

@Entity
            public static class DepositAccountDetails {
                @XmlElement(name = "AccountOwners")
                protected PercentOwnedType accountOwners;
                @XmlElement(name = "Commission")
                protected Message.Content.Application.DepositAccountDetails.Commission commission;
                @XmlElement(name = "DocumentationInstructions")
                protected DocumentationInstructionsType documentationInstructions;
                @XmlElement(name = "FeaturesSelected")
                protected List<Message.Content.Application.DepositAccountDetails.FeaturesSelected> featuresSelected;
                @XmlElement(name = "Package")
                protected Message.Content.Application.DepositAccountDetails.Package _package;
                @XmlElement(name = "SourceOfInitialDeposit")
                protected List<Message.Content.Application.DepositAccountDetails.SourceOfInitialDeposit> sourceOfInitialDeposit;
                @XmlAttribute(name = "InitialDepositAmount")
                protected BigDecimal initialDepositAmount;
                @XmlAttribute(name = "OriginatorReferenceID")
                protected String originatorReferenceID;
                @XmlAttribute(name = "ProductCode")
                protected String productCode;
                @XmlAttribute(name = "ProductName")
                protected String productName;
                @XmlAttribute(name = "ProposedAnnualInterestRate")
                protected BigDecimal proposedAnnualInterestRate;
                @XmlAttribute(name = "StatementCycle")
                protected StatementCycleList statementCycle;
                @XmlAttribute(name = "Type")
                protected DepositAccountTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.DepositAccountDetails.FeaturesSelected> getFeaturesSelected() {
                    if (featuresSelected == null) {
                        featuresSelected = new ArrayList<Message.Content.Application.DepositAccountDetails.FeaturesSelected>();
                    }
                    return this.featuresSelected;
                }
                public List<Message.Content.Application.DepositAccountDetails.SourceOfInitialDeposit> getSourceOfInitialDeposit() {
                    if (sourceOfInitialDeposit == null) {
                        sourceOfInitialDeposit = new ArrayList<Message.Content.Application.DepositAccountDetails.SourceOfInitialDeposit>();
                    }
                    return this.sourceOfInitialDeposit;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Commission {
                    @XmlAttribute(name = "CommissionAmount")
                    protected BigDecimal commissionAmount;
                    @XmlAttribute(name = "CommissionPaid")
                    protected YesNoList commissionPaid;
                    @XmlAttribute(name = "CommissionStructure")
                    protected CommissionStructureList commissionStructure;
                    @XmlAttribute(name = "OtherCommissionStructureDescription")
                    protected String otherCommissionStructureDescription;
                    @XmlAttribute(name = "PromotionCode")
                    protected String promotionCode;
                    @XmlAttribute(name = "ThirdPartyReferee")
                    protected YesNoList thirdPartyReferee;
                    @XmlAttribute(name = "Trail")
                    protected BigDecimal trail;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "extraFeature"
                })

@Data

@Entity
                public static class FeaturesSelected {
                    @XmlElement(name = "ExtraFeature")
                    protected List<Message.Content.Application.DepositAccountDetails.FeaturesSelected.ExtraFeature> extraFeature;
                    @XmlAttribute(name = "ChequeBook")
                    protected YesNoList chequeBook;
                    @XmlAttribute(name = "CreditCard")
                    protected YesNoList creditCard;
                    @XmlAttribute(name = "DebitCard")
                    protected YesNoList debitCard;
                    @XmlAttribute(name = "DepositBook")
                    protected YesNoList depositBook;
                    @XmlAttribute(name = "EFTPOSCard")
                    protected YesNoList eftposCard;
                    @XmlAttribute(name = "StatementEmailDelivery")
                    protected YesNoList statementEmailDelivery;
                    @XmlAttribute(name = "StatementPaperDelivery")
                    protected YesNoList statementPaperDelivery;
                    @XmlAttribute(name = "x_Applicant")
                    @XmlIDREF
                    protected Object xApplicant;
                    public List<Message.Content.Application.DepositAccountDetails.FeaturesSelected.ExtraFeature> getExtraFeature() {
                        if (extraFeature == null) {
                            extraFeature = new ArrayList<Message.Content.Application.DepositAccountDetails.FeaturesSelected.ExtraFeature>();
                        }
                        return this.extraFeature;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ExtraFeature {
                        @XmlAttribute(name = "Description")
                        protected String description;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Package {
                    @XmlAttribute(name = "Category")
                    protected String category;
                    @XmlAttribute(name = "Code")
                    protected String code;
                    @XmlAttribute(name = "MemberID")
                    protected String memberID;
                    @XmlAttribute(name = "Name")
                    protected String name;
                    @XmlAttribute(name = "OptionCode")
                    protected String optionCode;
                    @XmlAttribute(name = "Organisation")
                    protected String organisation;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SourceOfInitialDeposit {
                    @XmlAttribute(name = "Details")
                    protected String details;
                    @XmlAttribute(name = "Percentage")
                    protected BigDecimal percentage;
                    @XmlAttribute(name = "Type")
                    protected SourceOfFundsTypeList type;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "comment"
            })

@Data

@Entity
            public static class DetailedComment {
                @XmlElement(name = "Comment")
                protected String comment;
                @XmlAttribute(name = "ContextDescription")
                protected String contextDescription;
                @XmlAttribute(name = "CreatedDate")
                protected XMLGregorianCalendar createdDate;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "x_Author")
                @XmlIDREF
                protected Object xAuthor;
                @XmlAttribute(name = "x_Context")
                @XmlIDREF
                protected Object xContext;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "dependant",
                "educationExpenses",
                "expenseDetails"
            })

@Data

@Entity
            public static class Household {
                @XmlElement(name = "Dependant")
                protected List<Message.Content.Application.Household.Dependant> dependant;
                @XmlElement(name = "EducationExpenses")
                protected Message.Content.Application.Household.EducationExpenses educationExpenses;
                @XmlElement(name = "ExpenseDetails")
                protected Message.Content.Application.Household.ExpenseDetails expenseDetails;
                @XmlAttribute(name = "Name")
                protected String name;
                @XmlAttribute(name = "NumberOfAdults")
                protected BigInteger numberOfAdults;
                @XmlAttribute(name = "NumberOfDependants")
                protected BigInteger numberOfDependants;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.Household.Dependant> getDependant() {
                    if (dependant == null) {
                        dependant = new ArrayList<Message.Content.Application.Household.Dependant>();
                    }
                    return this.dependant;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "financialProvider"
                })

@Data

@Entity
                public static class Dependant {
                    @XmlElement(name = "FinancialProvider")
                    protected List<Message.Content.Application.Household.Dependant.FinancialProvider> financialProvider;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "DateOfBirth")
                    protected XMLGregorianCalendar dateOfBirth;
                    @XmlAttribute(name = "Name")
                    protected String name;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    public List<Message.Content.Application.Household.Dependant.FinancialProvider> getFinancialProvider() {
                        if (financialProvider == null) {
                            financialProvider = new ArrayList<Message.Content.Application.Household.Dependant.FinancialProvider>();
                        }
                        return this.financialProvider;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class FinancialProvider {
                        @XmlAttribute(name = "x_Party")
                        @XmlIDREF
                        protected Object xParty;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class EducationExpenses {
                    @XmlAttribute(name = "NumberOfAdultsInFullTimeStudy")
                    protected BigInteger numberOfAdultsInFullTimeStudy;
                    @XmlAttribute(name = "NumberOfAdultsInPartTimeStudy")
                    protected BigInteger numberOfAdultsInPartTimeStudy;
                    @XmlAttribute(name = "NumberOfChildrenInPrivateSchool")
                    protected BigInteger numberOfChildrenInPrivateSchool;
                    @XmlAttribute(name = "NumberOfChildrenInPublicSchool")
                    protected BigInteger numberOfChildrenInPublicSchool;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "livingExpense",
                    "otherCommitment"
                })

@Data

@Entity
                public static class ExpenseDetails {
                    @XmlElement(name = "LivingExpense")
                    protected List<Message.Content.Application.Household.ExpenseDetails.LivingExpense> livingExpense;
                    @XmlElement(name = "OtherCommitment")
                    protected List<Message.Content.Application.Household.ExpenseDetails.OtherCommitment> otherCommitment;
                    public List<Message.Content.Application.Household.ExpenseDetails.LivingExpense> getLivingExpense() {
                        if (livingExpense == null) {
                            livingExpense = new ArrayList<Message.Content.Application.Household.ExpenseDetails.LivingExpense>();
                        }
                        return this.livingExpense;
                    }
                    public List<Message.Content.Application.Household.ExpenseDetails.OtherCommitment> getOtherCommitment() {
                        if (otherCommitment == null) {
                            otherCommitment = new ArrayList<Message.Content.Application.Household.ExpenseDetails.OtherCommitment>();
                        }
                        return this.otherCommitment;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "percentResponsible"
                    })

@Data

@Entity
                    public static class LivingExpense {
                        @XmlElement(name = "PercentResponsible")
                        protected PercentOwnedType percentResponsible;
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Category")
                        protected LivingExpenseCategoryList category;
                        @XmlAttribute(name = "Description")
                        protected String description;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyFullList frequency;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "percentResponsible"
                    })

@Data

@Entity
                    public static class OtherCommitment {
                        @XmlElement(name = "PercentResponsible")
                        protected PercentOwnedType percentResponsible;
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Category")
                        protected OtherCommitmentCategoryList category;
                        @XmlAttribute(name = "Description")
                        protected String description;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyFullList frequency;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "associatedLoanAccount",
                "commissionPayable",
                "insuredParty",
                "premium"
            })

@Data

@Entity
            public static class Insurance {
                @XmlElement(name = "AssociatedLoanAccount")
                protected List<Message.Content.Application.Insurance.AssociatedLoanAccount> associatedLoanAccount;
                @XmlElement(name = "CommissionPayable")
                protected Message.Content.Application.Insurance.CommissionPayable commissionPayable;
                @XmlElement(name = "InsuredParty")
                protected List<Message.Content.Application.Insurance.InsuredParty> insuredParty;
                @XmlElement(name = "Premium")
                protected Message.Content.Application.Insurance.Premium premium;
                @XmlAttribute(name = "Description")
                protected String description;
                @XmlAttribute(name = "EffectiveDate")
                protected XMLGregorianCalendar effectiveDate;
                @XmlAttribute(name = "ExpiryDate")
                protected XMLGregorianCalendar expiryDate;
                @XmlAttribute(name = "InsuranceType")
                protected InsuranceTypeList insuranceType;
                @XmlAttribute(name = "InsuredAmount")
                protected BigDecimal insuredAmount;
                @XmlAttribute(name = "Insurer")
                protected InsurerList insurer;
                @XmlAttribute(name = "OtherInsurerName")
                protected String otherInsurerName;
                @XmlAttribute(name = "PolicyNumber")
                protected String policyNumber;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.Insurance.AssociatedLoanAccount> getAssociatedLoanAccount() {
                    if (associatedLoanAccount == null) {
                        associatedLoanAccount = new ArrayList<Message.Content.Application.Insurance.AssociatedLoanAccount>();
                    }
                    return this.associatedLoanAccount;
                }
                public List<Message.Content.Application.Insurance.InsuredParty> getInsuredParty() {
                    if (insuredParty == null) {
                        insuredParty = new ArrayList<Message.Content.Application.Insurance.InsuredParty>();
                    }
                    return this.insuredParty;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AssociatedLoanAccount {
                    @XmlAttribute(name = "x_AssociatedLoanAccount")
                    @XmlIDREF
                    protected Object xAssociatedLoanAccount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class CommissionPayable {
                    @XmlAttribute(name = "Amount")
                    protected BigDecimal amount;
                    @XmlAttribute(name = "Percentage")
                    protected BigDecimal percentage;
                    @XmlAttribute(name = "x_Payer")
                    @XmlIDREF
                    protected Object xPayer;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class InsuredParty {
                    @XmlAttribute(name = "x_InsuredParty")
                    @XmlIDREF
                    protected Object xInsuredParty;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Premium {
                    @XmlAttribute(name = "Amount")
                    protected BigDecimal amount;
                    @XmlAttribute(name = "Frequency")
                    protected FrequencyShortList frequency;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "associatedLoanAccount",
                "guarantor",
                "security"
            })

@Data

@Entity
            public static class LendingGuarantee {
                @XmlElement(name = "AssociatedLoanAccount")
                protected List<Message.Content.Application.LendingGuarantee.AssociatedLoanAccount> associatedLoanAccount;
                @XmlElement(name = "Guarantor")
                protected List<Message.Content.Application.LendingGuarantee.Guarantor> guarantor;
                @XmlElement(name = "Security")
                protected List<Message.Content.Application.LendingGuarantee.Security> security;
                @XmlAttribute(name = "CrossGuarantee")
                protected YesNoList crossGuarantee;
                @XmlAttribute(name = "Limit")
                protected BigDecimal limit;
                @XmlAttribute(name = "Limited")
                protected YesNoList limited;
                @XmlAttribute(name = "LimitedToFacilityAmount")
                protected YesNoList limitedToFacilityAmount;
                @XmlAttribute(name = "Type")
                protected LendingGuaranteeTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.LendingGuarantee.AssociatedLoanAccount> getAssociatedLoanAccount() {
                    if (associatedLoanAccount == null) {
                        associatedLoanAccount = new ArrayList<Message.Content.Application.LendingGuarantee.AssociatedLoanAccount>();
                    }
                    return this.associatedLoanAccount;
                }
                public List<Message.Content.Application.LendingGuarantee.Guarantor> getGuarantor() {
                    if (guarantor == null) {
                        guarantor = new ArrayList<Message.Content.Application.LendingGuarantee.Guarantor>();
                    }
                    return this.guarantor;
                }
                public List<Message.Content.Application.LendingGuarantee.Security> getSecurity() {
                    if (security == null) {
                        security = new ArrayList<Message.Content.Application.LendingGuarantee.Security>();
                    }
                    return this.security;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AssociatedLoanAccount {
                    @XmlAttribute(name = "x_AssociatedLoanAccount")
                    @XmlIDREF
                    protected Object xAssociatedLoanAccount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "interview",
                    "loanWriterConfirmations",
                    "securityGuarantee",
                    "servicingGuarantee"
                })

@Data

@Entity
                public static class Guarantor {
                    @XmlElement(name = "Interview")
                    protected Message.Content.Application.LendingGuarantee.Guarantor.Interview interview;
                    @XmlElement(name = "LoanWriterConfirmations")
                    protected Message.Content.Application.LendingGuarantee.Guarantor.LoanWriterConfirmations loanWriterConfirmations;
                    @XmlElement(name = "SecurityGuarantee")
                    protected Message.Content.Application.LendingGuarantee.Guarantor.SecurityGuarantee securityGuarantee;
                    @XmlElement(name = "ServicingGuarantee")
                    protected Message.Content.Application.LendingGuarantee.Guarantor.ServicingGuarantee servicingGuarantee;
                    @XmlAttribute(name = "AccessType")
                    protected GuarantorAccessList accessType;
                    @XmlAttribute(name = "AdvisedToSeekIndependentAdvice")
                    protected YesNoList advisedToSeekIndependentAdvice;
                    @XmlAttribute(name = "ConfirmNotUnderPressure")
                    protected YesNoList confirmNotUnderPressure;
                    @XmlAttribute(name = "DemonstratesReadingEnglish")
                    protected YesNoList demonstratesReadingEnglish;
                    @XmlAttribute(name = "DocumentationDeliveryMethod")
                    protected DocumentationDeliveryMethodList documentationDeliveryMethod;
                    @XmlAttribute(name = "IndependentAdviceTypeRequired")
                    protected IndependentAdviceTypeRequiredList independentAdviceTypeRequired;
                    @XmlAttribute(name = "IsUnderPowerOfAttorney")
                    protected YesNoList isUnderPowerOfAttorney;
                    @XmlAttribute(name = "SuspectDifficultyUnderstandingEnglish")
                    protected YesNoList suspectDifficultyUnderstandingEnglish;
                    @XmlAttribute(name = "SuspectDifficultyUnderstandingObligations")
                    protected YesNoList suspectDifficultyUnderstandingObligations;
                    @XmlAttribute(name = "SuspectMisrepresentation")
                    protected YesNoList suspectMisrepresentation;
                    @XmlAttribute(name = "SuspectUnderBorrowerInfluence")
                    protected YesNoList suspectUnderBorrowerInfluence;
                    @XmlAttribute(name = "SuspectUnderPressure")
                    protected YesNoList suspectUnderPressure;
                    @XmlAttribute(name = "SuspectUnfairConduct")
                    protected YesNoList suspectUnfairConduct;
                    @XmlAttribute(name = "UnderstandsGuaranteeSigningPeriod")
                    protected YesNoList understandsGuaranteeSigningPeriod;
                    @XmlAttribute(name = "UnderstandsGuarantorObligations")
                    protected YesNoList understandsGuarantorObligations;
                    @XmlAttribute(name = "x_Guarantor")
                    @XmlIDREF
                    protected Object xGuarantor;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Interview {
                        @XmlAttribute(name = "Date")
                        protected XMLGregorianCalendar date;
                        @XmlAttribute(name = "IsFaceToFace")
                        protected YesNoList isFaceToFace;
                        @XmlAttribute(name = "IsOnlyPersonPresent")
                        protected YesNoList isOnlyPersonPresent;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class LoanWriterConfirmations {
                        @XmlAttribute(name = "AdvisedDocumentsImminentIfSuccessful")
                        protected YesNoList advisedDocumentsImminentIfSuccessful;
                        @XmlAttribute(name = "AdvisedIdentificationProcessRequired")
                        protected YesNoList advisedIdentificationProcessRequired;
                        @XmlAttribute(name = "AdvisedInformationUsedInAssessment")
                        protected YesNoList advisedInformationUsedInAssessment;
                        @XmlAttribute(name = "AdvisedOfWithdrawalInstructions")
                        protected YesNoList advisedOfWithdrawalInstructions;
                        @XmlAttribute(name = "CompletedStatementOfPosition")
                        protected YesNoList completedStatementOfPosition;
                        @XmlAttribute(name = "ObtainedAgreementForJointStatementOfPosition")
                        protected YesNoList obtainedAgreementForJointStatementOfPosition;
                        @XmlAttribute(name = "ObtainedElectronicCommunicationConsent")
                        protected YesNoList obtainedElectronicCommunicationConsent;
                        @XmlAttribute(name = "ObtainedSignedDeclaration")
                        protected YesNoList obtainedSignedDeclaration;
                        @XmlAttribute(name = "VerifiedGuarantorIncome")
                        protected YesNoList verifiedGuarantorIncome;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class SecurityGuarantee {
                        @XmlAttribute(name = "ConfirmCouldMeetLoanRepayments")
                        protected YesNoList confirmCouldMeetLoanRepayments;
                        @XmlAttribute(name = "ConfirmWouldSellFamilyHome")
                        protected YesNoList confirmWouldSellFamilyHome;
                        @XmlAttribute(name = "UnderstandsSecurityGuarantee")
                        protected YesNoList understandsSecurityGuarantee;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ServicingGuarantee {
                        @XmlAttribute(name = "ConfirmIsBenefitToFamily")
                        protected YesNoList confirmIsBenefitToFamily;
                        @XmlAttribute(name = "ConfirmRelationshipToBorrower")
                        protected YesNoList confirmRelationshipToBorrower;
                        @XmlAttribute(name = "ConfirmUnderstandsBorrowerReliance")
                        protected YesNoList confirmUnderstandsBorrowerReliance;
                        @XmlAttribute(name = "ConfirmUnderstandsRepaymentsRequired")
                        protected YesNoList confirmUnderstandsRepaymentsRequired;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "securityAgreement"
                })

@Data

@Entity
                public static class Security {
                    @XmlElement(name = "SecurityAgreement")
                    protected SecurityAgreementType securityAgreement;
                    @XmlAttribute(name = "Priority")
                    protected SecurityPriorityList priority;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "accountNumber",
                "arrears",
                "continuingRepayment",
                "discountMargin",
                "documentationInstructions",
                "dsh",
                "featuresSelected",
                "lendingPurpose",
                "originalAmountRequestedInForeignCurrency",
                "originalTerm",
                "percentOwned",
                "rateComposition",
                "remainingTerm",
                "repayment",
                "security",
                "software",
                "termsAndConditions"
            })

@Data

@Entity
            public static class Liability {
                @XmlElement(name = "AccountNumber")
                protected FinancialAccountType accountNumber;
                @XmlElement(name = "Arrears")
                protected Message.Content.Application.Liability.Arrears arrears;
                @XmlElement(name = "ContinuingRepayment")
                protected List<Message.Content.Application.Liability.ContinuingRepayment> continuingRepayment;
                @XmlElement(name = "DiscountMargin")
                protected List<Message.Content.Application.Liability.DiscountMargin> discountMargin;
                @XmlElement(name = "DocumentationInstructions")
                protected DocumentationInstructionsType documentationInstructions;
                @XmlElement(name = "DSH")
                protected Message.Content.Application.Liability.DSH dsh;
                @XmlElement(name = "FeaturesSelected")
                protected Message.Content.Application.Liability.FeaturesSelected featuresSelected;
                @XmlElement(name = "LendingPurpose")
                protected List<Message.Content.Application.Liability.LendingPurpose> lendingPurpose;
                @XmlElement(name = "OriginalAmountRequestedInForeignCurrency")
                protected AmountInForeignCurrencyType originalAmountRequestedInForeignCurrency;
                @XmlElement(name = "OriginalTerm")
                protected Message.Content.Application.Liability.OriginalTerm originalTerm;
                @XmlElement(name = "PercentOwned")
                protected Message.Content.Application.Liability.PercentOwned percentOwned;
                @XmlElement(name = "RateComposition")
                protected List<Message.Content.Application.Liability.RateComposition> rateComposition;
                @XmlElement(name = "RemainingTerm")
                protected Message.Content.Application.Liability.RemainingTerm remainingTerm;
                @XmlElement(name = "Repayment")
                protected List<Message.Content.Application.Liability.Repayment> repayment;
                @XmlElement(name = "Security")
                protected List<Message.Content.Application.Liability.Security> security;
                @XmlElement(name = "Software")
                protected Message.Content.Application.Liability.Software software;
                @XmlElement(name = "TermsAndConditions")
                protected List<Message.Content.Application.Liability.TermsAndConditions> termsAndConditions;
                @XmlAttribute(name = "AccelerationPercentage")
                protected BigDecimal accelerationPercentage;
                @XmlAttribute(name = "AnnualInterestRate")
                protected BigDecimal annualInterestRate;
                @XmlAttribute(name = "AvailableForRedrawAmount")
                protected BigDecimal availableForRedrawAmount;
                @XmlAttribute(name = "BalloonRepaymentAmount")
                protected BigDecimal balloonRepaymentAmount;
                @XmlAttribute(name = "BalloonRepaymentDate")
                protected XMLGregorianCalendar balloonRepaymentDate;
                @XmlAttribute(name = "ClearingFromOtherSource")
                protected ClearingFromOtherSourceList clearingFromOtherSource;
                @XmlAttribute(name = "ClearingFromOtherSourceAmount")
                protected BigDecimal clearingFromOtherSourceAmount;
                @XmlAttribute(name = "ClearingFromThisLoan")
                protected ClearingFromThisLoanList clearingFromThisLoan;
                @XmlAttribute(name = "ClearingFromThisLoanAmount")
                protected BigDecimal clearingFromThisLoanAmount;
                @XmlAttribute(name = "ClosingOnSettlement")
                protected YesNoList closingOnSettlement;
                @XmlAttribute(name = "CreditCardType")
                protected CreditCardTypeList creditCardType;
                @XmlAttribute(name = "CreditLimit")
                protected BigDecimal creditLimit;
                @XmlAttribute(name = "CreditRiskGrade")
                protected String creditRiskGrade;
                @XmlAttribute(name = "Description")
                protected String description;
                @XmlAttribute(name = "HasArrears")
                protected YesNoList hasArrears;
                @XmlAttribute(name = "HasPreviousArrears")
                protected YesNoList hasPreviousArrears;
                @XmlAttribute(name = "HasUndrawnFunds")
                protected YesNoList hasUndrawnFunds;
                @XmlAttribute(name = "InAdvanceAmount")
                protected BigDecimal inAdvanceAmount;
                @XmlAttribute(name = "InterestCalculationFrequency")
                protected InterestChargeFrequencyList interestCalculationFrequency;
                @XmlAttribute(name = "InterestChargeFrequency")
                protected InterestChargeFrequencyList interestChargeFrequency;
                @XmlAttribute(name = "IsOriginalAmountRequestedInForeignCurrency")
                protected YesNoList isOriginalAmountRequestedInForeignCurrency;
                @XmlAttribute(name = "LenderAssessmentReason")
                protected String lenderAssessmentReason;
                @XmlAttribute(name = "LenderAssessmentRequired")
                protected YesNoList lenderAssessmentRequired;
                @XmlAttribute(name = "LimitExceededCurrently")
                protected YesNoList limitExceededCurrently;
                @XmlAttribute(name = "LimitExceededPreviously")
                protected YesNoList limitExceededPreviously;
                @XmlAttribute(name = "MaturityDate")
                protected XMLGregorianCalendar maturityDate;
                @XmlAttribute(name = "MinimumRepaymentRate")
                protected BigDecimal minimumRepaymentRate;
                @XmlAttribute(name = "NCCPStatus")
                protected NccpStatusList nccpStatus;
                @XmlAttribute(name = "NegativelyGeared")
                protected YesNoList negativelyGeared;
                @XmlAttribute(name = "NegativelyGearedPercentage")
                protected BigDecimal negativelyGearedPercentage;
                @XmlAttribute(name = "NewLimit")
                protected BigDecimal newLimit;
                @XmlAttribute(name = "NonCapitalisedInterest")
                protected BigDecimal nonCapitalisedInterest;
                @XmlAttribute(name = "OriginalAmount")
                protected BigDecimal originalAmount;
                @XmlAttribute(name = "OriginalLoanPurpose")
                protected PrimaryPurposeLoanPurposeList originalLoanPurpose;
                @XmlAttribute(name = "OriginationDate")
                protected XMLGregorianCalendar originationDate;
                @XmlAttribute(name = "OutstandingBalance")
                protected BigDecimal outstandingBalance;
                @XmlAttribute(name = "Overdrawn")
                protected YesNoList overdrawn;
                @XmlAttribute(name = "ProductCode")
                protected String productCode;
                @XmlAttribute(name = "ProductName")
                protected String productName;
                @XmlAttribute(name = "RefinanceAmount")
                protected BigDecimal refinanceAmount;
                @XmlAttribute(name = "RefinanceCosts")
                protected BigDecimal refinanceCosts;
                @XmlAttribute(name = "RepaidDate")
                protected XMLGregorianCalendar repaidDate;
                @XmlAttribute(name = "Secured")
                protected YesNoList secured;
                @XmlAttribute(name = "SMSFLoan")
                protected YesNoList smsfLoan;
                @XmlAttribute(name = "Suspended")
                protected YesNoList suspended;
                @XmlAttribute(name = "Type")
                protected LiabilityTypeList type;
                @XmlAttribute(name = "UndrawnAmount")
                protected BigDecimal undrawnAmount;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "Verified")
                protected YesNoList verified;
                @XmlAttribute(name = "WrittenOff")
                protected YesNoList writtenOff;
                @XmlAttribute(name = "x_CustomerTransactionAnalysis")
                @XmlIDREF
                protected Object xCustomerTransactionAnalysis;
                public List<Message.Content.Application.Liability.ContinuingRepayment> getContinuingRepayment() {
                    if (continuingRepayment == null) {
                        continuingRepayment = new ArrayList<Message.Content.Application.Liability.ContinuingRepayment>();
                    }
                    return this.continuingRepayment;
                }
                public List<Message.Content.Application.Liability.DiscountMargin> getDiscountMargin() {
                    if (discountMargin == null) {
                        discountMargin = new ArrayList<Message.Content.Application.Liability.DiscountMargin>();
                    }
                    return this.discountMargin;
                }
                public List<Message.Content.Application.Liability.LendingPurpose> getLendingPurpose() {
                    if (lendingPurpose == null) {
                        lendingPurpose = new ArrayList<Message.Content.Application.Liability.LendingPurpose>();
                    }
                    return this.lendingPurpose;
                }
                public List<Message.Content.Application.Liability.RateComposition> getRateComposition() {
                    if (rateComposition == null) {
                        rateComposition = new ArrayList<Message.Content.Application.Liability.RateComposition>();
                    }
                    return this.rateComposition;
                }
                public List<Message.Content.Application.Liability.Repayment> getRepayment() {
                    if (repayment == null) {
                        repayment = new ArrayList<Message.Content.Application.Liability.Repayment>();
                    }
                    return this.repayment;
                }
                public List<Message.Content.Application.Liability.Security> getSecurity() {
                    if (security == null) {
                        security = new ArrayList<Message.Content.Application.Liability.Security>();
                    }
                    return this.security;
                }
                public List<Message.Content.Application.Liability.TermsAndConditions> getTermsAndConditions() {
                    if (termsAndConditions == null) {
                        termsAndConditions = new ArrayList<Message.Content.Application.Liability.TermsAndConditions>();
                    }
                    return this.termsAndConditions;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Arrears {
                    @XmlAttribute(name = "Amount")
                    protected BigDecimal amount;
                    @XmlAttribute(name = "NumberOfMissedPayments")
                    protected BigInteger numberOfMissedPayments;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ContinuingRepayment {
                    @XmlAttribute(name = "LoanPaymentScheduleType")
                    protected LoanPaymentScheduleTypeList loanPaymentScheduleType;
                    @XmlAttribute(name = "MinimumAmount")
                    protected BigDecimal minimumAmount;
                    @XmlAttribute(name = "PaymentTiming")
                    protected PaymentTimingList paymentTiming;
                    @XmlAttribute(name = "PaymentType")
                    protected PaymentTypeList paymentType;
                    @XmlAttribute(name = "RemainingRepayments")
                    protected BigInteger remainingRepayments;
                    @XmlAttribute(name = "RepaymentAmount")
                    protected BigDecimal repaymentAmount;
                    @XmlAttribute(name = "RepaymentFrequency")
                    protected RepaymentFrequencyList repaymentFrequency;
                    @XmlAttribute(name = "TaxDeductible")
                    protected YesNoList taxDeductible;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class DSH {
                    @XmlAttribute(name = "AssignmentCertificate")
                    protected String assignmentCertificate;
                    @XmlAttribute(name = "EntitlementCertificate")
                    protected String entitlementCertificate;
                    @XmlAttribute(name = "FileNumber")
                    protected String fileNumber;
                    @XmlAttribute(name = "Subsidised")
                    protected YesNoList subsidised;
                    @XmlAttribute(name = "Supplement")
                    protected YesNoList supplement;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class DiscountMargin {
                    @XmlAttribute(name = "DiscountedAmount")
                    protected BigDecimal discountedAmount;
                    @XmlAttribute(name = "DiscountRate")
                    protected BigDecimal discountRate;
                    @XmlAttribute(name = "DiscountReason")
                    protected String discountReason;
                    @XmlAttribute(name = "Duration")
                    protected BigInteger duration;
                    @XmlAttribute(name = "DurationUnits")
                    protected DurationUnitsList durationUnits;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "extraFeature",
                    "offsetAccount"
                })

@Data

@Entity
                public static class FeaturesSelected {
                    @XmlElement(name = "ExtraFeature")
                    protected List<Message.Content.Application.Liability.FeaturesSelected.ExtraFeature> extraFeature;
                    @XmlElement(name = "OffsetAccount")
                    protected List<Message.Content.Application.Liability.FeaturesSelected.OffsetAccount> offsetAccount;
                    @XmlAttribute(name = "ChequeBook")
                    protected YesNoList chequeBook;
                    @XmlAttribute(name = "CreditCard")
                    protected YesNoList creditCard;
                    @XmlAttribute(name = "DebitCard")
                    protected YesNoList debitCard;
                    @XmlAttribute(name = "DepositBook")
                    protected YesNoList depositBook;
                    @XmlAttribute(name = "HolidayLeave")
                    protected YesNoList holidayLeave;
                    @XmlAttribute(name = "Offset")
                    protected YesNoList offset;
                    @XmlAttribute(name = "OffsetPercentage")
                    protected BigDecimal offsetPercentage;
                    @XmlAttribute(name = "ParentalLeave")
                    protected YesNoList parentalLeave;
                    @XmlAttribute(name = "PartialOffset")
                    protected YesNoList partialOffset;
                    @XmlAttribute(name = "Portability")
                    protected YesNoList portability;
                    @XmlAttribute(name = "ProgressiveDraw")
                    protected YesNoList progressiveDraw;
                    @XmlAttribute(name = "RateLock")
                    protected YesNoList rateLock;
                    @XmlAttribute(name = "Redraw")
                    protected YesNoList redraw;
                    @XmlAttribute(name = "SplitLoan")
                    protected YesNoList splitLoan;
                    public List<Message.Content.Application.Liability.FeaturesSelected.ExtraFeature> getExtraFeature() {
                        if (extraFeature == null) {
                            extraFeature = new ArrayList<Message.Content.Application.Liability.FeaturesSelected.ExtraFeature>();
                        }
                        return this.extraFeature;
                    }
                    public List<Message.Content.Application.Liability.FeaturesSelected.OffsetAccount> getOffsetAccount() {
                        if (offsetAccount == null) {
                            offsetAccount = new ArrayList<Message.Content.Application.Liability.FeaturesSelected.OffsetAccount>();
                        }
                        return this.offsetAccount;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ExtraFeature {
                        @XmlAttribute(name = "Description")
                        protected String description;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "accountNumber"
                    })

@Data

@Entity
                    public static class OffsetAccount {
                        @XmlElement(name = "AccountNumber")
                        protected FinancialAccountType accountNumber;
                        @XmlAttribute(name = "IsExisting")
                        protected YesNoList isExisting;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "x_Account")
                        @XmlIDREF
                        protected Object xAccount;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class LendingPurpose {
                    @XmlAttribute(name = "ABSLendingPurpose")
                    protected String absLendingPurpose;
                    @XmlAttribute(name = "ABSLendingPurposeCode")
                    protected AbsLendingPurposeCodeList absLendingPurposeCode;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "LenderCode")
                    protected String lenderCode;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "distinctLoanPeriod"
                })

@Data

@Entity
                public static class OriginalTerm {
                    @XmlElement(name = "DistinctLoanPeriod")
                    protected List<Message.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod> distinctLoanPeriod;
                    @XmlAttribute(name = "InterestOnlyEndDate")
                    protected XMLGregorianCalendar interestOnlyEndDate;
                    @XmlAttribute(name = "InterestType")
                    protected InterestTypeList interestType;
                    @XmlAttribute(name = "InterestTypeDuration")
                    protected BigInteger interestTypeDuration;
                    @XmlAttribute(name = "InterestTypeUnits")
                    protected LoanTermUnitsList interestTypeUnits;
                    @XmlAttribute(name = "PaymentType")
                    protected PaymentTypeList paymentType;
                    @XmlAttribute(name = "PaymentTypeDuration")
                    protected BigInteger paymentTypeDuration;
                    @XmlAttribute(name = "PaymentTypeUnits")
                    protected LoanTermUnitsList paymentTypeUnits;
                    @XmlAttribute(name = "RolloverPeriodDuration")
                    protected BigInteger rolloverPeriodDuration;
                    @XmlAttribute(name = "RolloverPeriodUnits")
                    protected LoanTermUnitsList rolloverPeriodUnits;
                    @XmlAttribute(name = "TotalTermDuration")
                    protected BigInteger totalTermDuration;
                    @XmlAttribute(name = "TotalTermUnits")
                    protected LoanTermUnitsList totalTermUnits;
                    public List<Message.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod> getDistinctLoanPeriod() {
                        if (distinctLoanPeriod == null) {
                            distinctLoanPeriod = new ArrayList<Message.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod>();
                        }
                        return this.distinctLoanPeriod;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration",
                        "repayment"
                    })

@Data

@Entity
                    public static class DistinctLoanPeriod {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlElement(name = "Repayment")
                        protected List<Message.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment> repayment;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "InterestType")
                        protected InterestTypeList interestType;
                        @XmlAttribute(name = "PaymentType")
                        protected PaymentTypeList paymentType;
                        @XmlAttribute(name = "SequenceNumber")
                        protected BigInteger sequenceNumber;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "x_RateComposition")
                        @XmlIDREF
                        protected Object xRateComposition;
                        public List<Message.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment> getRepayment() {
                            if (repayment == null) {
                                repayment = new ArrayList<Message.Content.Application.Liability.OriginalTerm.DistinctLoanPeriod.Repayment>();
                            }
                            return this.repayment;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Repayment {
                            @XmlAttribute(name = "x_ContinuingRepayment")
                            @XmlIDREF
                            protected Object xContinuingRepayment;
                            @XmlAttribute(name = "x_Repayment")
                            @XmlIDREF
                            protected Object xRepayment;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "owner"
                })

@Data

@Entity
                public static class PercentOwned {
                    @XmlElement(name = "Owner")
                    protected List<Message.Content.Application.Liability.PercentOwned.Owner> owner;
                    @XmlAttribute(name = "Proportions")
                    protected ProportionsList proportions;
                    public List<Message.Content.Application.Liability.PercentOwned.Owner> getOwner() {
                        if (owner == null) {
                            owner = new ArrayList<Message.Content.Application.Liability.PercentOwned.Owner>();
                        }
                        return this.owner;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Owner {
                        @XmlAttribute(name = "OwnerType")
                        protected ApplicantTypeList ownerType;
                        @XmlAttribute(name = "Percent")
                        protected BigDecimal percent;
                        @XmlAttribute(name = "x_Party")
                        @XmlIDREF
                        protected Object xParty;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "baseRate"
                })

@Data

@Entity
                public static class RateComposition {
                    @XmlElement(name = "BaseRate")
                    protected Message.Content.Application.Liability.RateComposition.BaseRate baseRate;
                    @XmlAttribute(name = "CustomerRiskMargin")
                    protected BigDecimal customerRiskMargin;
                    @XmlAttribute(name = "DisclosedToCustomer")
                    protected YesNoList disclosedToCustomer;
                    @XmlAttribute(name = "IntroductoryMargin")
                    protected BigDecimal introductoryMargin;
                    @XmlAttribute(name = "NetCustomerRiskMargin")
                    protected BigDecimal netCustomerRiskMargin;
                    @XmlAttribute(name = "PaymentTypeMargin")
                    protected BigDecimal paymentTypeMargin;
                    @XmlAttribute(name = "PricingConstruct")
                    protected String pricingConstruct;
                    @XmlAttribute(name = "ProductMargin")
                    protected BigDecimal productMargin;
                    @XmlAttribute(name = "TermPremium")
                    protected BigDecimal termPremium;
                    @XmlAttribute(name = "TotalInterestRate")
                    protected BigDecimal totalInterestRate;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class BaseRate {
                        @XmlAttribute(name = "Code")
                        protected String code;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "Rate")
                        protected BigDecimal rate;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class RemainingTerm {
                    @XmlAttribute(name = "Duration")
                    protected BigInteger duration;
                    @XmlAttribute(name = "Units")
                    protected LoanTermUnitsList units;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Repayment {
                    @XmlAttribute(name = "InterestPayment")
                    protected YesNoList interestPayment;
                    @XmlAttribute(name = "LoanPaymentScheduleType")
                    protected LoanPaymentScheduleTypeList loanPaymentScheduleType;
                    @XmlAttribute(name = "MinimumAmount")
                    protected BigDecimal minimumAmount;
                    @XmlAttribute(name = "PaymentTiming")
                    protected PaymentTimingList paymentTiming;
                    @XmlAttribute(name = "PaymentType")
                    protected PaymentTypeList paymentType;
                    @XmlAttribute(name = "PrincipalPayment")
                    protected YesNoList principalPayment;
                    @XmlAttribute(name = "Regular")
                    protected YesNoList regular;
                    @XmlAttribute(name = "RemainingRepayments")
                    protected BigInteger remainingRepayments;
                    @XmlAttribute(name = "RepaymentAmount")
                    protected BigDecimal repaymentAmount;
                    @XmlAttribute(name = "RepaymentFrequency")
                    protected RepaymentFrequencyList repaymentFrequency;
                    @XmlAttribute(name = "TaxDeductible")
                    protected YesNoList taxDeductible;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "mortgagorDetails",
                    "securityAgreement"
                })

@Data

@Entity
                public static class Security {
                    @XmlElement(name = "MortgagorDetails")
                    protected List<Message.Content.Application.Liability.Security.MortgagorDetails> mortgagorDetails;
                    @XmlElement(name = "SecurityAgreement")
                    protected SecurityAgreementType securityAgreement;
                    @XmlAttribute(name = "MortgageNumber")
                    protected String mortgageNumber;
                    @XmlAttribute(name = "Priority")
                    protected SecurityPriorityList priority;
                    @XmlAttribute(name = "PriorityAmount")
                    protected BigDecimal priorityAmount;
                    @XmlAttribute(name = "RequiresOriginalMortgageDocument")
                    protected YesNoList requiresOriginalMortgageDocument;
                    @XmlAttribute(name = "SignedDocumentsRequired")
                    protected YesNoList signedDocumentsRequired;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                    public List<Message.Content.Application.Liability.Security.MortgagorDetails> getMortgagorDetails() {
                        if (mortgagorDetails == null) {
                            mortgagorDetails = new ArrayList<Message.Content.Application.Liability.Security.MortgagorDetails>();
                        }
                        return this.mortgagorDetails;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class MortgagorDetails {
                        @XmlAttribute(name = "ChangeNameFormRequired")
                        protected YesNoList changeNameFormRequired;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "ReasonForDifferentName")
                        protected ReasonForDifferentNameList reasonForDifferentName;
                        @XmlAttribute(name = "x_Mortgagor")
                        @XmlIDREF
                        protected Object xMortgagor;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Software {
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Name")
                    protected String name;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class TermsAndConditions {
                    @XmlAttribute(name = "TermsCode")
                    protected String termsCode;
                    @XmlAttribute(name = "TermsName")
                    protected String termsName;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "amountRequestedInForeignCurrency",
                "borrowers",
                "bulkReduction",
                "commission",
                "discountMargin",
                "documentationInstructions",
                "dsh",
                "equityRelease",
                "featuresSelected",
                "fundsDisbursement",
                "guarantor",
                "lendingPurpose",
                "loanPurpose",
                "_package",
                "proposedRepayment",
                "rateComposition",
                "security",
                "software",
                "statementInstructions",
                "supplementaryCardholder",
                "term",
                "termsAndConditions"
            })

@Data

@Entity
            public static class LoanDetails {
                @XmlElement(name = "AmountRequestedInForeignCurrency")
                protected AmountInForeignCurrencyType amountRequestedInForeignCurrency;
                @XmlElement(name = "Borrowers")
                protected Message.Content.Application.LoanDetails.Borrowers borrowers;
                @XmlElement(name = "BulkReduction")
                protected Message.Content.Application.LoanDetails.BulkReduction bulkReduction;
                @XmlElement(name = "Commission")
                protected Message.Content.Application.LoanDetails.Commission commission;
                @XmlElement(name = "DiscountMargin")
                protected Message.Content.Application.LoanDetails.DiscountMargin discountMargin;
                @XmlElement(name = "DocumentationInstructions")
                protected DocumentationInstructionsType documentationInstructions;
                @XmlElement(name = "DSH")
                protected Message.Content.Application.LoanDetails.DSH dsh;
                @XmlElement(name = "EquityRelease")
                protected Message.Content.Application.LoanDetails.EquityRelease equityRelease;
                @XmlElement(name = "FeaturesSelected")
                protected Message.Content.Application.LoanDetails.FeaturesSelected featuresSelected;
                @XmlElement(name = "FundsDisbursement")
                protected List<FundsDisbursementType> fundsDisbursement;
                @XmlElement(name = "Guarantor")
                protected List<Message.Content.Application.LoanDetails.Guarantor> guarantor;
                @XmlElement(name = "LendingPurpose")
                protected List<Message.Content.Application.LoanDetails.LendingPurpose> lendingPurpose;
                @XmlElement(name = "LoanPurpose")
                protected Message.Content.Application.LoanDetails.LoanPurpose loanPurpose;
                @XmlElement(name = "Package")
                protected Message.Content.Application.LoanDetails.Package _package;
                @XmlElement(name = "ProposedRepayment")
                protected Message.Content.Application.LoanDetails.ProposedRepayment proposedRepayment;
                @XmlElement(name = "RateComposition")
                protected List<Message.Content.Application.LoanDetails.RateComposition> rateComposition;
                @XmlElement(name = "Security")
                protected List<Message.Content.Application.LoanDetails.Security> security;
                @XmlElement(name = "Software")
                protected Message.Content.Application.LoanDetails.Software software;
                @XmlElement(name = "StatementInstructions")
                protected Message.Content.Application.LoanDetails.StatementInstructions statementInstructions;
                @XmlElement(name = "SupplementaryCardholder")
                protected List<Message.Content.Application.LoanDetails.SupplementaryCardholder> supplementaryCardholder;
                @XmlElement(name = "Term")
                protected Message.Content.Application.LoanDetails.Term term;
                @XmlElement(name = "TermsAndConditions")
                protected List<Message.Content.Application.LoanDetails.TermsAndConditions> termsAndConditions;
                @XmlAttribute(name = "AccelerationPercentage")
                protected BigDecimal accelerationPercentage;
                @XmlAttribute(name = "AmountRequested")
                protected BigDecimal amountRequested;
                @XmlAttribute(name = "AmountRequestedInclusive")
                protected BigDecimal amountRequestedInclusive;
                @XmlAttribute(name = "BalloonRepaymentAmount")
                protected BigDecimal balloonRepaymentAmount;
                @XmlAttribute(name = "BalloonRepaymentDate")
                protected XMLGregorianCalendar balloonRepaymentDate;
                @XmlAttribute(name = "BuyNowPayLater")
                protected YesNoList buyNowPayLater;
                @XmlAttribute(name = "ConsiderLowerLimitIfNotEligible")
                protected YesNoList considerLowerLimitIfNotEligible;
                @XmlAttribute(name = "EstimatedSettlementDate")
                protected XMLGregorianCalendar estimatedSettlementDate;
                @XmlAttribute(name = "Funder")
                protected FunderList funder;
                @XmlAttribute(name = "InterestCalculationFrequency")
                protected InterestChargeFrequencyList interestCalculationFrequency;
                @XmlAttribute(name = "InterestChargeFrequency")
                protected InterestChargeFrequencyList interestChargeFrequency;
                @XmlAttribute(name = "IsAmountRequestedInForeignCurrency")
                protected YesNoList isAmountRequestedInForeignCurrency;
                @XmlAttribute(name = "LoanType")
                protected LoanTypeList loanType;
                @XmlAttribute(name = "MainProduct")
                protected YesNoList mainProduct;
                @XmlAttribute(name = "MaturityDate")
                protected XMLGregorianCalendar maturityDate;
                @XmlAttribute(name = "MinimumRepaymentRate")
                protected BigDecimal minimumRepaymentRate;
                @XmlAttribute(name = "NegativelyGeared")
                protected YesNoList negativelyGeared;
                @XmlAttribute(name = "NominateBalloonRepayment")
                protected YesNoList nominateBalloonRepayment;
                @XmlAttribute(name = "OriginatorReferenceID")
                protected String originatorReferenceID;
                @XmlAttribute(name = "ProductCode")
                protected String productCode;
                @XmlAttribute(name = "ProductName")
                protected String productName;
                @XmlAttribute(name = "ProposedAnnualInterestRate")
                protected BigDecimal proposedAnnualInterestRate;
                @XmlAttribute(name = "Secured")
                protected YesNoList secured;
                @XmlAttribute(name = "SMSFLoan")
                protected YesNoList smsfLoan;
                @XmlAttribute(name = "SpecialConcessionCode")
                protected String specialConcessionCode;
                @XmlAttribute(name = "StatementCycle")
                protected StatementCycleList statementCycle;
                @XmlAttribute(name = "TaxDeductible")
                protected YesNoList taxDeductible;
                @XmlAttribute(name = "TemplateID")
                protected String templateID;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "x_MasterAgreement")
                @XmlIDREF
                protected Object xMasterAgreement;
                public List<FundsDisbursementType> getFundsDisbursement() {
                    if (fundsDisbursement == null) {
                        fundsDisbursement = new ArrayList<FundsDisbursementType>();
                    }
                    return this.fundsDisbursement;
                }
                public List<Message.Content.Application.LoanDetails.Guarantor> getGuarantor() {
                    if (guarantor == null) {
                        guarantor = new ArrayList<Message.Content.Application.LoanDetails.Guarantor>();
                    }
                    return this.guarantor;
                }
                public List<Message.Content.Application.LoanDetails.LendingPurpose> getLendingPurpose() {
                    if (lendingPurpose == null) {
                        lendingPurpose = new ArrayList<Message.Content.Application.LoanDetails.LendingPurpose>();
                    }
                    return this.lendingPurpose;
                }
                public List<Message.Content.Application.LoanDetails.RateComposition> getRateComposition() {
                    if (rateComposition == null) {
                        rateComposition = new ArrayList<Message.Content.Application.LoanDetails.RateComposition>();
                    }
                    return this.rateComposition;
                }
                public List<Message.Content.Application.LoanDetails.Security> getSecurity() {
                    if (security == null) {
                        security = new ArrayList<Message.Content.Application.LoanDetails.Security>();
                    }
                    return this.security;
                }
                public List<Message.Content.Application.LoanDetails.SupplementaryCardholder> getSupplementaryCardholder() {
                    if (supplementaryCardholder == null) {
                        supplementaryCardholder = new ArrayList<Message.Content.Application.LoanDetails.SupplementaryCardholder>();
                    }
                    return this.supplementaryCardholder;
                }
                public List<Message.Content.Application.LoanDetails.TermsAndConditions> getTermsAndConditions() {
                    if (termsAndConditions == null) {
                        termsAndConditions = new ArrayList<Message.Content.Application.LoanDetails.TermsAndConditions>();
                    }
                    return this.termsAndConditions;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "owner"
                })

@Data

@Entity
                public static class Borrowers {
                    @XmlElement(name = "Owner")
                    protected List<Message.Content.Application.LoanDetails.Borrowers.Owner> owner;
                    @XmlAttribute(name = "Proportions")
                    protected ProportionsList proportions;
                    public List<Message.Content.Application.LoanDetails.Borrowers.Owner> getOwner() {
                        if (owner == null) {
                            owner = new ArrayList<Message.Content.Application.LoanDetails.Borrowers.Owner>();
                        }
                        return this.owner;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Owner {
                        @XmlAttribute(name = "Percent")
                        protected BigDecimal percent;
                        @XmlAttribute(name = "x_Party")
                        @XmlIDREF
                        protected Object xParty;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class BulkReduction {
                    @XmlAttribute(name = "Amount")
                    protected BigDecimal amount;
                    @XmlAttribute(name = "EstimatedDate")
                    protected XMLGregorianCalendar estimatedDate;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Commission {
                    @XmlAttribute(name = "CommissionAmount")
                    protected BigDecimal commissionAmount;
                    @XmlAttribute(name = "CommissionPaid")
                    protected YesNoList commissionPaid;
                    @XmlAttribute(name = "CommissionStructure")
                    protected CommissionStructureList commissionStructure;
                    @XmlAttribute(name = "GSTAmount")
                    protected BigDecimal gstAmount;
                    @XmlAttribute(name = "ITCAmount")
                    protected BigDecimal itcAmount;
                    @XmlAttribute(name = "OtherCommissionStructureDescription")
                    protected String otherCommissionStructureDescription;
                    @XmlAttribute(name = "PromotionCode")
                    protected String promotionCode;
                    @XmlAttribute(name = "ThirdPartyReferee")
                    protected YesNoList thirdPartyReferee;
                    @XmlAttribute(name = "Trail")
                    protected BigDecimal trail;
                    @XmlAttribute(name = "UpfrontPayment")
                    protected BigDecimal upfrontPayment;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class DSH {
                    @XmlAttribute(name = "AssignmentCertificate")
                    protected String assignmentCertificate;
                    @XmlAttribute(name = "EntitlementCertificate")
                    protected String entitlementCertificate;
                    @XmlAttribute(name = "FileNumber")
                    protected String fileNumber;
                    @XmlAttribute(name = "Subsidised")
                    protected YesNoList subsidised;
                    @XmlAttribute(name = "Supplement")
                    protected YesNoList supplement;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class DiscountMargin {
                    @XmlAttribute(name = "DiscountedAmount")
                    protected BigDecimal discountedAmount;
                    @XmlAttribute(name = "DiscountRate")
                    protected BigDecimal discountRate;
                    @XmlAttribute(name = "DiscountReason")
                    protected String discountReason;
                    @XmlAttribute(name = "Duration")
                    protected BigInteger duration;
                    @XmlAttribute(name = "DurationUnits")
                    protected DurationUnitsList durationUnits;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "accommodationBond",
                    "amount",
                    "instalments"
                })

@Data

@Entity
                public static class EquityRelease {
                    @XmlElement(name = "AccommodationBond")
                    protected Message.Content.Application.LoanDetails.EquityRelease.AccommodationBond accommodationBond;
                    @XmlElement(name = "Amount")
                    protected Message.Content.Application.LoanDetails.EquityRelease.Amount amount;
                    @XmlElement(name = "Instalments")
                    protected Message.Content.Application.LoanDetails.EquityRelease.Instalments instalments;
                    @XmlAttribute(name = "ProtectedEquity")
                    protected YesNoList protectedEquity;
                    @XmlAttribute(name = "ProtectedEquityPercentage")
                    protected BigDecimal protectedEquityPercentage;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class AccommodationBond {
                        @XmlAttribute(name = "ExpectedAdmissionDate")
                        protected XMLGregorianCalendar expectedAdmissionDate;
                        @XmlAttribute(name = "ServiceProviderName")
                        protected String serviceProviderName;
                        @XmlAttribute(name = "ServiceProviderNumber")
                        protected String serviceProviderNumber;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Amount {
                        @XmlAttribute(name = "CalculateAsPercentage")
                        protected BigDecimal calculateAsPercentage;
                        @XmlAttribute(name = "CashReserve")
                        protected BigDecimal cashReserve;
                        @XmlAttribute(name = "InstalmentsAmount")
                        protected BigDecimal instalmentsAmount;
                        @XmlAttribute(name = "LumpSum")
                        protected BigDecimal lumpSum;
                        @XmlAttribute(name = "VaryOnValuation")
                        protected VaryOnValuationList varyOnValuation;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Instalments {
                        @XmlAttribute(name = "AmountPerInstalment")
                        protected BigDecimal amountPerInstalment;
                        @XmlAttribute(name = "Frequency")
                        protected InstalmentsFrequencyList frequency;
                        @XmlAttribute(name = "Indexed")
                        protected YesNoList indexed;
                        @XmlAttribute(name = "IndexRate")
                        protected BigDecimal indexRate;
                        @XmlAttribute(name = "NumberOfInstalments")
                        protected BigInteger numberOfInstalments;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "depositAccount",
                    "extraFeature",
                    "offsetAccount"
                })

@Data

@Entity
                public static class FeaturesSelected {
                    @XmlElement(name = "DepositAccount")
                    protected List<Message.Content.Application.LoanDetails.FeaturesSelected.DepositAccount> depositAccount;
                    @XmlElement(name = "ExtraFeature")
                    protected List<Message.Content.Application.LoanDetails.FeaturesSelected.ExtraFeature> extraFeature;
                    @XmlElement(name = "OffsetAccount")
                    protected List<Message.Content.Application.LoanDetails.FeaturesSelected.OffsetAccount> offsetAccount;
                    @XmlAttribute(name = "ChequeBook")
                    protected YesNoList chequeBook;
                    @XmlAttribute(name = "CreditCard")
                    protected YesNoList creditCard;
                    @XmlAttribute(name = "DebitCard")
                    protected YesNoList debitCard;
                    @XmlAttribute(name = "DepositAccountRequested")
                    protected YesNoList depositAccountRequested;
                    @XmlAttribute(name = "DepositBook")
                    protected YesNoList depositBook;
                    @XmlAttribute(name = "HolidayLeave")
                    protected YesNoList holidayLeave;
                    @XmlAttribute(name = "Offset")
                    protected YesNoList offset;
                    @XmlAttribute(name = "OffsetPercentage")
                    protected BigDecimal offsetPercentage;
                    @XmlAttribute(name = "ParentalLeave")
                    protected YesNoList parentalLeave;
                    @XmlAttribute(name = "PartialOffset")
                    protected YesNoList partialOffset;
                    @XmlAttribute(name = "Portability")
                    protected YesNoList portability;
                    @XmlAttribute(name = "ProgressiveDraw")
                    protected YesNoList progressiveDraw;
                    @XmlAttribute(name = "RateLock")
                    protected YesNoList rateLock;
                    @XmlAttribute(name = "Redraw")
                    protected YesNoList redraw;
                    @XmlAttribute(name = "SplitLoan")
                    protected YesNoList splitLoan;
                    public List<Message.Content.Application.LoanDetails.FeaturesSelected.DepositAccount> getDepositAccount() {
                        if (depositAccount == null) {
                            depositAccount = new ArrayList<Message.Content.Application.LoanDetails.FeaturesSelected.DepositAccount>();
                        }
                        return this.depositAccount;
                    }
                    public List<Message.Content.Application.LoanDetails.FeaturesSelected.ExtraFeature> getExtraFeature() {
                        if (extraFeature == null) {
                            extraFeature = new ArrayList<Message.Content.Application.LoanDetails.FeaturesSelected.ExtraFeature>();
                        }
                        return this.extraFeature;
                    }
                    public List<Message.Content.Application.LoanDetails.FeaturesSelected.OffsetAccount> getOffsetAccount() {
                        if (offsetAccount == null) {
                            offsetAccount = new ArrayList<Message.Content.Application.LoanDetails.FeaturesSelected.OffsetAccount>();
                        }
                        return this.offsetAccount;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class DepositAccount {
                        @XmlAttribute(name = "Holding")
                        protected AccountHoldingList holding;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ExtraFeature {
                        @XmlAttribute(name = "Description")
                        protected String description;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "accountNumber"
                    })

@Data

@Entity
                    public static class OffsetAccount {
                        @XmlElement(name = "AccountNumber")
                        protected FinancialAccountType accountNumber;
                        @XmlAttribute(name = "Holding")
                        protected AccountHoldingList holding;
                        @XmlAttribute(name = "IsExisting")
                        protected YesNoList isExisting;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "x_Account")
                        @XmlIDREF
                        protected Object xAccount;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Guarantor {
                    @XmlAttribute(name = "x_Guarantor")
                    @XmlIDREF
                    protected Object xGuarantor;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "percentBenefit"
                })

@Data

@Entity
                public static class LendingPurpose {
                    @XmlElement(name = "PercentBenefit")
                    protected PercentOwnedType percentBenefit;
                    @XmlAttribute(name = "ABSLendingPurpose")
                    protected String absLendingPurpose;
                    @XmlAttribute(name = "ABSLendingPurposeCode")
                    protected AbsLendingPurposeCodeList absLendingPurposeCode;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "IncludesRefinancing")
                    protected YesNoList includesRefinancing;
                    @XmlAttribute(name = "LenderCode")
                    protected String lenderCode;
                    @XmlAttribute(name = "PayoutQuoteObtained")
                    protected YesNoList payoutQuoteObtained;
                    @XmlAttribute(name = "PurposeAmount")
                    protected BigDecimal purposeAmount;
                    @XmlAttribute(name = "RefinancingReason")
                    protected PrincipalRefinancingReasonList refinancingReason;
                    @XmlAttribute(name = "SecurityForMarginLoan")
                    protected YesNoList securityForMarginLoan;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class LoanPurpose {
                    @XmlAttribute(name = "NCCPStatus")
                    protected NccpStatusList nccpStatus;
                    @XmlAttribute(name = "Occupancy")
                    protected OccupancyList occupancy;
                    @XmlAttribute(name = "OwnerBuilderApplication")
                    protected YesNoList ownerBuilderApplication;
                    @XmlAttribute(name = "PrimaryPurpose")
                    protected PrimaryPurposeLoanPurposeList primaryPurpose;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Package {
                    @XmlAttribute(name = "Category")
                    protected String category;
                    @XmlAttribute(name = "Code")
                    protected String code;
                    @XmlAttribute(name = "MemberID")
                    protected String memberID;
                    @XmlAttribute(name = "Name")
                    protected String name;
                    @XmlAttribute(name = "OptionCode")
                    protected String optionCode;
                    @XmlAttribute(name = "Organisation")
                    protected String organisation;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "authoriser",
                    "creditCard",
                    "fromAccount",
                    "regularRepayment",
                    "structuredPayments"
                })

@Data

@Entity
                public static class ProposedRepayment {
                    @XmlElement(name = "Authoriser")
                    protected List<Message.Content.Application.LoanDetails.ProposedRepayment.Authoriser> authoriser;
                    @XmlElement(name = "CreditCard")
                    protected Message.Content.Application.LoanDetails.ProposedRepayment.CreditCard creditCard;
                    @XmlElement(name = "FromAccount")
                    protected FinancialAccountType fromAccount;
                    @XmlElement(name = "RegularRepayment")
                    protected List<Message.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment> regularRepayment;
                    @XmlElement(name = "StructuredPayments")
                    protected Message.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments structuredPayments;
                    @XmlAttribute(name = "AnniversaryDate")
                    protected XMLGregorianCalendar anniversaryDate;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Method")
                    protected ProposedRepaymentMethodList method;
                    @XmlAttribute(name = "PaymentTiming")
                    protected PaymentTimingList paymentTiming;
                    @XmlAttribute(name = "PerDiemPaymentAmount")
                    protected BigDecimal perDiemPaymentAmount;
                    @XmlAttribute(name = "PerDiemPaymentDate")
                    protected XMLGregorianCalendar perDiemPaymentDate;
                    @XmlAttribute(name = "PerDiemPaymentGSTAmount")
                    protected BigDecimal perDiemPaymentGSTAmount;
                    @XmlAttribute(name = "PerDiemPaymentStampDutyAmount")
                    protected BigDecimal perDiemPaymentStampDutyAmount;
                    @XmlAttribute(name = "Regular")
                    protected YesNoList regular;
                    @XmlAttribute(name = "x_Account")
                    @XmlIDREF
                    protected Object xAccount;
                    public List<Message.Content.Application.LoanDetails.ProposedRepayment.Authoriser> getAuthoriser() {
                        if (authoriser == null) {
                            authoriser = new ArrayList<Message.Content.Application.LoanDetails.ProposedRepayment.Authoriser>();
                        }
                        return this.authoriser;
                    }
                    public List<Message.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment> getRegularRepayment() {
                        if (regularRepayment == null) {
                            regularRepayment = new ArrayList<Message.Content.Application.LoanDetails.ProposedRepayment.RegularRepayment>();
                        }
                        return this.regularRepayment;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Authoriser {
                        @XmlAttribute(name = "Authorised")
                        protected YesNoList authorised;
                        @XmlAttribute(name = "AuthorityVerified")
                        protected YesNoList authorityVerified;
                        @XmlAttribute(name = "x_Party")
                        @XmlIDREF
                        protected Object xParty;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class CreditCard {
                        @XmlAttribute(name = "CardHolderName")
                        protected String cardHolderName;
                        @XmlAttribute(name = "ExpiryMonth")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String expiryMonth;
                        @XmlAttribute(name = "ExpiryYear")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String expiryYear;
                        @XmlAttribute(name = "Number")
                        protected String number;
                        @XmlAttribute(name = "Type")
                        protected CreditCardTypeList type;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class RegularRepayment {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "DayOfMonth")
                        protected String dayOfMonth;
                        @XmlAttribute(name = "DayOfWeek")
                        protected DayOfWeekList dayOfWeek;
                        @XmlAttribute(name = "EndOfPeriod")
                        protected YesNoList endOfPeriod;
                        @XmlAttribute(name = "FirstRepaymentDate")
                        protected XMLGregorianCalendar firstRepaymentDate;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyFullList frequency;
                        @XmlAttribute(name = "FrequencyInterval")
                        protected BigInteger frequencyInterval;
                        @XmlAttribute(name = "GSTAmount")
                        protected BigDecimal gstAmount;
                        @XmlAttribute(name = "InterestPayment")
                        protected YesNoList interestPayment;
                        @XmlAttribute(name = "LastRepaymentDate")
                        protected XMLGregorianCalendar lastRepaymentDate;
                        @XmlAttribute(name = "LoanPaymentScheduleType")
                        protected LoanPaymentScheduleTypeList loanPaymentScheduleType;
                        @XmlAttribute(name = "MinimumAmount")
                        protected BigDecimal minimumAmount;
                        @XmlAttribute(name = "PrincipalPayment")
                        protected YesNoList principalPayment;
                        @XmlAttribute(name = "StampDutyAmount")
                        protected BigDecimal stampDutyAmount;
                        @XmlAttribute(name = "TotalRepayments")
                        protected BigInteger totalRepayments;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "Week")
                        protected WeekList week;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "payment"
                    })

@Data

@Entity
                    public static class StructuredPayments {
                        @XmlElement(name = "Payment")
                        protected List<Message.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment> payment;
                        @XmlAttribute(name = "BaseFrequency")
                        protected FrequencyFullList baseFrequency;
                        public List<Message.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment> getPayment() {
                            if (payment == null) {
                                payment = new ArrayList<Message.Content.Application.LoanDetails.ProposedRepayment.StructuredPayments.Payment>();
                            }
                            return this.payment;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Payment {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Date")
                            protected XMLGregorianCalendar date;
                            @XmlAttribute(name = "GSTAmount")
                            protected BigDecimal gstAmount;
                            @XmlAttribute(name = "SequenceNumber")
                            protected BigInteger sequenceNumber;
                            @XmlAttribute(name = "StampDutyAmount")
                            protected BigDecimal stampDutyAmount;
                            @XmlAttribute(name = "UniqueID")
                            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                            @XmlID
                            protected String uniqueID;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "baseRate"
                })

@Data

@Entity
                public static class RateComposition {
                    @XmlElement(name = "BaseRate")
                    protected Message.Content.Application.LoanDetails.RateComposition.BaseRate baseRate;
                    @XmlAttribute(name = "CustomerRiskMargin")
                    protected BigDecimal customerRiskMargin;
                    @XmlAttribute(name = "DisclosedToCustomer")
                    protected YesNoList disclosedToCustomer;
                    @XmlAttribute(name = "IntroducerMargin")
                    protected BigDecimal introducerMargin;
                    @XmlAttribute(name = "IntroductoryMargin")
                    protected BigDecimal introductoryMargin;
                    @XmlAttribute(name = "NetCustomerRiskMargin")
                    protected BigDecimal netCustomerRiskMargin;
                    @XmlAttribute(name = "OriginatorMargin")
                    protected BigDecimal originatorMargin;
                    @XmlAttribute(name = "PaymentTypeMargin")
                    protected BigDecimal paymentTypeMargin;
                    @XmlAttribute(name = "PricingConstruct")
                    protected String pricingConstruct;
                    @XmlAttribute(name = "ProductMargin")
                    protected BigDecimal productMargin;
                    @XmlAttribute(name = "SubsidyBaseAmount")
                    protected BigDecimal subsidyBaseAmount;
                    @XmlAttribute(name = "SubsidyBasePercent")
                    protected BigDecimal subsidyBasePercent;
                    @XmlAttribute(name = "SubsidyRateSacrifice")
                    protected BigDecimal subsidyRateSacrifice;
                    @XmlAttribute(name = "TermPremium")
                    protected BigDecimal termPremium;
                    @XmlAttribute(name = "TotalInterestRate")
                    protected BigDecimal totalInterestRate;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class BaseRate {
                        @XmlAttribute(name = "Code")
                        protected String code;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "Rate")
                        protected BigDecimal rate;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "securityAgreement"
                })

@Data

@Entity
                public static class Security {
                    @XmlElement(name = "SecurityAgreement")
                    protected SecurityAgreementType securityAgreement;
                    @XmlAttribute(name = "AllocatedAmount")
                    protected BigDecimal allocatedAmount;
                    @XmlAttribute(name = "Priority")
                    protected SecurityPriorityList priority;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Software {
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Name")
                    protected String name;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "nameOnStatement"
                })

@Data

@Entity
                public static class StatementInstructions {
                    @XmlElement(name = "NameOnStatement")
                    protected List<Message.Content.Application.LoanDetails.StatementInstructions.NameOnStatement> nameOnStatement;
                    public List<Message.Content.Application.LoanDetails.StatementInstructions.NameOnStatement> getNameOnStatement() {
                        if (nameOnStatement == null) {
                            nameOnStatement = new ArrayList<Message.Content.Application.LoanDetails.StatementInstructions.NameOnStatement>();
                        }
                        return this.nameOnStatement;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class NameOnStatement {
                        @XmlAttribute(name = "x_Applicant")
                        @XmlIDREF
                        protected Object xApplicant;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SupplementaryCardholder {
                    @XmlAttribute(name = "x_SupplementaryCardholder")
                    @XmlIDREF
                    protected Object xSupplementaryCardholder;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "distinctLoanPeriod",
                    "interestOnlyReason"
                })

@Data

@Entity
                public static class Term {
                    @XmlElement(name = "DistinctLoanPeriod")
                    protected List<Message.Content.Application.LoanDetails.Term.DistinctLoanPeriod> distinctLoanPeriod;
                    @XmlElement(name = "InterestOnlyReason")
                    protected List<Message.Content.Application.LoanDetails.Term.InterestOnlyReason> interestOnlyReason;
                    @XmlAttribute(name = "InterestType")
                    protected InterestTypeList interestType;
                    @XmlAttribute(name = "InterestTypeDuration")
                    protected BigInteger interestTypeDuration;
                    @XmlAttribute(name = "InterestTypeUnits")
                    protected LoanTermUnitsList interestTypeUnits;
                    @XmlAttribute(name = "PaymentType")
                    protected PaymentTypeList paymentType;
                    @XmlAttribute(name = "PaymentTypeDuration")
                    protected BigInteger paymentTypeDuration;
                    @XmlAttribute(name = "PaymentTypeUnits")
                    protected LoanTermUnitsList paymentTypeUnits;
                    @XmlAttribute(name = "RolloverPeriodDuration")
                    protected BigInteger rolloverPeriodDuration;
                    @XmlAttribute(name = "RolloverPeriodUnits")
                    protected LoanTermUnitsList rolloverPeriodUnits;
                    @XmlAttribute(name = "TotalFeesAmount")
                    protected BigDecimal totalFeesAmount;
                    @XmlAttribute(name = "TotalInterestAmount")
                    protected BigDecimal totalInterestAmount;
                    @XmlAttribute(name = "TotalRepayments")
                    protected BigInteger totalRepayments;
                    @XmlAttribute(name = "TotalRepaymentsAmount")
                    protected BigDecimal totalRepaymentsAmount;
                    @XmlAttribute(name = "TotalTermDuration")
                    protected BigInteger totalTermDuration;
                    @XmlAttribute(name = "TotalTermType")
                    protected TotalTermTypeList totalTermType;
                    @XmlAttribute(name = "TotalTermUnits")
                    protected LoanTermUnitsList totalTermUnits;
                    public List<Message.Content.Application.LoanDetails.Term.DistinctLoanPeriod> getDistinctLoanPeriod() {
                        if (distinctLoanPeriod == null) {
                            distinctLoanPeriod = new ArrayList<Message.Content.Application.LoanDetails.Term.DistinctLoanPeriod>();
                        }
                        return this.distinctLoanPeriod;
                    }
                    public List<Message.Content.Application.LoanDetails.Term.InterestOnlyReason> getInterestOnlyReason() {
                        if (interestOnlyReason == null) {
                            interestOnlyReason = new ArrayList<Message.Content.Application.LoanDetails.Term.InterestOnlyReason>();
                        }
                        return this.interestOnlyReason;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration",
                        "repayment"
                    })

@Data

@Entity
                    public static class DistinctLoanPeriod {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlElement(name = "Repayment")
                        protected List<Message.Content.Application.LoanDetails.Term.DistinctLoanPeriod.Repayment> repayment;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "InterestType")
                        protected InterestTypeList interestType;
                        @XmlAttribute(name = "PaymentType")
                        protected PaymentTypeList paymentType;
                        @XmlAttribute(name = "SequenceNumber")
                        protected BigInteger sequenceNumber;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "TotalFeesAmount")
                        protected BigDecimal totalFeesAmount;
                        @XmlAttribute(name = "TotalInterestAmount")
                        protected BigDecimal totalInterestAmount;
                        @XmlAttribute(name = "TotalRepayments")
                        protected BigInteger totalRepayments;
                        @XmlAttribute(name = "TotalRepaymentsAmount")
                        protected BigDecimal totalRepaymentsAmount;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "x_RateComposition")
                        @XmlIDREF
                        protected Object xRateComposition;
                        public List<Message.Content.Application.LoanDetails.Term.DistinctLoanPeriod.Repayment> getRepayment() {
                            if (repayment == null) {
                                repayment = new ArrayList<Message.Content.Application.LoanDetails.Term.DistinctLoanPeriod.Repayment>();
                            }
                            return this.repayment;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Repayment {
                            @XmlAttribute(name = "x_Repayment")
                            @XmlIDREF
                            protected Object xRepayment;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class InterestOnlyReason {
                        @XmlAttribute(name = "Description")
                        protected String description;
                        @XmlAttribute(name = "Reason")
                        protected InterestOnlyReasonList reason;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class TermsAndConditions {
                    @XmlAttribute(name = "TermsCode")
                    protected String termsCode;
                    @XmlAttribute(name = "TermsName")
                    protected String termsName;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "accountToIncorporate",
                "percentOwned",
                "security"
            })

@Data

@Entity
            public static class MasterAgreement {
                @XmlElement(name = "AccountToIncorporate")
                protected List<Message.Content.Application.MasterAgreement.AccountToIncorporate> accountToIncorporate;
                @XmlElement(name = "PercentOwned")
                protected PercentOwnedType percentOwned;
                @XmlElement(name = "Security")
                protected List<Message.Content.Application.MasterAgreement.Security> security;
                @XmlAttribute(name = "DateOfExecution")
                protected XMLGregorianCalendar dateOfExecution;
                @XmlAttribute(name = "Description")
                protected String description;
                @XmlAttribute(name = "EndDate")
                protected XMLGregorianCalendar endDate;
                @XmlAttribute(name = "LenderAgreementNumber")
                protected String lenderAgreementNumber;
                @XmlAttribute(name = "MasterFacilityLimit")
                protected BigDecimal masterFacilityLimit;
                @XmlAttribute(name = "ProductCode")
                protected String productCode;
                @XmlAttribute(name = "ProductName")
                protected String productName;
                @XmlAttribute(name = "Status")
                protected MasterAgreementStatusList status;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.MasterAgreement.AccountToIncorporate> getAccountToIncorporate() {
                    if (accountToIncorporate == null) {
                        accountToIncorporate = new ArrayList<Message.Content.Application.MasterAgreement.AccountToIncorporate>();
                    }
                    return this.accountToIncorporate;
                }
                public List<Message.Content.Application.MasterAgreement.Security> getSecurity() {
                    if (security == null) {
                        security = new ArrayList<Message.Content.Application.MasterAgreement.Security>();
                    }
                    return this.security;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AccountToIncorporate {
                    @XmlAttribute(name = "x_ExistingAccount")
                    @XmlIDREF
                    protected Object xExistingAccount;
                    @XmlAttribute(name = "x_NewAccount")
                    @XmlIDREF
                    protected Object xNewAccount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "percentOwned",
                    "securityAgreement"
                })

@Data

@Entity
                public static class Security {
                    @XmlElement(name = "PercentOwned")
                    protected PercentOwnedType percentOwned;
                    @XmlElement(name = "SecurityAgreement")
                    protected SecurityAgreementType securityAgreement;
                    @XmlAttribute(name = "Priority")
                    protected SecurityPriorityList priority;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "agriculturalAsset",
                "aircraft",
                "business",
                "cleaningEquipment",
                "contractDetails",
                "earthMovingMiningAndConstruction",
                "encumbrance",
                "estimatedValue",
                "financialAsset",
                "fundsDisbursement",
                "hospitalityAndLeisure",
                "insurance",
                "itAndAVEquipment",
                "materialsHandlingAndLifting",
                "medicalEquipment",
                "mobileComputing",
                "motorVehicle",
                "officeEquipment",
                "otherAsset",
                "percentOwned",
                "plantEquipmentAndIndustrial",
                "ppsr",
                "toolsOfTrade"
            })

@Data

@Entity
            public static class NonRealEstateAsset {
                @XmlElement(name = "AgriculturalAsset")
                protected Message.Content.Application.NonRealEstateAsset.AgriculturalAsset agriculturalAsset;
                @XmlElement(name = "Aircraft")
                protected Message.Content.Application.NonRealEstateAsset.Aircraft aircraft;
                @XmlElement(name = "Business")
                protected Message.Content.Application.NonRealEstateAsset.Business business;
                @XmlElement(name = "CleaningEquipment")
                protected Message.Content.Application.NonRealEstateAsset.CleaningEquipment cleaningEquipment;
                @XmlElement(name = "ContractDetails")
                protected Message.Content.Application.NonRealEstateAsset.ContractDetails contractDetails;
                @XmlElement(name = "EarthMovingMiningAndConstruction")
                protected Message.Content.Application.NonRealEstateAsset.EarthMovingMiningAndConstruction earthMovingMiningAndConstruction;
                @XmlElement(name = "Encumbrance")
                protected List<Message.Content.Application.NonRealEstateAsset.Encumbrance> encumbrance;
                @XmlElement(name = "EstimatedValue")
                protected Message.Content.Application.NonRealEstateAsset.EstimatedValue estimatedValue;
                @XmlElement(name = "FinancialAsset")
                protected Message.Content.Application.NonRealEstateAsset.FinancialAsset financialAsset;
                @XmlElement(name = "FundsDisbursement")
                protected List<FundsDisbursementType> fundsDisbursement;
                @XmlElement(name = "HospitalityAndLeisure")
                protected Message.Content.Application.NonRealEstateAsset.HospitalityAndLeisure hospitalityAndLeisure;
                @XmlElement(name = "Insurance")
                protected List<Message.Content.Application.NonRealEstateAsset.Insurance> insurance;
                @XmlElement(name = "ITAndAVEquipment")
                protected Message.Content.Application.NonRealEstateAsset.ITAndAVEquipment itAndAVEquipment;
                @XmlElement(name = "MaterialsHandlingAndLifting")
                protected Message.Content.Application.NonRealEstateAsset.MaterialsHandlingAndLifting materialsHandlingAndLifting;
                @XmlElement(name = "MedicalEquipment")
                protected Message.Content.Application.NonRealEstateAsset.MedicalEquipment medicalEquipment;
                @XmlElement(name = "MobileComputing")
                protected Message.Content.Application.NonRealEstateAsset.MobileComputing mobileComputing;
                @XmlElement(name = "MotorVehicle")
                protected Message.Content.Application.NonRealEstateAsset.MotorVehicle motorVehicle;
                @XmlElement(name = "OfficeEquipment")
                protected Message.Content.Application.NonRealEstateAsset.OfficeEquipment officeEquipment;
                @XmlElement(name = "OtherAsset")
                protected Message.Content.Application.NonRealEstateAsset.OtherAsset otherAsset;
                @XmlElement(name = "PercentOwned")
                protected PercentOwnedType percentOwned;
                @XmlElement(name = "PlantEquipmentAndIndustrial")
                protected Message.Content.Application.NonRealEstateAsset.PlantEquipmentAndIndustrial plantEquipmentAndIndustrial;
                @XmlElement(name = "PPSR")
                protected Message.Content.Application.NonRealEstateAsset.PPSR ppsr;
                @XmlElement(name = "ToolsOfTrade")
                protected Message.Content.Application.NonRealEstateAsset.ToolsOfTrade toolsOfTrade;
                @XmlAttribute(name = "AmountToBeReduced")
                protected BigDecimal amountToBeReduced;
                @XmlAttribute(name = "ContractOfSale")
                protected YesNoList contractOfSale;
                @XmlAttribute(name = "Encumbered")
                protected YesNoList encumbered;
                @XmlAttribute(name = "FinancialTransactionType")
                protected FinancialTransactionTypeList financialTransactionType;
                @XmlAttribute(name = "LenderAssessmentReason")
                protected String lenderAssessmentReason;
                @XmlAttribute(name = "LenderAssessmentRequired")
                protected YesNoList lenderAssessmentRequired;
                @XmlAttribute(name = "PrimarySecurity")
                protected YesNoList primarySecurity;
                @XmlAttribute(name = "ToBeReduced")
                protected YesNoList toBeReduced;
                @XmlAttribute(name = "ToBeSold")
                protected YesNoList toBeSold;
                @XmlAttribute(name = "ToBeUsedAsSecurity")
                protected YesNoList toBeUsedAsSecurity;
                @XmlAttribute(name = "Transaction")
                protected AssetTransactionList transaction;
                @XmlAttribute(name = "Type")
                protected NonRealEstateAssetTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "Verified")
                protected YesNoList verified;
                @XmlAttribute(name = "x_CustomerTransactionAnalysis")
                @XmlIDREF
                protected Object xCustomerTransactionAnalysis;
                @XmlAttribute(name = "x_VendorTaxInvoice")
                @XmlIDREF
                protected Object xVendorTaxInvoice;
                public List<Message.Content.Application.NonRealEstateAsset.Encumbrance> getEncumbrance() {
                    if (encumbrance == null) {
                        encumbrance = new ArrayList<Message.Content.Application.NonRealEstateAsset.Encumbrance>();
                    }
                    return this.encumbrance;
                }
                public List<FundsDisbursementType> getFundsDisbursement() {
                    if (fundsDisbursement == null) {
                        fundsDisbursement = new ArrayList<FundsDisbursementType>();
                    }
                    return this.fundsDisbursement;
                }
                public List<Message.Content.Application.NonRealEstateAsset.Insurance> getInsurance() {
                    if (insurance == null) {
                        insurance = new ArrayList<Message.Content.Application.NonRealEstateAsset.Insurance>();
                    }
                    return this.insurance;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class AgriculturalAsset {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "EngineHoursTotal")
                    protected BigInteger engineHoursTotal;
                    @XmlAttribute(name = "EngineID")
                    protected String engineID;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "RegisteredInState")
                    protected AuStateList registeredInState;
                    @XmlAttribute(name = "RegistrationExpiryDate")
                    protected XMLGregorianCalendar registrationExpiryDate;
                    @XmlAttribute(name = "RegistrationNumber")
                    protected String registrationNumber;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "ServicingHistory")
                    protected String servicingHistory;
                    @XmlAttribute(name = "Type")
                    protected AgriculturalAssetTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Aircraft {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "AirFrameHours")
                    protected BigInteger airFrameHours;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "EngineHoursTotal")
                    protected BigInteger engineHoursTotal;
                    @XmlAttribute(name = "EngineHoursTTR")
                    protected BigInteger engineHoursTTR;
                    @XmlAttribute(name = "EngineID")
                    protected String engineID;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "RegistrationExpiryDate")
                    protected XMLGregorianCalendar registrationExpiryDate;
                    @XmlAttribute(name = "RegistrationNumber")
                    protected String registrationNumber;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "ServicingHistory")
                    protected String servicingHistory;
                    @XmlAttribute(name = "Type")
                    protected AircraftTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "financialAnalysis"
                })

@Data

@Entity
                public static class Business {
                    @XmlElement(name = "FinancialAnalysis")
                    protected Message.Content.Application.NonRealEstateAsset.Business.FinancialAnalysis financialAnalysis;
                    @XmlAttribute(name = "BusinessName")
                    protected String businessName;
                    @XmlAttribute(name = "MainBusinessActivity")
                    protected String mainBusinessActivity;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "companyFinancials"
                    })

@Data

@Entity
                    public static class FinancialAnalysis {
                        @XmlElement(name = "CompanyFinancials")
                        protected List<Message.Content.Application.NonRealEstateAsset.Business.FinancialAnalysis.CompanyFinancials> companyFinancials;
                        @XmlAttribute(name = "AnnualPaymentOnCommitments")
                        protected BigDecimal annualPaymentOnCommitments;
                        @XmlAttribute(name = "CompleteFinancialAnalysis")
                        protected YesNoList completeFinancialAnalysis;
                        public List<Message.Content.Application.NonRealEstateAsset.Business.FinancialAnalysis.CompanyFinancials> getCompanyFinancials() {
                            if (companyFinancials == null) {
                                companyFinancials = new ArrayList<Message.Content.Application.NonRealEstateAsset.Business.FinancialAnalysis.CompanyFinancials>();
                            }
                            return this.companyFinancials;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class CompanyFinancials {
                            @XmlAttribute(name = "x_CompanyFinancials")
                            @XmlIDREF
                            protected Object xCompanyFinancials;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class CleaningEquipment {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "Type")
                    protected CleaningEquipmentTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ContractDetails {
                    @XmlAttribute(name = "ContractDate")
                    protected XMLGregorianCalendar contractDate;
                    @XmlAttribute(name = "ContractPriceAmount")
                    protected BigDecimal contractPriceAmount;
                    @XmlAttribute(name = "DepositAmount")
                    protected BigDecimal depositAmount;
                    @XmlAttribute(name = "DepositPaid")
                    protected BigDecimal depositPaid;
                    @XmlAttribute(name = "EstimatedSettlementDate")
                    protected XMLGregorianCalendar estimatedSettlementDate;
                    @XmlAttribute(name = "GSTAmount")
                    protected BigDecimal gstAmount;
                    @XmlAttribute(name = "GSTInclusive")
                    protected YesNoList gstInclusive;
                    @XmlAttribute(name = "GSTOverwritten")
                    protected YesNoList gstOverwritten;
                    @XmlAttribute(name = "InputTaxCredit")
                    protected BigDecimal inputTaxCredit;
                    @XmlAttribute(name = "InsurancePremium")
                    protected BigDecimal insurancePremium;
                    @XmlAttribute(name = "LuxuryCarTax")
                    protected BigDecimal luxuryCarTax;
                    @XmlAttribute(name = "NetTradeIn")
                    protected BigDecimal netTradeIn;
                    @XmlAttribute(name = "NonClaimableGST")
                    protected BigDecimal nonClaimableGST;
                    @XmlAttribute(name = "OnRoadCosts")
                    protected BigDecimal onRoadCosts;
                    @XmlAttribute(name = "OtherCost")
                    protected BigDecimal otherCost;
                    @XmlAttribute(name = "RegistrationCost")
                    protected BigDecimal registrationCost;
                    @XmlAttribute(name = "StampDuty")
                    protected BigDecimal stampDuty;
                    @XmlAttribute(name = "SupplierType")
                    protected SupplierTypeList supplierType;
                    @XmlAttribute(name = "TotalCost")
                    protected BigDecimal totalCost;
                    @XmlAttribute(name = "TradeInAmount")
                    protected BigDecimal tradeInAmount;
                    @XmlAttribute(name = "TradeInExistingFinance")
                    protected BigDecimal tradeInExistingFinance;
                    @XmlAttribute(name = "x_Vendor")
                    @XmlIDREF
                    protected Object xVendor;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class EarthMovingMiningAndConstruction {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "Type")
                    protected EarthMovingMiningAndConstructionTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "inFavourOf"
                })

@Data

@Entity
                public static class Encumbrance {
                    @XmlElement(name = "InFavourOf")
                    protected List<Message.Content.Application.NonRealEstateAsset.Encumbrance.InFavourOf> inFavourOf;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EncumbranceType")
                    protected NonRealEstateAssetEncumbranceList encumbranceType;
                    @XmlAttribute(name = "Priority")
                    protected NonRealEstateSecurityPriorityList priority;
                    @XmlAttribute(name = "RegisteredNumber")
                    protected String registeredNumber;
                    @XmlAttribute(name = "RegistrationDate")
                    protected XMLGregorianCalendar registrationDate;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    public List<Message.Content.Application.NonRealEstateAsset.Encumbrance.InFavourOf> getInFavourOf() {
                        if (inFavourOf == null) {
                            inFavourOf = new ArrayList<Message.Content.Application.NonRealEstateAsset.Encumbrance.InFavourOf>();
                        }
                        return this.inFavourOf;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class InFavourOf {
                        @XmlAttribute(name = "Capacity")
                        protected EncumbranceInFavourOfCapacityList capacity;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "x_InFavourOf")
                        @XmlIDREF
                        protected Object xInFavourOf;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class EstimatedValue {
                    @XmlAttribute(name = "BalloonRVAmount")
                    protected BigDecimal balloonRVAmount;
                    @XmlAttribute(name = "BalloonRVInputPattern")
                    protected BalloonRVInputPatternList balloonRVInputPattern;
                    @XmlAttribute(name = "BalloonRVPercent")
                    protected BigDecimal balloonRVPercent;
                    @XmlAttribute(name = "EstimateBasis")
                    protected EstimateBasisNonRealEstateAssetList estimateBasis;
                    @XmlAttribute(name = "EstimatedCGTLiability")
                    protected BigDecimal estimatedCGTLiability;
                    @XmlAttribute(name = "MinimumResidualValue")
                    protected BigDecimal minimumResidualValue;
                    @XmlAttribute(name = "TaxDepreciationMethod")
                    protected TaxDepreciationMethodList taxDepreciationMethod;
                    @XmlAttribute(name = "TaxDepreciationRate")
                    protected BigDecimal taxDepreciationRate;
                    @XmlAttribute(name = "Value")
                    protected BigDecimal value;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "accountNumber",
                    "shares"
                })

@Data

@Entity
                public static class FinancialAsset {
                    @XmlElement(name = "AccountNumber")
                    protected FinancialAccountType accountNumber;
                    @XmlElement(name = "Shares")
                    protected Message.Content.Application.NonRealEstateAsset.FinancialAsset.Shares shares;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "TransferOwnershipToSMSF")
                    protected YesNoList transferOwnershipToSMSF;
                    @XmlAttribute(name = "Type")
                    protected FinancialAssetTypeList type;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Shares {
                        @XmlAttribute(name = "Type")
                        protected ShareTypeList type;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class HospitalityAndLeisure {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "Type")
                    protected HospitalityAndLeisureTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ITAndAVEquipment {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "Type")
                    protected ItAndAVEquipmentTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Insurance {
                    @XmlAttribute(name = "x_Insurance")
                    @XmlIDREF
                    protected Object xInsurance;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class MaterialsHandlingAndLifting {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "Type")
                    protected MaterialsHandlingAndLiftingTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class MedicalEquipment {
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "Type")
                    protected MedicalEquipmentTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class MobileComputing {
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "Type")
                    protected MobileComputingTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class MotorVehicle {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Badge")
                    protected String badge;
                    @XmlAttribute(name = "Body")
                    protected String body;
                    @XmlAttribute(name = "Colour")
                    protected String colour;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Cylinders")
                    protected BigInteger cylinders;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Doors")
                    protected BigInteger doors;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "EngineCapacity")
                    protected BigDecimal engineCapacity;
                    @XmlAttribute(name = "EngineHoursTotal")
                    protected BigInteger engineHoursTotal;
                    @XmlAttribute(name = "EngineID")
                    protected String engineID;
                    @XmlAttribute(name = "FuelType")
                    protected String fuelType;
                    @XmlAttribute(name = "Kilometres")
                    protected BigInteger kilometres;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "Options")
                    protected String options;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "RegisteredInState")
                    protected AuStateList registeredInState;
                    @XmlAttribute(name = "RegistrationExpiryDate")
                    protected XMLGregorianCalendar registrationExpiryDate;
                    @XmlAttribute(name = "RegistrationNumber")
                    protected String registrationNumber;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "Series")
                    protected String series;
                    @XmlAttribute(name = "Transmission")
                    protected String transmission;
                    @XmlAttribute(name = "Type")
                    protected VehicleTypeList type;
                    @XmlAttribute(name = "Variant")
                    protected String variant;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class OfficeEquipment {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "Type")
                    protected OfficeEquipmentTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class OtherAsset {
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Type")
                    protected OtherAssetTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "registration"
                })

@Data

@Entity
                public static class PPSR {
                    @XmlElement(name = "Registration")
                    protected List<Message.Content.Application.NonRealEstateAsset.PPSR.Registration> registration;
                    @XmlAttribute(name = "CollateralClass")
                    protected CollateralClassList collateralClass;
                    @XmlAttribute(name = "CollateralType")
                    protected CollateralTypeList collateralType;
                    @XmlAttribute(name = "DescriptionOfProceeds")
                    protected String descriptionOfProceeds;
                    @XmlAttribute(name = "PMSI")
                    protected YesNoList pmsi;
                    @XmlAttribute(name = "PPSRegistrable")
                    protected YesNoList ppsRegistrable;
                    @XmlAttribute(name = "ProceedsToBeClaimed")
                    protected YesNoList proceedsToBeClaimed;
                    @XmlAttribute(name = "SubjectToControl")
                    protected YesNoList subjectToControl;
                    @XmlAttribute(name = "SubordinateRegistration")
                    protected YesNoList subordinateRegistration;
                    @XmlAttribute(name = "SubordinateToNumber")
                    protected String subordinateToNumber;
                    public List<Message.Content.Application.NonRealEstateAsset.PPSR.Registration> getRegistration() {
                        if (registration == null) {
                            registration = new ArrayList<Message.Content.Application.NonRealEstateAsset.PPSR.Registration>();
                        }
                        return this.registration;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "registrationEvent"
                    })

@Data

@Entity
                    public static class Registration {
                        @XmlElement(name = "RegistrationEvent")
                        protected List<Message.Content.Application.NonRealEstateAsset.PPSR.Registration.RegistrationEvent> registrationEvent;
                        @XmlAttribute(name = "GivingOfNoticeIdentifier")
                        protected String givingOfNoticeIdentifier;
                        @XmlAttribute(name = "PurchaseMoneySecurityInterest")
                        protected YesNoList purchaseMoneySecurityInterest;
                        @XmlAttribute(name = "RegistrationEndDateTime")
                        protected XMLGregorianCalendar registrationEndDateTime;
                        @XmlAttribute(name = "RegistrationNumber")
                        protected String registrationNumber;
                        @XmlAttribute(name = "RegistrationStartDateTime")
                        protected XMLGregorianCalendar registrationStartDateTime;
                        @XmlAttribute(name = "RegistrationToken")
                        protected String registrationToken;
                        @XmlAttribute(name = "SecuredPartyGroupNumber")
                        protected String securedPartyGroupNumber;
                        public List<Message.Content.Application.NonRealEstateAsset.PPSR.Registration.RegistrationEvent> getRegistrationEvent() {
                            if (registrationEvent == null) {
                                registrationEvent = new ArrayList<Message.Content.Application.NonRealEstateAsset.PPSR.Registration.RegistrationEvent>();
                            }
                            return this.registrationEvent;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class RegistrationEvent {
                            @XmlAttribute(name = "ChangeDateTime")
                            protected XMLGregorianCalendar changeDateTime;
                            @XmlAttribute(name = "ChangeNumber")
                            protected String changeNumber;
                            @XmlAttribute(name = "PPSRTransactionID")
                            protected String ppsrTransactionID;
                            @XmlAttribute(name = "Type")
                            protected RegistrationEventTypeList type;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class PlantEquipmentAndIndustrial {
                    @XmlAttribute(name = "AdditionalIDType")
                    protected String additionalIDType;
                    @XmlAttribute(name = "AdditionalIDValue")
                    protected String additionalIDValue;
                    @XmlAttribute(name = "Age")
                    protected BigInteger age;
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "ConditionDescription")
                    protected String conditionDescription;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EffectiveLife")
                    protected BigDecimal effectiveLife;
                    @XmlAttribute(name = "EngineHoursTotal")
                    protected BigInteger engineHoursTotal;
                    @XmlAttribute(name = "GoodToBeUsedLocation")
                    protected GoodToBeUsedLocationList goodToBeUsedLocation;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "OtherInformation")
                    protected String otherInformation;
                    @XmlAttribute(name = "Quantity")
                    protected BigInteger quantity;
                    @XmlAttribute(name = "SerialNumber")
                    protected String serialNumber;
                    @XmlAttribute(name = "ServicingHistory")
                    protected String servicingHistory;
                    @XmlAttribute(name = "Type")
                    protected PlantEquipmentAndIndustrialTypeList type;
                    @XmlAttribute(name = "x_GoodToBeUsedAddress")
                    @XmlIDREF
                    protected Object xGoodToBeUsedAddress;
                    @XmlAttribute(name = "Year")
                    protected XMLGregorianCalendar year;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ToolsOfTrade {
                    @XmlAttribute(name = "Condition")
                    protected ConditionList condition;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "Make")
                    protected String make;
                    @XmlAttribute(name = "Model")
                    protected String model;
                    @XmlAttribute(name = "Type")
                    protected ToolsOfTradeTypeList type;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "arrears",
                "percentOwned"
            })

@Data

@Entity
            public static class OtherExpense {
                @XmlElement(name = "Arrears")
                protected Message.Content.Application.OtherExpense.Arrears arrears;
                @XmlElement(name = "PercentOwned")
                protected PercentOwnedType percentOwned;
                @XmlAttribute(name = "Amount")
                protected BigDecimal amount;
                @XmlAttribute(name = "Category")
                protected OtherExpenseCategoryList category;
                @XmlAttribute(name = "Description")
                protected String description;
                @XmlAttribute(name = "EndDate")
                protected XMLGregorianCalendar endDate;
                @XmlAttribute(name = "Frequency")
                protected FrequencyShortList frequency;
                @XmlAttribute(name = "HasArrears")
                protected YesNoList hasArrears;
                @XmlAttribute(name = "StartDate")
                protected XMLGregorianCalendar startDate;
                @XmlAttribute(name = "Type")
                protected OtherExpenseTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Arrears {
                    @XmlAttribute(name = "Amount")
                    protected BigDecimal amount;
                    @XmlAttribute(name = "NumberOfMissedPayments")
                    protected BigInteger numberOfMissedPayments;
                    @XmlAttribute(name = "ToBePaidOut")
                    protected YesNoList toBePaidOut;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "percentOwned"
            })

@Data

@Entity
            public static class OtherIncome {
                @XmlElement(name = "PercentOwned")
                protected PercentOwnedType percentOwned;
                @XmlAttribute(name = "Amount")
                protected BigDecimal amount;
                @XmlAttribute(name = "BenefitsDescription")
                protected String benefitsDescription;
                @XmlAttribute(name = "Country")
                protected CountryCodeList country;
                @XmlAttribute(name = "Description")
                protected String description;
                @XmlAttribute(name = "EndDate")
                protected XMLGregorianCalendar endDate;
                @XmlAttribute(name = "Frequency")
                protected FrequencyShortList frequency;
                @XmlAttribute(name = "GovernmentBenefitsType")
                protected GovernmentBenefitsTypeList governmentBenefitsType;
                @XmlAttribute(name = "IncomeStatusOnOrBeforeSettlement")
                protected IncomeStatusOnOrBeforeSettlementList incomeStatusOnOrBeforeSettlement;
                @XmlAttribute(name = "IncomeVerification")
                protected IncomeVerificationList incomeVerification;
                @XmlAttribute(name = "IsTaxable")
                protected YesNoList isTaxable;
                @XmlAttribute(name = "NetAmount")
                protected BigDecimal netAmount;
                @XmlAttribute(name = "NetAmountFrequency")
                protected FrequencyShortList netAmountFrequency;
                @XmlAttribute(name = "PreviousYearAmount")
                protected BigDecimal previousYearAmount;
                @XmlAttribute(name = "PrimaryForeignCurrency")
                protected CurrencyCodeList primaryForeignCurrency;
                @XmlAttribute(name = "ProofCode")
                protected ProofCodeOtherList proofCode;
                @XmlAttribute(name = "ProofSighted")
                protected YesNoList proofSighted;
                @XmlAttribute(name = "StartDate")
                protected XMLGregorianCalendar startDate;
                @XmlAttribute(name = "Taxed")
                protected YesNoList taxed;
                @XmlAttribute(name = "Type")
                protected OtherIncomeTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "branchDomicile",
                "branchSign",
                "branchStamp",
                "bridgingFinance",
                "signature"
            })

@Data

@Entity
            public static class Overview {
                @XmlElement(name = "BranchDomicile")
                protected Message.Content.Application.Overview.BranchDomicile branchDomicile;
                @XmlElement(name = "BranchSign")
                protected Message.Content.Application.Overview.BranchSign branchSign;
                @XmlElement(name = "BranchStamp")
                protected Message.Content.Application.Overview.BranchStamp branchStamp;
                @XmlElement(name = "BridgingFinance")
                protected Message.Content.Application.Overview.BridgingFinance bridgingFinance;
                @XmlElement(name = "Signature")
                protected List<SignatureType> signature;
                @XmlAttribute(name = "ApplicationType")
                protected ApplicationTypeList applicationType;
                @XmlAttribute(name = "BrokerApplicationReferenceNumber")
                protected String brokerApplicationReferenceNumber;
                @XmlAttribute(name = "BrokerApplicationSequenceNumber")
                protected BigInteger brokerApplicationSequenceNumber;
                @XmlAttribute(name = "CombinationLoan")
                protected YesNoList combinationLoan;
                @XmlAttribute(name = "DocType")
                protected ApplicationDocTypeList docType;
                @XmlAttribute(name = "ExpectedSettlementDate")
                protected XMLGregorianCalendar expectedSettlementDate;
                @XmlAttribute(name = "FastRefinance")
                protected YesNoList fastRefinance;
                @XmlAttribute(name = "HasSpecialCircumstances")
                protected YesNoList hasSpecialCircumstances;
                @XmlAttribute(name = "IsBridgingFinance")
                protected YesNoList isBridgingFinance;
                @XmlAttribute(name = "LenderApplicationReferenceNumber")
                protected String lenderApplicationReferenceNumber;
                @XmlAttribute(name = "LenderPreapprovalReferenceNumber")
                protected String lenderPreapprovalReferenceNumber;
                @XmlAttribute(name = "LinkedCommercialApplication")
                protected YesNoList linkedCommercialApplication;
                @XmlAttribute(name = "LodgementReferenceNumber")
                protected String lodgementReferenceNumber;
                @XmlAttribute(name = "LodgementSequenceNumber")
                protected BigInteger lodgementSequenceNumber;
                @XmlAttribute(name = "PrivateBanking")
                protected YesNoList privateBanking;
                @XmlAttribute(name = "ProPack")
                protected YesNoList proPack;
                @XmlAttribute(name = "SMSFLoan")
                protected YesNoList smsfLoan;
                @XmlAttribute(name = "Urgent")
                protected YesNoList urgent;
                @XmlAttribute(name = "x_MainContactPoint")
                @XmlIDREF
                protected Object xMainContactPoint;
                public List<SignatureType> getSignature() {
                    if (signature == null) {
                        signature = new ArrayList<SignatureType>();
                    }
                    return this.signature;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contact"
                })

@Data

@Entity
                public static class BranchDomicile {
                    @XmlElement(name = "Contact")
                    protected Message.Content.Application.Overview.BranchDomicile.Contact contact;
                    @XmlAttribute(name = "BSB")
                    protected String bsb;
                    @XmlAttribute(name = "InternalName")
                    protected String internalName;
                    @XmlAttribute(name = "InternalNumber")
                    protected String internalNumber;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "officeFax",
                        "officePhone"
                    })

@Data

@Entity
                    public static class Contact {
                        @XmlElement(name = "OfficeFax")
                        protected PhoneType officeFax;
                        @XmlElement(name = "OfficePhone")
                        protected PhoneType officePhone;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contact"
                })

@Data

@Entity
                public static class BranchSign {
                    @XmlElement(name = "Contact")
                    protected Message.Content.Application.Overview.BranchSign.Contact contact;
                    @XmlAttribute(name = "BSB")
                    protected String bsb;
                    @XmlAttribute(name = "InternalName")
                    protected String internalName;
                    @XmlAttribute(name = "InternalNumber")
                    protected String internalNumber;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "officeFax",
                        "officePhone"
                    })

@Data

@Entity
                    public static class Contact {
                        @XmlElement(name = "OfficeFax")
                        protected PhoneType officeFax;
                        @XmlElement(name = "OfficePhone")
                        protected PhoneType officePhone;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class BranchStamp {
                    @XmlAttribute(name = "Stamped")
                    protected YesNoList stamped;
                    @XmlAttribute(name = "StampRequired")
                    protected YesNoList stampRequired;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class BridgingFinance {
                    @XmlAttribute(name = "BridgingTerm")
                    protected BigInteger bridgingTerm;
                    @XmlAttribute(name = "CapitalisedInterestAmount")
                    protected BigDecimal capitalisedInterestAmount;
                    @XmlAttribute(name = "CapitaliseInterest")
                    protected YesNoList capitaliseInterest;
                    @XmlAttribute(name = "EndDebt")
                    protected BigDecimal endDebt;
                    @XmlAttribute(name = "EstimatedSellingCosts")
                    protected BigDecimal estimatedSellingCosts;
                    @XmlAttribute(name = "PeakDebt")
                    protected BigDecimal peakDebt;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "contact",
                "creditHistory",
                "documentationInstructions",
                "employment",
                "existingCustomer",
                "financialSituationCheck",
                "foreignTaxAssociation",
                "identityCheck",
                "insurance",
                "maritalStatusDetails",
                "nextOfKin",
                "nominatedBorrower",
                "personName",
                "powerOfAttorney",
                "previousName",
                "privacy",
                "proofOfIdentity",
                "responsibleLending",
                "sourceOfFunds",
                "sourceOfWealth",
                "taxDeclarationDetails",
                "will"
            })

@Data

@Entity
            public static class PersonApplicant {
                @XmlElement(name = "Contact")
                protected Message.Content.Application.PersonApplicant.Contact contact;
                @XmlElement(name = "CreditHistory")
                protected List<Message.Content.Application.PersonApplicant.CreditHistory> creditHistory;
                @XmlElement(name = "DocumentationInstructions")
                protected Message.Content.Application.PersonApplicant.DocumentationInstructions documentationInstructions;
                @XmlElement(name = "Employment")
                protected List<Message.Content.Application.PersonApplicant.Employment> employment;
                @XmlElement(name = "ExistingCustomer")
                protected Message.Content.Application.PersonApplicant.ExistingCustomer existingCustomer;
                @XmlElement(name = "FinancialSituationCheck")
                protected List<Message.Content.Application.PersonApplicant.FinancialSituationCheck> financialSituationCheck;
                @XmlElement(name = "ForeignTaxAssociation")
                protected ForeignTaxAssociationType foreignTaxAssociation;
                @XmlElement(name = "IdentityCheck")
                protected List<Message.Content.Application.PersonApplicant.IdentityCheck> identityCheck;
                @XmlElement(name = "Insurance")
                protected List<Message.Content.Application.PersonApplicant.Insurance> insurance;
                @XmlElement(name = "MaritalStatusDetails")
                protected Message.Content.Application.PersonApplicant.MaritalStatusDetails maritalStatusDetails;
                @XmlElement(name = "NextOfKin")
                protected Message.Content.Application.PersonApplicant.NextOfKin nextOfKin;
                @XmlElement(name = "NominatedBorrower")
                protected Message.Content.Application.PersonApplicant.NominatedBorrower nominatedBorrower;
                @XmlElement(name = "PersonName")
                protected PersonNameType personName;
                @XmlElement(name = "PowerOfAttorney")
                protected Message.Content.Application.PersonApplicant.PowerOfAttorney powerOfAttorney;
                @XmlElement(name = "PreviousName")
                protected Message.Content.Application.PersonApplicant.PreviousName previousName;
                @XmlElement(name = "Privacy")
                protected Message.Content.Application.PersonApplicant.Privacy privacy;
                @XmlElement(name = "ProofOfIdentity")
                protected List<Message.Content.Application.PersonApplicant.ProofOfIdentity> proofOfIdentity;
                @XmlElement(name = "ResponsibleLending")
                protected ResponsibleLendingType responsibleLending;
                @XmlElement(name = "SourceOfFunds")
                protected List<Message.Content.Application.PersonApplicant.SourceOfFunds> sourceOfFunds;
                @XmlElement(name = "SourceOfWealth")
                protected List<Message.Content.Application.PersonApplicant.SourceOfWealth> sourceOfWealth;
                @XmlElement(name = "TaxDeclarationDetails")
                protected TaxDeclarationDetailsType taxDeclarationDetails;
                @XmlElement(name = "Will")
                protected Message.Content.Application.PersonApplicant.Will will;
                @XmlAttribute(name = "ApplicantType")
                protected ApplicantTypeList applicantType;
                @XmlAttribute(name = "Citizenship")
                protected CountryCodeList citizenship;
                @XmlAttribute(name = "CompanyDirector")
                protected YesNoList companyDirector;
                @XmlAttribute(name = "CountryOfBirth")
                protected CountryCodeList countryOfBirth;
                @XmlAttribute(name = "CreditStatus")
                protected CreditStatusList creditStatus;
                @XmlAttribute(name = "CustomerTypeCode")
                protected String customerTypeCode;
                @XmlAttribute(name = "CustomerTypeDescription")
                protected String customerTypeDescription;
                @XmlAttribute(name = "DateOfBirth")
                protected XMLGregorianCalendar dateOfBirth;
                @XmlAttribute(name = "DiscussedWithBeneficiaries")
                protected YesNoList discussedWithBeneficiaries;
                @XmlAttribute(name = "EligibleForFHOG")
                protected YesNoList eligibleForFHOG;
                @XmlAttribute(name = "FirstHomeBuyer")
                protected YesNoList firstHomeBuyer;
                @XmlAttribute(name = "FirstPropertyBuyer")
                protected YesNoList firstPropertyBuyer;
                @XmlAttribute(name = "Gender")
                protected GenderList gender;
                @XmlAttribute(name = "HasAppliedForAustralianCitizenship")
                protected YesNoList hasAppliedForAustralianCitizenship;
                @XmlAttribute(name = "HasAppliedForPermanentResidencyVisa")
                protected YesNoList hasAppliedForPermanentResidencyVisa;
                @XmlAttribute(name = "HasAWill")
                protected YesNoList hasAWill;
                @XmlAttribute(name = "HasPreviousName")
                protected YesNoList hasPreviousName;
                @XmlAttribute(name = "Immigrant")
                protected YesNoList immigrant;
                @XmlAttribute(name = "ImmigrationDate")
                protected XMLGregorianCalendar immigrationDate;
                @XmlAttribute(name = "IndependentFinancialAdvice")
                protected YesNoList independentFinancialAdvice;
                @XmlAttribute(name = "IndependentLegalAdvice")
                protected YesNoList independentLegalAdvice;
                @XmlAttribute(name = "IsExistingCustomer")
                protected YesNoList isExistingCustomer;
                @XmlAttribute(name = "IsLenderStaff")
                protected YesNoList isLenderStaff;
                @XmlAttribute(name = "JointNomination")
                protected YesNoList jointNomination;
                @XmlAttribute(name = "JointStatementOfPosition")
                protected YesNoList jointStatementOfPosition;
                @XmlAttribute(name = "MaritalStatus")
                protected MaritalStatusList maritalStatus;
                @XmlAttribute(name = "MonthsInCurrentProfession")
                protected BigDecimal monthsInCurrentProfession;
                @XmlAttribute(name = "MothersMaidenName")
                protected String mothersMaidenName;
                @XmlAttribute(name = "PermanentResidencyDate")
                protected XMLGregorianCalendar permanentResidencyDate;
                @XmlAttribute(name = "PlaceOfBirth")
                protected String placeOfBirth;
                @XmlAttribute(name = "POAGranted")
                protected YesNoList poaGranted;
                @XmlAttribute(name = "PrimaryApplicant")
                protected YesNoList primaryApplicant;
                @XmlAttribute(name = "PrincipalForeignResidence")
                protected CountryCodeList principalForeignResidence;
                @XmlAttribute(name = "RelationshipToPrimaryApplicant")
                protected KinRelationshipList relationshipToPrimaryApplicant;
                @XmlAttribute(name = "ResidencyStatus")
                protected ResidencyStatusList residencyStatus;
                @XmlAttribute(name = "TemporaryVisaExpiryDate")
                protected XMLGregorianCalendar temporaryVisaExpiryDate;
                @XmlAttribute(name = "UnderDuress")
                protected YesNoList underDuress;
                @XmlAttribute(name = "UnderstandApplication")
                protected YesNoList understandApplication;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "VisaSubclassCode")
                protected String visaSubclassCode;
                @XmlAttribute(name = "x_Accountant")
                @XmlIDREF
                protected Object xAccountant;
                @XmlAttribute(name = "x_Household")
                @XmlIDREF
                protected Object xHousehold;
                @XmlAttribute(name = "x_PersonalReference")
                @XmlIDREF
                protected Object xPersonalReference;
                @XmlAttribute(name = "x_Solicitor")
                @XmlIDREF
                protected Object xSolicitor;
                @XmlAttribute(name = "YearsInCurrentProfession")
                protected BigDecimal yearsInCurrentProfession;
                public List<Message.Content.Application.PersonApplicant.CreditHistory> getCreditHistory() {
                    if (creditHistory == null) {
                        creditHistory = new ArrayList<Message.Content.Application.PersonApplicant.CreditHistory>();
                    }
                    return this.creditHistory;
                }
                public List<Message.Content.Application.PersonApplicant.Employment> getEmployment() {
                    if (employment == null) {
                        employment = new ArrayList<Message.Content.Application.PersonApplicant.Employment>();
                    }
                    return this.employment;
                }
                public List<Message.Content.Application.PersonApplicant.FinancialSituationCheck> getFinancialSituationCheck() {
                    if (financialSituationCheck == null) {
                        financialSituationCheck = new ArrayList<Message.Content.Application.PersonApplicant.FinancialSituationCheck>();
                    }
                    return this.financialSituationCheck;
                }
                public List<Message.Content.Application.PersonApplicant.IdentityCheck> getIdentityCheck() {
                    if (identityCheck == null) {
                        identityCheck = new ArrayList<Message.Content.Application.PersonApplicant.IdentityCheck>();
                    }
                    return this.identityCheck;
                }
                public List<Message.Content.Application.PersonApplicant.Insurance> getInsurance() {
                    if (insurance == null) {
                        insurance = new ArrayList<Message.Content.Application.PersonApplicant.Insurance>();
                    }
                    return this.insurance;
                }
                public List<Message.Content.Application.PersonApplicant.ProofOfIdentity> getProofOfIdentity() {
                    if (proofOfIdentity == null) {
                        proofOfIdentity = new ArrayList<Message.Content.Application.PersonApplicant.ProofOfIdentity>();
                    }
                    return this.proofOfIdentity;
                }
                public List<Message.Content.Application.PersonApplicant.SourceOfFunds> getSourceOfFunds() {
                    if (sourceOfFunds == null) {
                        sourceOfFunds = new ArrayList<Message.Content.Application.PersonApplicant.SourceOfFunds>();
                    }
                    return this.sourceOfFunds;
                }
                public List<Message.Content.Application.PersonApplicant.SourceOfWealth> getSourceOfWealth() {
                    if (sourceOfWealth == null) {
                        sourceOfWealth = new ArrayList<Message.Content.Application.PersonApplicant.SourceOfWealth>();
                    }
                    return this.sourceOfWealth;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "currentAddress",
                    "emailAddress",
                    "faxNumber",
                    "homePhone",
                    "mobile",
                    "postSettlementAddress",
                    "previousAddress",
                    "priorAddress",
                    "workPhone"
                })

@Data

@Entity
                public static class Contact {
                    @XmlElement(name = "CurrentAddress")
                    protected Message.Content.Application.PersonApplicant.Contact.CurrentAddress currentAddress;
                    @XmlElement(name = "EmailAddress")
                    protected List<Message.Content.Application.PersonApplicant.Contact.EmailAddress> emailAddress;
                    @XmlElement(name = "FaxNumber")
                    protected PhoneType faxNumber;
                    @XmlElement(name = "HomePhone")
                    protected PhoneType homePhone;
                    @XmlElement(name = "Mobile")
                    protected PhoneType mobile;
                    @XmlElement(name = "PostSettlementAddress")
                    protected Message.Content.Application.PersonApplicant.Contact.PostSettlementAddress postSettlementAddress;
                    @XmlElement(name = "PreviousAddress")
                    protected Message.Content.Application.PersonApplicant.Contact.PreviousAddress previousAddress;
                    @XmlElement(name = "PriorAddress")
                    protected List<Message.Content.Application.PersonApplicant.Contact.PriorAddress> priorAddress;
                    @XmlElement(name = "WorkPhone")
                    protected PhoneType workPhone;
                    @XmlAttribute(name = "PreferredContact")
                    protected PreferredContactPersonList preferredContact;
                    public List<Message.Content.Application.PersonApplicant.Contact.EmailAddress> getEmailAddress() {
                        if (emailAddress == null) {
                            emailAddress = new ArrayList<Message.Content.Application.PersonApplicant.Contact.EmailAddress>();
                        }
                        return this.emailAddress;
                    }
                    public List<Message.Content.Application.PersonApplicant.Contact.PriorAddress> getPriorAddress() {
                        if (priorAddress == null) {
                            priorAddress = new ArrayList<Message.Content.Application.PersonApplicant.Contact.PriorAddress>();
                        }
                        return this.priorAddress;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration"
                    })

@Data

@Entity
                    public static class CurrentAddress {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlAttribute(name = "HousingStatus")
                        protected HousingStatusList housingStatus;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "x_Landlord")
                        @XmlIDREF
                        protected Object xLandlord;
                        @XmlAttribute(name = "x_MailingAddress")
                        @XmlIDREF
                        protected Object xMailingAddress;
                        @XmlAttribute(name = "x_ResidentialAddress")
                        @XmlIDREF
                        protected Object xResidentialAddress;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class EmailAddress {
                        @XmlAttribute(name = "Email")
                        protected String email;
                        @XmlAttribute(name = "EmailType")
                        protected ContactEmailTypeList emailType;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class PostSettlementAddress {
                        @XmlAttribute(name = "HousingStatus")
                        protected HousingStatusList housingStatus;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "x_MailingAddress")
                        @XmlIDREF
                        protected Object xMailingAddress;
                        @XmlAttribute(name = "x_ResidentialAddress")
                        @XmlIDREF
                        protected Object xResidentialAddress;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration"
                    })

@Data

@Entity
                    public static class PreviousAddress {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "HousingStatus")
                        protected HousingStatusList housingStatus;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "x_ResidentialAddress")
                        @XmlIDREF
                        protected Object xResidentialAddress;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration"
                    })

@Data

@Entity
                    public static class PriorAddress {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "HousingStatus")
                        protected HousingStatusList housingStatus;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "x_ResidentialAddress")
                        @XmlIDREF
                        protected Object xResidentialAddress;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class CreditHistory {
                    @XmlAttribute(name = "Details")
                    protected String details;
                    @XmlAttribute(name = "IsCurrent")
                    protected YesNoList isCurrent;
                    @XmlAttribute(name = "Issue")
                    protected CreditHistoryIssueList issue;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class DocumentationInstructions {
                    @XmlAttribute(name = "Method")
                    protected DocumentationInstructionsMethodList method;
                    @XmlAttribute(name = "SendDocumentsTo")
                    protected SendDocumentsToPersonList sendDocumentsTo;
                    @XmlAttribute(name = "x_NominatedAuthority")
                    @XmlIDREF
                    protected Object xNominatedAuthority;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "foreignEmployed",
                    "notEmployed",
                    "payg",
                    "selfEmployed"
                })

@Data

@Entity
                public static class Employment {
                    @XmlElement(name = "ForeignEmployed")
                    protected Message.Content.Application.PersonApplicant.Employment.ForeignEmployed foreignEmployed;
                    @XmlElement(name = "NotEmployed")
                    protected Message.Content.Application.PersonApplicant.Employment.NotEmployed notEmployed;
                    @XmlElement(name = "PAYG")
                    protected Message.Content.Application.PersonApplicant.Employment.PAYG payg;
                    @XmlElement(name = "SelfEmployed")
                    protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed selfEmployed;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration",
                        "income"
                    })

@Data

@Entity
                    public static class ForeignEmployed {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlElement(name = "Income")
                        protected Message.Content.Application.PersonApplicant.Employment.ForeignEmployed.Income income;
                        @XmlAttribute(name = "AverageHoursPerWeek")
                        protected BigDecimal averageHoursPerWeek;
                        @XmlAttribute(name = "Basis")
                        protected ForeignEmployedBasisList basis;
                        @XmlAttribute(name = "CompanyCar")
                        protected YesNoList companyCar;
                        @XmlAttribute(name = "CustomIndustryCode")
                        protected String customIndustryCode;
                        @XmlAttribute(name = "CustomOccupationCode")
                        protected String customOccupationCode;
                        @XmlAttribute(name = "EmployerType")
                        protected EmployerTypeList employerType;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "GICSCode")
                        protected String gicsCode;
                        @XmlAttribute(name = "IncomeStatusOnOrBeforeSettlement")
                        protected IncomeStatusOnOrBeforeSettlementList incomeStatusOnOrBeforeSettlement;
                        @XmlAttribute(name = "Industry")
                        protected String industry;
                        @XmlAttribute(name = "MainBusinessActivity")
                        protected String mainBusinessActivity;
                        @XmlAttribute(name = "Occupation")
                        protected String occupation;
                        @XmlAttribute(name = "OnProbation")
                        protected YesNoList onProbation;
                        @XmlAttribute(name = "PositionTitle")
                        protected String positionTitle;
                        @XmlAttribute(name = "ProbationDateEnds")
                        protected XMLGregorianCalendar probationDateEnds;
                        @XmlAttribute(name = "ProbationDateStarts")
                        protected XMLGregorianCalendar probationDateStarts;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "Status")
                        protected EmploymentStatusList status;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "x_Employer")
                        @XmlIDREF
                        protected Object xEmployer;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Income {
                            @XmlAttribute(name = "BonusAmount")
                            protected BigDecimal bonusAmount;
                            @XmlAttribute(name = "BonusFrequency")
                            protected FrequencyShortList bonusFrequency;
                            @XmlAttribute(name = "CarAllowanceAmount")
                            protected BigDecimal carAllowanceAmount;
                            @XmlAttribute(name = "CarAllowanceFrequency")
                            protected FrequencyShortList carAllowanceFrequency;
                            @XmlAttribute(name = "CommissionAmount")
                            protected BigDecimal commissionAmount;
                            @XmlAttribute(name = "CommissionFrequency")
                            protected FrequencyShortList commissionFrequency;
                            @XmlAttribute(name = "GrossRegularOvertimeAmount")
                            protected BigDecimal grossRegularOvertimeAmount;
                            @XmlAttribute(name = "GrossRegularOvertimeFrequency")
                            protected FrequencyShortList grossRegularOvertimeFrequency;
                            @XmlAttribute(name = "GrossSalaryAmount")
                            protected BigDecimal grossSalaryAmount;
                            @XmlAttribute(name = "GrossSalaryFrequency")
                            protected FrequencyShortList grossSalaryFrequency;
                            @XmlAttribute(name = "NetBonusAmount")
                            protected BigDecimal netBonusAmount;
                            @XmlAttribute(name = "NetBonusFrequency")
                            protected FrequencyShortList netBonusFrequency;
                            @XmlAttribute(name = "NetCarAllowanceAmount")
                            protected BigDecimal netCarAllowanceAmount;
                            @XmlAttribute(name = "NetCarAllowanceFrequency")
                            protected FrequencyShortList netCarAllowanceFrequency;
                            @XmlAttribute(name = "NetCommissionAmount")
                            protected BigDecimal netCommissionAmount;
                            @XmlAttribute(name = "NetCommissionFrequency")
                            protected FrequencyShortList netCommissionFrequency;
                            @XmlAttribute(name = "NetRegularOvertimeAmount")
                            protected BigDecimal netRegularOvertimeAmount;
                            @XmlAttribute(name = "NetRegularOvertimeFrequency")
                            protected FrequencyShortList netRegularOvertimeFrequency;
                            @XmlAttribute(name = "NetSalaryAmount")
                            protected BigDecimal netSalaryAmount;
                            @XmlAttribute(name = "NetSalaryFrequency")
                            protected FrequencyShortList netSalaryFrequency;
                            @XmlAttribute(name = "NetWorkAllowanceAmount")
                            protected BigDecimal netWorkAllowanceAmount;
                            @XmlAttribute(name = "NetWorkAllowanceFrequency")
                            protected FrequencyShortList netWorkAllowanceFrequency;
                            @XmlAttribute(name = "NetWorkersCompensationAmount")
                            protected BigDecimal netWorkersCompensationAmount;
                            @XmlAttribute(name = "NetWorkersCompensationFrequency")
                            protected FrequencyShortList netWorkersCompensationFrequency;
                            @XmlAttribute(name = "ProofSighted")
                            protected YesNoList proofSighted;
                            @XmlAttribute(name = "WorkAllowanceAmount")
                            protected BigDecimal workAllowanceAmount;
                            @XmlAttribute(name = "WorkAllowanceFrequency")
                            protected FrequencyShortList workAllowanceFrequency;
                            @XmlAttribute(name = "WorkersCompensationAmount")
                            protected BigDecimal workersCompensationAmount;
                            @XmlAttribute(name = "WorkersCompensationFrequency")
                            protected FrequencyShortList workersCompensationFrequency;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration",
                        "income"
                    })

@Data

@Entity
                    public static class NotEmployed {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlElement(name = "Income")
                        protected Message.Content.Application.PersonApplicant.Employment.NotEmployed.Income income;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "HomeDuties")
                        protected YesNoList homeDuties;
                        @XmlAttribute(name = "IncomeStatusOnOrBeforeSettlement")
                        protected IncomeStatusOnOrBeforeSettlementList incomeStatusOnOrBeforeSettlement;
                        @XmlAttribute(name = "OnBenefits")
                        protected YesNoList onBenefits;
                        @XmlAttribute(name = "Retired")
                        protected YesNoList retired;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "Status")
                        protected EmploymentStatusList status;
                        @XmlAttribute(name = "Student")
                        protected YesNoList student;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Income {
                            @XmlAttribute(name = "GovernmentBenefitsAmount")
                            protected BigDecimal governmentBenefitsAmount;
                            @XmlAttribute(name = "GovernmentBenefitsFrequency")
                            protected FrequencyShortList governmentBenefitsFrequency;
                            @XmlAttribute(name = "NetGovernmentBenefitsAmount")
                            protected BigDecimal netGovernmentBenefitsAmount;
                            @XmlAttribute(name = "NetGovernmentBenefitsFrequency")
                            protected FrequencyShortList netGovernmentBenefitsFrequency;
                            @XmlAttribute(name = "NetNewstartAllowanceAmount")
                            protected BigDecimal netNewstartAllowanceAmount;
                            @XmlAttribute(name = "NetNewstartAllowanceFrequency")
                            protected FrequencyShortList netNewstartAllowanceFrequency;
                            @XmlAttribute(name = "NetOtherIncomeAmount")
                            protected BigDecimal netOtherIncomeAmount;
                            @XmlAttribute(name = "NetOtherIncomeFrequency")
                            protected FrequencyShortList netOtherIncomeFrequency;
                            @XmlAttribute(name = "NetPrivatePensionAmount")
                            protected BigDecimal netPrivatePensionAmount;
                            @XmlAttribute(name = "NetPrivatePensionFrequency")
                            protected FrequencyShortList netPrivatePensionFrequency;
                            @XmlAttribute(name = "NetSuperannuationAmount")
                            protected BigDecimal netSuperannuationAmount;
                            @XmlAttribute(name = "NetSuperannuationFrequency")
                            protected FrequencyShortList netSuperannuationFrequency;
                            @XmlAttribute(name = "NewstartAllowanceAmount")
                            protected BigDecimal newstartAllowanceAmount;
                            @XmlAttribute(name = "NewstartAllowanceFrequency")
                            protected FrequencyShortList newstartAllowanceFrequency;
                            @XmlAttribute(name = "OtherIncomeAmount")
                            protected BigDecimal otherIncomeAmount;
                            @XmlAttribute(name = "OtherIncomeDescription")
                            protected String otherIncomeDescription;
                            @XmlAttribute(name = "OtherIncomeFrequency")
                            protected FrequencyShortList otherIncomeFrequency;
                            @XmlAttribute(name = "PrivatePensionAmount")
                            protected BigDecimal privatePensionAmount;
                            @XmlAttribute(name = "PrivatePensionFrequency")
                            protected FrequencyShortList privatePensionFrequency;
                            @XmlAttribute(name = "ProofCode")
                            protected ProofCodeNotEmployedList proofCode;
                            @XmlAttribute(name = "ProofSighted")
                            protected YesNoList proofSighted;
                            @XmlAttribute(name = "SMSF")
                            protected YesNoList smsf;
                            @XmlAttribute(name = "SuperannuationAmount")
                            protected BigDecimal superannuationAmount;
                            @XmlAttribute(name = "SuperannuationFrequency")
                            protected FrequencyShortList superannuationFrequency;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "duration",
                        "income"
                    })

@Data

@Entity
                    public static class PAYG {
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlElement(name = "Income")
                        protected Message.Content.Application.PersonApplicant.Employment.PAYG.Income income;
                        @XmlAttribute(name = "ANZSCOOccupationCode")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String anzscoOccupationCode;
                        @XmlAttribute(name = "AustralianBIC")
                        protected String australianBIC;
                        @XmlAttribute(name = "AverageHoursPerWeek")
                        protected BigDecimal averageHoursPerWeek;
                        @XmlAttribute(name = "Basis")
                        protected PaygBasisList basis;
                        @XmlAttribute(name = "CompanyCar")
                        protected YesNoList companyCar;
                        @XmlAttribute(name = "CustomIndustryCode")
                        protected String customIndustryCode;
                        @XmlAttribute(name = "EmployerType")
                        protected EmployerTypeList employerType;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "GICSCode")
                        protected String gicsCode;
                        @XmlAttribute(name = "IncomeStatusOnOrBeforeSettlement")
                        protected IncomeStatusOnOrBeforeSettlementList incomeStatusOnOrBeforeSettlement;
                        @XmlAttribute(name = "Industry")
                        protected String industry;
                        @XmlAttribute(name = "IndustryCode")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String industryCode;
                        @XmlAttribute(name = "MainBusinessActivity")
                        protected String mainBusinessActivity;
                        @XmlAttribute(name = "Occupation")
                        protected String occupation;
                        @XmlAttribute(name = "OccupationCode")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String occupationCode;
                        @XmlAttribute(name = "OnProbation")
                        protected YesNoList onProbation;
                        @XmlAttribute(name = "PositionTitle")
                        protected String positionTitle;
                        @XmlAttribute(name = "ProbationDateEnds")
                        protected XMLGregorianCalendar probationDateEnds;
                        @XmlAttribute(name = "ProbationDateStarts")
                        protected XMLGregorianCalendar probationDateStarts;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "Status")
                        protected EmploymentStatusList status;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "x_Employer")
                        @XmlIDREF
                        protected Object xEmployer;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Income {
                            @XmlAttribute(name = "BonusAmount")
                            protected BigDecimal bonusAmount;
                            @XmlAttribute(name = "BonusFrequency")
                            protected FrequencyShortList bonusFrequency;
                            @XmlAttribute(name = "CarAllowanceAmount")
                            protected BigDecimal carAllowanceAmount;
                            @XmlAttribute(name = "CarAllowanceFrequency")
                            protected FrequencyShortList carAllowanceFrequency;
                            @XmlAttribute(name = "CommissionAmount")
                            protected BigDecimal commissionAmount;
                            @XmlAttribute(name = "CommissionFrequency")
                            protected FrequencyShortList commissionFrequency;
                            @XmlAttribute(name = "GrossRegularOvertimeAmount")
                            protected BigDecimal grossRegularOvertimeAmount;
                            @XmlAttribute(name = "GrossRegularOvertimeFrequency")
                            protected FrequencyShortList grossRegularOvertimeFrequency;
                            @XmlAttribute(name = "GrossSalaryAmount")
                            protected BigDecimal grossSalaryAmount;
                            @XmlAttribute(name = "GrossSalaryFrequency")
                            protected FrequencyShortList grossSalaryFrequency;
                            @XmlAttribute(name = "NetBonusAmount")
                            protected BigDecimal netBonusAmount;
                            @XmlAttribute(name = "NetBonusFrequency")
                            protected FrequencyShortList netBonusFrequency;
                            @XmlAttribute(name = "NetCarAllowanceAmount")
                            protected BigDecimal netCarAllowanceAmount;
                            @XmlAttribute(name = "NetCarAllowanceFrequency")
                            protected FrequencyShortList netCarAllowanceFrequency;
                            @XmlAttribute(name = "NetCommissionAmount")
                            protected BigDecimal netCommissionAmount;
                            @XmlAttribute(name = "NetCommissionFrequency")
                            protected FrequencyShortList netCommissionFrequency;
                            @XmlAttribute(name = "NetRegularOvertimeAmount")
                            protected BigDecimal netRegularOvertimeAmount;
                            @XmlAttribute(name = "NetRegularOvertimeFrequency")
                            protected FrequencyShortList netRegularOvertimeFrequency;
                            @XmlAttribute(name = "NetSalaryAmount")
                            protected BigDecimal netSalaryAmount;
                            @XmlAttribute(name = "NetSalaryFrequency")
                            protected FrequencyShortList netSalaryFrequency;
                            @XmlAttribute(name = "NetWorkAllowanceAmount")
                            protected BigDecimal netWorkAllowanceAmount;
                            @XmlAttribute(name = "NetWorkAllowanceFrequency")
                            protected FrequencyShortList netWorkAllowanceFrequency;
                            @XmlAttribute(name = "NetWorkersCompensationAmount")
                            protected BigDecimal netWorkersCompensationAmount;
                            @XmlAttribute(name = "NetWorkersCompensationFrequency")
                            protected FrequencyShortList netWorkersCompensationFrequency;
                            @XmlAttribute(name = "ProofCode")
                            protected ProofCodePAYGList proofCode;
                            @XmlAttribute(name = "ProofSighted")
                            protected YesNoList proofSighted;
                            @XmlAttribute(name = "WorkAllowanceAmount")
                            protected BigDecimal workAllowanceAmount;
                            @XmlAttribute(name = "WorkAllowanceFrequency")
                            protected FrequencyShortList workAllowanceFrequency;
                            @XmlAttribute(name = "WorkersCompensationAmount")
                            protected BigDecimal workersCompensationAmount;
                            @XmlAttribute(name = "WorkersCompensationFrequency")
                            protected FrequencyShortList workersCompensationFrequency;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "business",
                        "businessIncomePrevious",
                        "businessIncomePrior",
                        "businessIncomeRecent",
                        "businessIncomeYearToDate",
                        "declaredIncome",
                        "duration",
                        "financialAnalysis"
                    })

@Data

@Entity
                    public static class SelfEmployed {
                        @XmlElement(name = "Business")
                        protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.Business business;
                        @XmlElement(name = "BusinessIncomePrevious")
                        protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious businessIncomePrevious;
                        @XmlElement(name = "BusinessIncomePrior")
                        protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior businessIncomePrior;
                        @XmlElement(name = "BusinessIncomeRecent")
                        protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent businessIncomeRecent;
                        @XmlElement(name = "BusinessIncomeYearToDate")
                        protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate businessIncomeYearToDate;
                        @XmlElement(name = "DeclaredIncome")
                        protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.DeclaredIncome declaredIncome;
                        @XmlElement(name = "Duration")
                        protected DurationType duration;
                        @XmlElement(name = "FinancialAnalysis")
                        protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis financialAnalysis;
                        @XmlAttribute(name = "ANZSCOOccupationCode")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String anzscoOccupationCode;
                        @XmlAttribute(name = "AverageHoursPerWeek")
                        protected BigDecimal averageHoursPerWeek;
                        @XmlAttribute(name = "Basis")
                        protected SelfEmployedBasisList basis;
                        @XmlAttribute(name = "EndDate")
                        protected XMLGregorianCalendar endDate;
                        @XmlAttribute(name = "IncomeStatusOnOrBeforeSettlement")
                        protected IncomeStatusOnOrBeforeSettlementList incomeStatusOnOrBeforeSettlement;
                        @XmlAttribute(name = "Occupation")
                        protected String occupation;
                        @XmlAttribute(name = "OccupationCode")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String occupationCode;
                        @XmlAttribute(name = "StartDate")
                        protected XMLGregorianCalendar startDate;
                        @XmlAttribute(name = "Status")
                        protected EmploymentStatusList status;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "x_Accountant")
                        @XmlIDREF
                        protected Object xAccountant;
                        @XmlAttribute(name = "x_Employer")
                        @XmlIDREF
                        protected Object xEmployer;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Business {
                            @XmlAttribute(name = "AustralianBIC")
                            protected String australianBIC;
                            @XmlAttribute(name = "CustomIndustryCode")
                            protected String customIndustryCode;
                            @XmlAttribute(name = "GICSCode")
                            protected String gicsCode;
                            @XmlAttribute(name = "Industry")
                            protected String industry;
                            @XmlAttribute(name = "IndustryCode")
                            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                            protected String industryCode;
                            @XmlAttribute(name = "IsAFranchise")
                            protected YesNoList isAFranchise;
                            @XmlAttribute(name = "MainBusinessActivity")
                            protected String mainBusinessActivity;
                            @XmlAttribute(name = "NumberOfEmployees")
                            protected BigInteger numberOfEmployees;
                            @XmlAttribute(name = "NumberOfLocations")
                            protected BigInteger numberOfLocations;
                            @XmlAttribute(name = "OwnPremises")
                            protected YesNoList ownPremises;
                            @XmlAttribute(name = "StartDate")
                            protected XMLGregorianCalendar startDate;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "", propOrder = {
                            "addback",
                            "foreignSourcedIncome"
                        })

@Data

@Entity
                        public static class BusinessIncomePrevious {
                            @XmlElement(name = "Addback")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback addback;
                            @XmlElement(name = "ForeignSourcedIncome")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.ForeignSourcedIncome foreignSourcedIncome;
                            @XmlAttribute(name = "EndDate")
                            protected XMLGregorianCalendar endDate;
                            @XmlAttribute(name = "HasForeignSourcedIncome")
                            protected YesNoList hasForeignSourcedIncome;
                            @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                            protected YesNoList incomeGreaterThanPreviousYear;
                            @XmlAttribute(name = "ProfitAfterTax")
                            protected BigDecimal profitAfterTax;
                            @XmlAttribute(name = "ProfitBeforeTax")
                            protected BigDecimal profitBeforeTax;
                            @XmlAttribute(name = "StartDate")
                            protected XMLGregorianCalendar startDate;
                            @XmlAttribute(name = "TaxOfficeAssessments")
                            protected YesNoList taxOfficeAssessments;
                            @XmlAttribute(name = "x_Accountant")
                            @XmlIDREF
                            protected Object xAccountant;
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "", propOrder = {
                                "otherAddback"
                            })

@Data

@Entity
                            public static class Addback {
                                @XmlElement(name = "OtherAddback")
                                protected List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.OtherAddback> otherAddback;
                                @XmlAttribute(name = "Allowances")
                                protected BigDecimal allowances;
                                @XmlAttribute(name = "AmortisationOfGoodwill")
                                protected BigDecimal amortisationOfGoodwill;
                                @XmlAttribute(name = "Bonus")
                                protected BigDecimal bonus;
                                @XmlAttribute(name = "CarExpense")
                                protected BigDecimal carExpense;
                                @XmlAttribute(name = "CarryForwardLosses")
                                protected BigDecimal carryForwardLosses;
                                @XmlAttribute(name = "Depreciation")
                                protected BigDecimal depreciation;
                                @XmlAttribute(name = "Interest")
                                protected BigDecimal interest;
                                @XmlAttribute(name = "Lease")
                                protected BigDecimal lease;
                                @XmlAttribute(name = "NonCashBenefits")
                                protected BigDecimal nonCashBenefits;
                                @XmlAttribute(name = "NonRecurringExpenses")
                                protected BigDecimal nonRecurringExpenses;
                                @XmlAttribute(name = "Salary")
                                protected BigDecimal salary;
                                @XmlAttribute(name = "SuperannuationExcess")
                                protected BigDecimal superannuationExcess;
                                public List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.OtherAddback> getOtherAddback() {
                                    if (otherAddback == null) {
                                        otherAddback = new ArrayList<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrevious.Addback.OtherAddback>();
                                    }
                                    return this.otherAddback;
                                }
                                @XmlAccessorType(XmlAccessType.FIELD)
                                @XmlType(name = "")

@Data

@Entity
                                public static class OtherAddback {
                                    @XmlAttribute(name = "Amount")
                                    protected BigDecimal amount;
                                    @XmlAttribute(name = "Description")
                                    protected String description;
                                }
                            }
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "")

@Data

@Entity
                            public static class ForeignSourcedIncome {
                                @XmlAttribute(name = "AUDAmount")
                                protected BigDecimal audAmount;
                                @XmlAttribute(name = "PrimaryForeignCurrency")
                                protected CurrencyCodeList primaryForeignCurrency;
                            }
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "", propOrder = {
                            "addback",
                            "foreignSourcedIncome"
                        })

@Data

@Entity
                        public static class BusinessIncomePrior {
                            @XmlElement(name = "Addback")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback addback;
                            @XmlElement(name = "ForeignSourcedIncome")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.ForeignSourcedIncome foreignSourcedIncome;
                            @XmlAttribute(name = "EndDate")
                            protected XMLGregorianCalendar endDate;
                            @XmlAttribute(name = "HasForeignSourcedIncome")
                            protected YesNoList hasForeignSourcedIncome;
                            @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                            protected YesNoList incomeGreaterThanPreviousYear;
                            @XmlAttribute(name = "ProfitAfterTax")
                            protected BigDecimal profitAfterTax;
                            @XmlAttribute(name = "ProfitBeforeTax")
                            protected BigDecimal profitBeforeTax;
                            @XmlAttribute(name = "StartDate")
                            protected XMLGregorianCalendar startDate;
                            @XmlAttribute(name = "TaxOfficeAssessments")
                            protected YesNoList taxOfficeAssessments;
                            @XmlAttribute(name = "x_Accountant")
                            @XmlIDREF
                            protected Object xAccountant;
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "", propOrder = {
                                "otherAddback"
                            })

@Data

@Entity
                            public static class Addback {
                                @XmlElement(name = "OtherAddback")
                                protected List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.OtherAddback> otherAddback;
                                @XmlAttribute(name = "Allowances")
                                protected BigDecimal allowances;
                                @XmlAttribute(name = "AmortisationOfGoodwill")
                                protected BigDecimal amortisationOfGoodwill;
                                @XmlAttribute(name = "Bonus")
                                protected BigDecimal bonus;
                                @XmlAttribute(name = "CarExpense")
                                protected BigDecimal carExpense;
                                @XmlAttribute(name = "CarryForwardLosses")
                                protected BigDecimal carryForwardLosses;
                                @XmlAttribute(name = "Depreciation")
                                protected BigDecimal depreciation;
                                @XmlAttribute(name = "Interest")
                                protected BigDecimal interest;
                                @XmlAttribute(name = "Lease")
                                protected BigDecimal lease;
                                @XmlAttribute(name = "NonCashBenefits")
                                protected BigDecimal nonCashBenefits;
                                @XmlAttribute(name = "NonRecurringExpenses")
                                protected BigDecimal nonRecurringExpenses;
                                @XmlAttribute(name = "Salary")
                                protected BigDecimal salary;
                                @XmlAttribute(name = "SuperannuationExcess")
                                protected BigDecimal superannuationExcess;
                                public List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.OtherAddback> getOtherAddback() {
                                    if (otherAddback == null) {
                                        otherAddback = new ArrayList<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomePrior.Addback.OtherAddback>();
                                    }
                                    return this.otherAddback;
                                }
                                @XmlAccessorType(XmlAccessType.FIELD)
                                @XmlType(name = "")

@Data

@Entity
                                public static class OtherAddback {
                                    @XmlAttribute(name = "Amount")
                                    protected BigDecimal amount;
                                    @XmlAttribute(name = "Description")
                                    protected String description;
                                }
                            }
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "")

@Data

@Entity
                            public static class ForeignSourcedIncome {
                                @XmlAttribute(name = "AUDAmount")
                                protected BigDecimal audAmount;
                                @XmlAttribute(name = "PrimaryForeignCurrency")
                                protected CurrencyCodeList primaryForeignCurrency;
                            }
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "", propOrder = {
                            "addback",
                            "foreignSourcedIncome"
                        })

@Data

@Entity
                        public static class BusinessIncomeRecent {
                            @XmlElement(name = "Addback")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback addback;
                            @XmlElement(name = "ForeignSourcedIncome")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.ForeignSourcedIncome foreignSourcedIncome;
                            @XmlAttribute(name = "EndDate")
                            protected XMLGregorianCalendar endDate;
                            @XmlAttribute(name = "HasForeignSourcedIncome")
                            protected YesNoList hasForeignSourcedIncome;
                            @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                            protected YesNoList incomeGreaterThanPreviousYear;
                            @XmlAttribute(name = "ProfitAfterTax")
                            protected BigDecimal profitAfterTax;
                            @XmlAttribute(name = "ProfitBeforeTax")
                            protected BigDecimal profitBeforeTax;
                            @XmlAttribute(name = "ProofCode")
                            protected ProofCodeSelfEmployedList proofCode;
                            @XmlAttribute(name = "ProofSighted")
                            protected YesNoList proofSighted;
                            @XmlAttribute(name = "StartDate")
                            protected XMLGregorianCalendar startDate;
                            @XmlAttribute(name = "TaxOfficeAssessments")
                            protected YesNoList taxOfficeAssessments;
                            @XmlAttribute(name = "x_Accountant")
                            @XmlIDREF
                            protected Object xAccountant;
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "", propOrder = {
                                "otherAddback"
                            })

@Data

@Entity
                            public static class Addback {
                                @XmlElement(name = "OtherAddback")
                                protected List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.OtherAddback> otherAddback;
                                @XmlAttribute(name = "Allowances")
                                protected BigDecimal allowances;
                                @XmlAttribute(name = "AmortisationOfGoodwill")
                                protected BigDecimal amortisationOfGoodwill;
                                @XmlAttribute(name = "Bonus")
                                protected BigDecimal bonus;
                                @XmlAttribute(name = "CarExpense")
                                protected BigDecimal carExpense;
                                @XmlAttribute(name = "CarryForwardLosses")
                                protected BigDecimal carryForwardLosses;
                                @XmlAttribute(name = "Depreciation")
                                protected BigDecimal depreciation;
                                @XmlAttribute(name = "Interest")
                                protected BigDecimal interest;
                                @XmlAttribute(name = "Lease")
                                protected BigDecimal lease;
                                @XmlAttribute(name = "NonCashBenefits")
                                protected BigDecimal nonCashBenefits;
                                @XmlAttribute(name = "NonRecurringExpenses")
                                protected BigDecimal nonRecurringExpenses;
                                @XmlAttribute(name = "Salary")
                                protected BigDecimal salary;
                                @XmlAttribute(name = "SuperannuationExcess")
                                protected BigDecimal superannuationExcess;
                                public List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.OtherAddback> getOtherAddback() {
                                    if (otherAddback == null) {
                                        otherAddback = new ArrayList<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeRecent.Addback.OtherAddback>();
                                    }
                                    return this.otherAddback;
                                }
                                @XmlAccessorType(XmlAccessType.FIELD)
                                @XmlType(name = "")

@Data

@Entity
                                public static class OtherAddback {
                                    @XmlAttribute(name = "Amount")
                                    protected BigDecimal amount;
                                    @XmlAttribute(name = "Description")
                                    protected String description;
                                }
                            }
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "")

@Data

@Entity
                            public static class ForeignSourcedIncome {
                                @XmlAttribute(name = "AUDAmount")
                                protected BigDecimal audAmount;
                                @XmlAttribute(name = "PrimaryForeignCurrency")
                                protected CurrencyCodeList primaryForeignCurrency;
                            }
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "", propOrder = {
                            "addback",
                            "foreignSourcedIncome"
                        })

@Data

@Entity
                        public static class BusinessIncomeYearToDate {
                            @XmlElement(name = "Addback")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback addback;
                            @XmlElement(name = "ForeignSourcedIncome")
                            protected Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.ForeignSourcedIncome foreignSourcedIncome;
                            @XmlAttribute(name = "EndDate")
                            protected XMLGregorianCalendar endDate;
                            @XmlAttribute(name = "HasForeignSourcedIncome")
                            protected YesNoList hasForeignSourcedIncome;
                            @XmlAttribute(name = "ProfitAfterTax")
                            protected BigDecimal profitAfterTax;
                            @XmlAttribute(name = "ProfitBeforeTax")
                            protected BigDecimal profitBeforeTax;
                            @XmlAttribute(name = "StartDate")
                            protected XMLGregorianCalendar startDate;
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "", propOrder = {
                                "otherAddback"
                            })

@Data

@Entity
                            public static class Addback {
                                @XmlElement(name = "OtherAddback")
                                protected List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.OtherAddback> otherAddback;
                                @XmlAttribute(name = "Allowances")
                                protected BigDecimal allowances;
                                @XmlAttribute(name = "AmortisationOfGoodwill")
                                protected BigDecimal amortisationOfGoodwill;
                                @XmlAttribute(name = "Bonus")
                                protected BigDecimal bonus;
                                @XmlAttribute(name = "CarExpense")
                                protected BigDecimal carExpense;
                                @XmlAttribute(name = "CarryForwardLosses")
                                protected BigDecimal carryForwardLosses;
                                @XmlAttribute(name = "Depreciation")
                                protected BigDecimal depreciation;
                                @XmlAttribute(name = "Interest")
                                protected BigDecimal interest;
                                @XmlAttribute(name = "Lease")
                                protected BigDecimal lease;
                                @XmlAttribute(name = "NonCashBenefits")
                                protected BigDecimal nonCashBenefits;
                                @XmlAttribute(name = "NonRecurringExpenses")
                                protected BigDecimal nonRecurringExpenses;
                                @XmlAttribute(name = "Salary")
                                protected BigDecimal salary;
                                @XmlAttribute(name = "SuperannuationExcess")
                                protected BigDecimal superannuationExcess;
                                public List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.OtherAddback> getOtherAddback() {
                                    if (otherAddback == null) {
                                        otherAddback = new ArrayList<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.BusinessIncomeYearToDate.Addback.OtherAddback>();
                                    }
                                    return this.otherAddback;
                                }
                                @XmlAccessorType(XmlAccessType.FIELD)
                                @XmlType(name = "")

@Data

@Entity
                                public static class OtherAddback {
                                    @XmlAttribute(name = "Amount")
                                    protected BigDecimal amount;
                                    @XmlAttribute(name = "Description")
                                    protected String description;
                                }
                            }
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "")

@Data

@Entity
                            public static class ForeignSourcedIncome {
                                @XmlAttribute(name = "AUDAmount")
                                protected BigDecimal audAmount;
                                @XmlAttribute(name = "PrimaryForeignCurrency")
                                protected CurrencyCodeList primaryForeignCurrency;
                            }
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class DeclaredIncome {
                            @XmlAttribute(name = "IncomeAmount")
                            protected BigDecimal incomeAmount;
                            @XmlAttribute(name = "NetIncomeAmount")
                            protected BigDecimal netIncomeAmount;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "", propOrder = {
                            "companyFinancials"
                        })

@Data

@Entity
                        public static class FinancialAnalysis {
                            @XmlElement(name = "CompanyFinancials")
                            protected List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis.CompanyFinancials> companyFinancials;
                            @XmlAttribute(name = "AnnualPaymentOnCommitments")
                            protected BigDecimal annualPaymentOnCommitments;
                            @XmlAttribute(name = "CompleteFinancialAnalysis")
                            protected YesNoList completeFinancialAnalysis;
                            public List<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis.CompanyFinancials> getCompanyFinancials() {
                                if (companyFinancials == null) {
                                    companyFinancials = new ArrayList<Message.Content.Application.PersonApplicant.Employment.SelfEmployed.FinancialAnalysis.CompanyFinancials>();
                                }
                                return this.companyFinancials;
                            }
                            @XmlAccessorType(XmlAccessType.FIELD)
                            @XmlType(name = "")

@Data

@Entity
                            public static class CompanyFinancials {
                                @XmlAttribute(name = "x_CompanyFinancials")
                                @XmlIDREF
                                protected Object xCompanyFinancials;
                            }
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "accountNumber"
                })

@Data

@Entity
                public static class ExistingCustomer {
                    @XmlElement(name = "AccountNumber")
                    protected FinancialAccountType accountNumber;
                    @XmlAttribute(name = "CustomerNumber")
                    protected String customerNumber;
                    @XmlAttribute(name = "CustomerSince")
                    protected XMLGregorianCalendar customerSince;
                    @XmlAttribute(name = "CustomerSinceMonth")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    protected String customerSinceMonth;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class FinancialSituationCheck {
                    @XmlAttribute(name = "DataSource")
                    protected String dataSource;
                    @XmlAttribute(name = "ReferenceNumber")
                    protected String referenceNumber;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class IdentityCheck {
                    @XmlAttribute(name = "DataSource")
                    protected String dataSource;
                    @XmlAttribute(name = "Date")
                    protected XMLGregorianCalendar date;
                    @XmlAttribute(name = "PoliticallyExposedPerson")
                    protected YesNoList politicallyExposedPerson;
                    @XmlAttribute(name = "ReferenceNumber")
                    protected String referenceNumber;
                    @XmlAttribute(name = "Result")
                    protected String result;
                    @XmlAttribute(name = "SanctionedPerson")
                    protected YesNoList sanctionedPerson;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Insurance {
                    @XmlAttribute(name = "x_Insurance")
                    @XmlIDREF
                    protected Object xInsurance;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class MaritalStatusDetails {
                    @XmlAttribute(name = "MaritalStatusChangeDate")
                    protected XMLGregorianCalendar maritalStatusChangeDate;
                    @XmlAttribute(name = "x_Spouse")
                    @XmlIDREF
                    protected Object xSpouse;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class NextOfKin {
                    @XmlAttribute(name = "KinRelationship")
                    protected KinRelationshipList kinRelationship;
                    @XmlAttribute(name = "x_Person")
                    @XmlIDREF
                    protected Object xPerson;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class NominatedBorrower {
                    @XmlAttribute(name = "x_Nominee")
                    @XmlIDREF
                    protected Object xNominee;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "dealingNumber"
                })

@Data

@Entity
                public static class PowerOfAttorney {
                    @XmlElement(name = "DealingNumber")
                    protected List<DealingNumberType> dealingNumber;
                    @XmlAttribute(name = "Type")
                    protected PowerOfAttorneyTypeList type;
                    @XmlAttribute(name = "x_POAHolder")
                    @XmlIDREF
                    protected Object xpoaHolder;
                    public List<DealingNumberType> getDealingNumber() {
                        if (dealingNumber == null) {
                            dealingNumber = new ArrayList<DealingNumberType>();
                        }
                        return this.dealingNumber;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class PreviousName {
                    @XmlAttribute(name = "FirstName")
                    protected String firstName;
                    @XmlAttribute(name = "MiddleNames")
                    protected String middleNames;
                    @XmlAttribute(name = "NameChangeReason")
                    protected String nameChangeReason;
                    @XmlAttribute(name = "NameTitle")
                    protected NameTitleList nameTitle;
                    @XmlAttribute(name = "Surname")
                    protected String surname;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Privacy {
                    @XmlAttribute(name = "AllowApplicationStatusUpdates")
                    protected YesNoList allowApplicationStatusUpdates;
                    @XmlAttribute(name = "AllowCreditBureauIdentityCheck")
                    protected YesNoList allowCreditBureauIdentityCheck;
                    @XmlAttribute(name = "AllowCreditCheck")
                    protected YesNoList allowCreditCheck;
                    @XmlAttribute(name = "AllowDirectMarketing")
                    protected YesNoList allowDirectMarketing;
                    @XmlAttribute(name = "AllowElectronicIdentityCheck")
                    protected YesNoList allowElectronicIdentityCheck;
                    @XmlAttribute(name = "AllowTelemarketing")
                    protected YesNoList allowTelemarketing;
                    @XmlAttribute(name = "AllowThirdPartyDisclosure")
                    protected YesNoList allowThirdPartyDisclosure;
                    @XmlAttribute(name = "CreditAuthoritySigned")
                    protected YesNoList creditAuthoritySigned;
                    @XmlAttribute(name = "DateSigned")
                    protected XMLGregorianCalendar dateSigned;
                    @XmlAttribute(name = "PrivacyActConsentSigned")
                    protected YesNoList privacyActConsentSigned;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "medicareCard"
                })

@Data

@Entity
                public static class ProofOfIdentity {
                    @XmlElement(name = "MedicareCard")
                    protected Message.Content.Application.PersonApplicant.ProofOfIdentity.MedicareCard medicareCard;
                    @XmlAttribute(name = "AustralianStateOfIssue")
                    protected AuStateList australianStateOfIssue;
                    @XmlAttribute(name = "CertifiedCopy")
                    protected YesNoList certifiedCopy;
                    @XmlAttribute(name = "CountryOfIssue")
                    protected CountryCodeList countryOfIssue;
                    @XmlAttribute(name = "DateDocumentVerified")
                    protected XMLGregorianCalendar dateDocumentVerified;
                    @XmlAttribute(name = "DateOfIssue")
                    protected XMLGregorianCalendar dateOfIssue;
                    @XmlAttribute(name = "DOBVerified")
                    protected YesNoList dobVerified;
                    @XmlAttribute(name = "DocumentCategory")
                    protected DocumentCategoryList documentCategory;
                    @XmlAttribute(name = "DocumentNumber")
                    protected String documentNumber;
                    @XmlAttribute(name = "DocumentType")
                    protected DocumentTypeList documentType;
                    @XmlAttribute(name = "ExpiryDate")
                    protected XMLGregorianCalendar expiryDate;
                    @XmlAttribute(name = "IsPreviousNameIdentification")
                    protected YesNoList isPreviousNameIdentification;
                    @XmlAttribute(name = "IssuingOrganisation")
                    protected String issuingOrganisation;
                    @XmlAttribute(name = "MiddleNameOnDocument")
                    protected String middleNameOnDocument;
                    @XmlAttribute(name = "NameOnDocument")
                    protected String nameOnDocument;
                    @XmlAttribute(name = "NameVerified")
                    protected YesNoList nameVerified;
                    @XmlAttribute(name = "Original")
                    protected YesNoList original;
                    @XmlAttribute(name = "OtherDescription")
                    protected String otherDescription;
                    @XmlAttribute(name = "PhotographVerified")
                    protected YesNoList photographVerified;
                    @XmlAttribute(name = "PlaceOfIssue")
                    protected String placeOfIssue;
                    @XmlAttribute(name = "ResidentialAddressVerified")
                    protected YesNoList residentialAddressVerified;
                    @XmlAttribute(name = "SignatureVerified")
                    protected YesNoList signatureVerified;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_LocationDocumentVerified")
                    @XmlIDREF
                    protected Object xLocationDocumentVerified;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class MedicareCard {
                        @XmlAttribute(name = "Colour")
                        protected MedicareCardColourList colour;
                        @XmlAttribute(name = "IndividualReferenceNumber")
                        protected BigInteger individualReferenceNumber;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SourceOfFunds {
                    @XmlAttribute(name = "Detail")
                    protected String detail;
                    @XmlAttribute(name = "Percentage")
                    protected BigDecimal percentage;
                    @XmlAttribute(name = "Type")
                    protected SourceOfFundsTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SourceOfWealth {
                    @XmlAttribute(name = "Detail")
                    protected String detail;
                    @XmlAttribute(name = "Percentage")
                    protected BigDecimal percentage;
                    @XmlAttribute(name = "Type")
                    protected SourceOfFundsTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Will {
                    @XmlAttribute(name = "x_Executor")
                    @XmlIDREF
                    protected Object xExecutor;
                    @XmlAttribute(name = "x_WillHeldBy")
                    @XmlIDREF
                    protected Object xWillHeldBy;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "creditCard",
                "depositAccount",
                "liability",
                "loanDetails"
            })

@Data

@Entity
            public static class ProductPackage {
                @XmlElement(name = "CreditCard")
                protected List<Message.Content.Application.ProductPackage.CreditCard> creditCard;
                @XmlElement(name = "DepositAccount")
                protected List<Message.Content.Application.ProductPackage.DepositAccount> depositAccount;
                @XmlElement(name = "Liability")
                protected List<Message.Content.Application.ProductPackage.Liability> liability;
                @XmlElement(name = "LoanDetails")
                protected List<Message.Content.Application.ProductPackage.LoanDetails> loanDetails;
                @XmlAttribute(name = "ExistingPackage")
                protected YesNoList existingPackage;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.ProductPackage.CreditCard> getCreditCard() {
                    if (creditCard == null) {
                        creditCard = new ArrayList<Message.Content.Application.ProductPackage.CreditCard>();
                    }
                    return this.creditCard;
                }
                public List<Message.Content.Application.ProductPackage.DepositAccount> getDepositAccount() {
                    if (depositAccount == null) {
                        depositAccount = new ArrayList<Message.Content.Application.ProductPackage.DepositAccount>();
                    }
                    return this.depositAccount;
                }
                public List<Message.Content.Application.ProductPackage.Liability> getLiability() {
                    if (liability == null) {
                        liability = new ArrayList<Message.Content.Application.ProductPackage.Liability>();
                    }
                    return this.liability;
                }
                public List<Message.Content.Application.ProductPackage.LoanDetails> getLoanDetails() {
                    if (loanDetails == null) {
                        loanDetails = new ArrayList<Message.Content.Application.ProductPackage.LoanDetails>();
                    }
                    return this.loanDetails;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "features"
                })

@Data

@Entity
                public static class CreditCard {
                    @XmlElement(name = "Features")
                    protected Message.Content.Application.ProductPackage.CreditCard.Features features;
                    @XmlAttribute(name = "InclusionType")
                    protected AccountStatusList inclusionType;
                    @XmlAttribute(name = "Number")
                    protected String number;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_CreditCard")
                    @XmlIDREF
                    protected Object xCreditCard;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "supplementaryCardholder"
                    })

@Data

@Entity
                    public static class Features {
                        @XmlElement(name = "SupplementaryCardholder")
                        protected List<Message.Content.Application.ProductPackage.CreditCard.Features.SupplementaryCardholder> supplementaryCardholder;
                        @XmlAttribute(name = "CardUpgrade")
                        protected YesNoList cardUpgrade;
                        @XmlAttribute(name = "Limit")
                        protected BigDecimal limit;
                        @XmlAttribute(name = "LoyaltyProgramNumber")
                        protected String loyaltyProgramNumber;
                        @XmlAttribute(name = "ProductCategory")
                        protected String productCategory;
                        @XmlAttribute(name = "ProductName")
                        protected String productName;
                        @XmlAttribute(name = "x_PrimaryCardholder")
                        @XmlIDREF
                        protected Object xPrimaryCardholder;
                        public List<Message.Content.Application.ProductPackage.CreditCard.Features.SupplementaryCardholder> getSupplementaryCardholder() {
                            if (supplementaryCardholder == null) {
                                supplementaryCardholder = new ArrayList<Message.Content.Application.ProductPackage.CreditCard.Features.SupplementaryCardholder>();
                            }
                            return this.supplementaryCardholder;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class SupplementaryCardholder {
                            @XmlAttribute(name = "x_SupplementaryCardholder")
                            @XmlIDREF
                            protected Object xSupplementaryCardholder;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "overdraft"
                })

@Data

@Entity
                public static class DepositAccount {
                    @XmlElement(name = "Overdraft")
                    protected Message.Content.Application.ProductPackage.DepositAccount.Overdraft overdraft;
                    @XmlAttribute(name = "AlreadyExists")
                    protected YesNoList alreadyExists;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_DepositAccount")
                    @XmlIDREF
                    protected Object xDepositAccount;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Overdraft {
                        @XmlAttribute(name = "ConsiderLowerOverdraftLimitIfNotEligible")
                        protected YesNoList considerLowerOverdraftLimitIfNotEligible;
                        @XmlAttribute(name = "IsOverdraftUsedForTemporaryExpenses")
                        protected YesNoList isOverdraftUsedForTemporaryExpenses;
                        @XmlAttribute(name = "Limit")
                        protected BigDecimal limit;
                        @XmlAttribute(name = "OptionCode")
                        protected String optionCode;
                        @XmlAttribute(name = "OverdraftRequested")
                        protected YesNoList overdraftRequested;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Liability {
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_Liability")
                    @XmlIDREF
                    protected Object xLiability;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class LoanDetails {
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_LoanDetails")
                    @XmlIDREF
                    protected Object xLoanDetails;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "contact",
                "product"
            })

@Data

@Entity
            public static class ProductSet {
                @XmlElement(name = "Contact")
                protected Message.Content.Application.ProductSet.Contact contact;
                @XmlElement(name = "Product")
                protected List<Message.Content.Application.ProductSet.Product> product;
                @XmlAttribute(name = "LodgementReferenceNumber")
                protected String lodgementReferenceNumber;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "x_PrimaryApplicant")
                @XmlIDREF
                protected Object xPrimaryApplicant;
                public List<Message.Content.Application.ProductSet.Product> getProduct() {
                    if (product == null) {
                        product = new ArrayList<Message.Content.Application.ProductSet.Product>();
                    }
                    return this.product;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Contact {
                    @XmlAttribute(name = "x_MailingAddress")
                    @XmlIDREF
                    protected Object xMailingAddress;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Product {
                    @XmlAttribute(name = "x_FinancialProduct")
                    @XmlIDREF
                    protected Object xFinancialProduct;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "commercial",
                "constructionDetails",
                "contractDetails",
                "encumbrance",
                "estimatedValue",
                "fundsDisbursement",
                "futureRentalIncome",
                "heritageListing",
                "industrial",
                "insurance",
                "percentOwned",
                "propertyFeatures",
                "propertyType",
                "rentalIncome",
                "representation",
                "residential",
                "restrictionOnUseOfLand",
                "rural",
                "title",
                "visitContact",
                "zoning"
            })

@Data

@Entity
            public static class RealEstateAsset {
                @XmlElement(name = "Commercial")
                protected Message.Content.Application.RealEstateAsset.Commercial commercial;
                @XmlElement(name = "ConstructionDetails")
                protected Message.Content.Application.RealEstateAsset.ConstructionDetails constructionDetails;
                @XmlElement(name = "ContractDetails")
                protected Message.Content.Application.RealEstateAsset.ContractDetails contractDetails;
                @XmlElement(name = "Encumbrance")
                protected List<Message.Content.Application.RealEstateAsset.Encumbrance> encumbrance;
                @XmlElement(name = "EstimatedValue")
                protected Message.Content.Application.RealEstateAsset.EstimatedValue estimatedValue;
                @XmlElement(name = "FundsDisbursement")
                protected List<FundsDisbursementType> fundsDisbursement;
                @XmlElement(name = "FutureRentalIncome")
                protected Message.Content.Application.RealEstateAsset.FutureRentalIncome futureRentalIncome;
                @XmlElement(name = "HeritageListing")
                protected Message.Content.Application.RealEstateAsset.HeritageListing heritageListing;
                @XmlElement(name = "Industrial")
                protected Message.Content.Application.RealEstateAsset.Industrial industrial;
                @XmlElement(name = "Insurance")
                protected List<Message.Content.Application.RealEstateAsset.Insurance> insurance;
                @XmlElement(name = "PercentOwned")
                protected PercentOwnedType percentOwned;
                @XmlElement(name = "PropertyFeatures")
                protected List<Message.Content.Application.RealEstateAsset.PropertyFeatures> propertyFeatures;
                @XmlElement(name = "PropertyType")
                protected Message.Content.Application.RealEstateAsset.PropertyType propertyType;
                @XmlElement(name = "RentalIncome")
                protected Message.Content.Application.RealEstateAsset.RentalIncome rentalIncome;
                @XmlElement(name = "Representation")
                protected Message.Content.Application.RealEstateAsset.Representation representation;
                @XmlElement(name = "Residential")
                protected Message.Content.Application.RealEstateAsset.Residential residential;
                @XmlElement(name = "RestrictionOnUseOfLand")
                protected Message.Content.Application.RealEstateAsset.RestrictionOnUseOfLand restrictionOnUseOfLand;
                @XmlElement(name = "Rural")
                protected Message.Content.Application.RealEstateAsset.Rural rural;
                @XmlElement(name = "Title")
                protected List<Message.Content.Application.RealEstateAsset.Title> title;
                @XmlElement(name = "VisitContact")
                protected Message.Content.Application.RealEstateAsset.VisitContact visitContact;
                @XmlElement(name = "Zoning")
                protected Message.Content.Application.RealEstateAsset.Zoning zoning;
                @XmlAttribute(name = "ApprovalInPrinciple")
                protected YesNoList approvalInPrinciple;
                @XmlAttribute(name = "Construction")
                protected YesNoList construction;
                @XmlAttribute(name = "ContractOfSale")
                protected YesNoList contractOfSale;
                @XmlAttribute(name = "DataSource")
                protected DataSourceList dataSource;
                @XmlAttribute(name = "Encumbered")
                protected YesNoList encumbered;
                @XmlAttribute(name = "Holding")
                protected HoldingList holding;
                @XmlAttribute(name = "InnerCity")
                protected YesNoList innerCity;
                @XmlAttribute(name = "InvestmentPropertyLetter")
                protected YesNoList investmentPropertyLetter;
                @XmlAttribute(name = "LegalRepresentation")
                protected YesNoList legalRepresentation;
                @XmlAttribute(name = "MultipleDwellings")
                protected YesNoList multipleDwellings;
                @XmlAttribute(name = "NRASConsortium")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                protected String nrasConsortium;
                @XmlAttribute(name = "NRASProperty")
                protected YesNoList nrasProperty;
                @XmlAttribute(name = "Occupancy")
                protected OccupancyList occupancy;
                @XmlAttribute(name = "OnMarketTransaction")
                protected YesNoList onMarketTransaction;
                @XmlAttribute(name = "PrimaryLandUse")
                protected String primaryLandUse;
                @XmlAttribute(name = "PrimaryPurpose")
                protected PrimaryPurposeRealEstateAssetList primaryPurpose;
                @XmlAttribute(name = "PrimarySecurity")
                protected YesNoList primarySecurity;
                @XmlAttribute(name = "PrimaryUsage")
                protected PrimaryUsageList primaryUsage;
                @XmlAttribute(name = "PropertyID")
                protected String propertyID;
                @XmlAttribute(name = "PurchaseUnderAOCWrap")
                protected YesNoList purchaseUnderAOCWrap;
                @XmlAttribute(name = "Status")
                protected RealEstateAssetStatusList status;
                @XmlAttribute(name = "ToBeSold")
                protected YesNoList toBeSold;
                @XmlAttribute(name = "ToBeUsedAsSecurity")
                protected YesNoList toBeUsedAsSecurity;
                @XmlAttribute(name = "Transaction")
                protected AssetTransactionList transaction;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "ValuationProgram")
                protected ValuationProgramList valuationProgram;
                @XmlAttribute(name = "ValuationRequired")
                protected YesNoList valuationRequired;
                @XmlAttribute(name = "Verified")
                protected YesNoList verified;
                @XmlAttribute(name = "x_Address")
                @XmlIDREF
                protected Object xAddress;
                @XmlAttribute(name = "x_PropertyAgent")
                @XmlIDREF
                protected Object xPropertyAgent;
                public List<Message.Content.Application.RealEstateAsset.Encumbrance> getEncumbrance() {
                    if (encumbrance == null) {
                        encumbrance = new ArrayList<Message.Content.Application.RealEstateAsset.Encumbrance>();
                    }
                    return this.encumbrance;
                }
                public List<FundsDisbursementType> getFundsDisbursement() {
                    if (fundsDisbursement == null) {
                        fundsDisbursement = new ArrayList<FundsDisbursementType>();
                    }
                    return this.fundsDisbursement;
                }
                public List<Message.Content.Application.RealEstateAsset.Insurance> getInsurance() {
                    if (insurance == null) {
                        insurance = new ArrayList<Message.Content.Application.RealEstateAsset.Insurance>();
                    }
                    return this.insurance;
                }
                public List<Message.Content.Application.RealEstateAsset.PropertyFeatures> getPropertyFeatures() {
                    if (propertyFeatures == null) {
                        propertyFeatures = new ArrayList<Message.Content.Application.RealEstateAsset.PropertyFeatures>();
                    }
                    return this.propertyFeatures;
                }
                public List<Message.Content.Application.RealEstateAsset.Title> getTitle() {
                    if (title == null) {
                        title = new ArrayList<Message.Content.Application.RealEstateAsset.Title>();
                    }
                    return this.title;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Commercial {
                    @XmlAttribute(name = "Type")
                    protected CommercialTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "constructionStage",
                    "ownerBuilderExperience"
                })

@Data

@Entity
                public static class ConstructionDetails {
                    @XmlElement(name = "ConstructionStage")
                    protected List<Message.Content.Application.RealEstateAsset.ConstructionDetails.ConstructionStage> constructionStage;
                    @XmlElement(name = "OwnerBuilderExperience")
                    protected Message.Content.Application.RealEstateAsset.ConstructionDetails.OwnerBuilderExperience ownerBuilderExperience;
                    @XmlAttribute(name = "BuilderType")
                    protected BuilderTypeList builderType;
                    @XmlAttribute(name = "BuildPriceAmount")
                    protected BigDecimal buildPriceAmount;
                    @XmlAttribute(name = "ConstructionInsuranceHeld")
                    protected YesNoList constructionInsuranceHeld;
                    @XmlAttribute(name = "CopyBuildersLicenceHeld")
                    protected YesNoList copyBuildersLicenceHeld;
                    @XmlAttribute(name = "CopyHomeOwnersWarrantyCertificateHeld")
                    protected YesNoList copyHomeOwnersWarrantyCertificateHeld;
                    @XmlAttribute(name = "CouncilApprovalHeld")
                    protected YesNoList councilApprovalHeld;
                    @XmlAttribute(name = "DetailedCostingsHeld")
                    protected YesNoList detailedCostingsHeld;
                    @XmlAttribute(name = "EstimatedCompletionDate")
                    protected XMLGregorianCalendar estimatedCompletionDate;
                    @XmlAttribute(name = "FixedPriceContract")
                    protected YesNoList fixedPriceContract;
                    @XmlAttribute(name = "InitialAmount")
                    protected BigDecimal initialAmount;
                    @XmlAttribute(name = "LandValue")
                    protected BigDecimal landValue;
                    @XmlAttribute(name = "LandValueBasis")
                    protected LandValueEstimateBasisList landValueBasis;
                    @XmlAttribute(name = "SatisfactoryTOCValuationHeld")
                    protected YesNoList satisfactoryTOCValuationHeld;
                    @XmlAttribute(name = "SignedContract")
                    protected YesNoList signedContract;
                    @XmlAttribute(name = "TenPercentOfLendingAsCash")
                    protected YesNoList tenPercentOfLendingAsCash;
                    @XmlAttribute(name = "TotalAmount")
                    protected BigDecimal totalAmount;
                    @XmlAttribute(name = "Type")
                    protected ConstructionTypeList type;
                    @XmlAttribute(name = "x_Builder")
                    @XmlIDREF
                    protected Object xBuilder;
                    public List<Message.Content.Application.RealEstateAsset.ConstructionDetails.ConstructionStage> getConstructionStage() {
                        if (constructionStage == null) {
                            constructionStage = new ArrayList<Message.Content.Application.RealEstateAsset.ConstructionDetails.ConstructionStage>();
                        }
                        return this.constructionStage;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ConstructionStage {
                        @XmlAttribute(name = "StageAmount")
                        protected BigDecimal stageAmount;
                        @XmlAttribute(name = "StageDescription")
                        protected String stageDescription;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class OwnerBuilderExperience {
                        @XmlAttribute(name = "CompletedSimilarProjectInLast2Years")
                        protected YesNoList completedSimilarProjectInLast2Years;
                        @XmlAttribute(name = "MinimalExperience")
                        protected YesNoList minimalExperience;
                        @XmlAttribute(name = "OtherExperience")
                        protected String otherExperience;
                        @XmlAttribute(name = "WorksInBuildingIndustry")
                        protected YesNoList worksInBuildingIndustry;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class ContractDetails {
                    @XmlAttribute(name = "ArmsLengthTransaction")
                    protected YesNoList armsLengthTransaction;
                    @XmlAttribute(name = "ContractDate")
                    protected XMLGregorianCalendar contractDate;
                    @XmlAttribute(name = "ContractPriceAmount")
                    protected BigDecimal contractPriceAmount;
                    @XmlAttribute(name = "DepositAmount")
                    protected BigDecimal depositAmount;
                    @XmlAttribute(name = "DepositPaid")
                    protected BigDecimal depositPaid;
                    @XmlAttribute(name = "DepositPercentageRequested")
                    protected BigDecimal depositPercentageRequested;
                    @XmlAttribute(name = "EarlyReleaseOfDepositAuthorityRequested")
                    protected YesNoList earlyReleaseOfDepositAuthorityRequested;
                    @XmlAttribute(name = "EstimatedSettlementDate")
                    protected XMLGregorianCalendar estimatedSettlementDate;
                    @XmlAttribute(name = "FinanceApprovalDate")
                    protected XMLGregorianCalendar financeApprovalDate;
                    @XmlAttribute(name = "LicencedRealEstateAgentContract")
                    protected YesNoList licencedRealEstateAgentContract;
                    @XmlAttribute(name = "TransferOfLandAmount")
                    protected BigDecimal transferOfLandAmount;
                    @XmlAttribute(name = "x_Vendor")
                    @XmlIDREF
                    protected Object xVendor;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "inFavourOf"
                })

@Data

@Entity
                public static class Encumbrance {
                    @XmlElement(name = "InFavourOf")
                    protected List<Message.Content.Application.RealEstateAsset.Encumbrance.InFavourOf> inFavourOf;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "EncumbranceType")
                    protected RealEstateAssetEncumbranceList encumbranceType;
                    @XmlAttribute(name = "Priority")
                    protected SecurityPriorityList priority;
                    @XmlAttribute(name = "RegisteredNumber")
                    protected String registeredNumber;
                    @XmlAttribute(name = "RegistrationDate")
                    protected XMLGregorianCalendar registrationDate;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    public List<Message.Content.Application.RealEstateAsset.Encumbrance.InFavourOf> getInFavourOf() {
                        if (inFavourOf == null) {
                            inFavourOf = new ArrayList<Message.Content.Application.RealEstateAsset.Encumbrance.InFavourOf>();
                        }
                        return this.inFavourOf;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class InFavourOf {
                        @XmlAttribute(name = "Capacity")
                        protected EncumbranceInFavourOfCapacityList capacity;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "x_InFavourOf")
                        @XmlIDREF
                        protected Object xInFavourOf;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class EstimatedValue {
                    @XmlAttribute(name = "EstimateBasis")
                    protected EstimateBasisRealEstateAssetList estimateBasis;
                    @XmlAttribute(name = "EstimatedCGTLiability")
                    protected BigDecimal estimatedCGTLiability;
                    @XmlAttribute(name = "EstimateMethodology")
                    protected EstimateMethodologyList estimateMethodology;
                    @XmlAttribute(name = "Value")
                    protected BigDecimal value;
                    @XmlAttribute(name = "ValuedDate")
                    protected XMLGregorianCalendar valuedDate;
                    @XmlAttribute(name = "x_Valuer")
                    @XmlIDREF
                    protected Object xValuer;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "propertyPart"
                })

@Data

@Entity
                public static class FutureRentalIncome {
                    @XmlElement(name = "PropertyPart")
                    protected List<Message.Content.Application.RealEstateAsset.FutureRentalIncome.PropertyPart> propertyPart;
                    @XmlAttribute(name = "GrossRentalAmount")
                    protected BigDecimal grossRentalAmount;
                    @XmlAttribute(name = "GrossRentalFrequency")
                    protected FrequencyFullList grossRentalFrequency;
                    @XmlAttribute(name = "NetRentalAmount")
                    protected BigDecimal netRentalAmount;
                    @XmlAttribute(name = "NetRentalFrequency")
                    protected FrequencyFullList netRentalFrequency;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    public List<Message.Content.Application.RealEstateAsset.FutureRentalIncome.PropertyPart> getPropertyPart() {
                        if (propertyPart == null) {
                            propertyPart = new ArrayList<Message.Content.Application.RealEstateAsset.FutureRentalIncome.PropertyPart>();
                        }
                        return this.propertyPart;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class PropertyPart {
                        @XmlAttribute(name = "Type")
                        protected PropertyPartTypeList type;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class HeritageListing {
                    @XmlAttribute(name = "HeritageListed")
                    protected YesNoList heritageListed;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Industrial {
                    @XmlAttribute(name = "Type")
                    protected IndustrialTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Insurance {
                    @XmlAttribute(name = "x_Insurance")
                    @XmlIDREF
                    protected Object xInsurance;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class PropertyFeatures {
                    @XmlAttribute(name = "AllPropertyFeatures")
                    protected String allPropertyFeatures;
                    @XmlAttribute(name = "FloorArea")
                    protected BigDecimal floorArea;
                    @XmlAttribute(name = "LandArea")
                    protected BigDecimal landArea;
                    @XmlAttribute(name = "LandAreaUnits")
                    protected LandAreaUnitsList landAreaUnits;
                    @XmlAttribute(name = "NumberOfBathrooms")
                    protected BigInteger numberOfBathrooms;
                    @XmlAttribute(name = "NumberOfBedrooms")
                    protected BigInteger numberOfBedrooms;
                    @XmlAttribute(name = "NumberOfCarSpaces")
                    protected BigInteger numberOfCarSpaces;
                    @XmlAttribute(name = "PoolType")
                    protected PoolTypeList poolType;
                    @XmlAttribute(name = "PropertyDescription")
                    protected String propertyDescription;
                    @XmlAttribute(name = "PropertyID")
                    protected String propertyID;
                    @XmlAttribute(name = "PropertyImage")
                    protected String propertyImage;
                    @XmlAttribute(name = "RoofMaterial")
                    protected String roofMaterial;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "WallMaterial")
                    protected String wallMaterial;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class PropertyType {
                    @XmlAttribute(name = "CategoryTypeName")
                    protected String categoryTypeName;
                    @XmlAttribute(name = "PropertyTypeCode")
                    protected String propertyTypeCode;
                    @XmlAttribute(name = "PropertyTypeName")
                    protected String propertyTypeName;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "propertyPart"
                })

@Data

@Entity
                public static class RentalIncome {
                    @XmlElement(name = "PropertyPart")
                    protected List<Message.Content.Application.RealEstateAsset.RentalIncome.PropertyPart> propertyPart;
                    @XmlAttribute(name = "Basis")
                    protected RentalIncomeBasisList basis;
                    @XmlAttribute(name = "ConfidencePercentage")
                    protected BigDecimal confidencePercentage;
                    @XmlAttribute(name = "EvidenceOfTenancy")
                    protected YesNoList evidenceOfTenancy;
                    @XmlAttribute(name = "Frequency")
                    protected FrequencyFullList frequency;
                    @XmlAttribute(name = "IncomeStatusOnOrBeforeSettlement")
                    protected IncomeStatusOnOrBeforeSettlementList incomeStatusOnOrBeforeSettlement;
                    @XmlAttribute(name = "NetRentalAmount")
                    protected BigDecimal netRentalAmount;
                    @XmlAttribute(name = "NetRentalAmountFrequency")
                    protected FrequencyShortList netRentalAmountFrequency;
                    @XmlAttribute(name = "RentalAmount")
                    protected BigDecimal rentalAmount;
                    @XmlAttribute(name = "ValuedDate")
                    protected XMLGregorianCalendar valuedDate;
                    public List<Message.Content.Application.RealEstateAsset.RentalIncome.PropertyPart> getPropertyPart() {
                        if (propertyPart == null) {
                            propertyPart = new ArrayList<Message.Content.Application.RealEstateAsset.RentalIncome.PropertyPart>();
                        }
                        return this.propertyPart;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class PropertyPart {
                        @XmlAttribute(name = "Type")
                        protected PropertyPartTypeList type;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Representation {
                    @XmlAttribute(name = "x_Conveyancer")
                    @XmlIDREF
                    protected Object xConveyancer;
                    @XmlAttribute(name = "x_VendorConveyancer")
                    @XmlIDREF
                    protected Object xVendorConveyancer;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Residential {
                    @XmlAttribute(name = "Type")
                    protected ResidentialTypeList type;
                    @XmlAttribute(name = "WillOwn25PercentOfComplex")
                    protected YesNoList willOwn25PercentOfComplex;
                    @XmlAttribute(name = "WillOwn3UnitsInComplex")
                    protected YesNoList willOwn3UnitsInComplex;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class RestrictionOnUseOfLand {
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "RegistrationNumber")
                    protected String registrationNumber;
                    @XmlAttribute(name = "RestrictionExists")
                    protected YesNoList restrictionExists;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Rural {
                    @XmlAttribute(name = "NumberOfBuildings")
                    protected BigInteger numberOfBuildings;
                    @XmlAttribute(name = "Type")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    protected String type;
                    @XmlAttribute(name = "Usage")
                    protected RuralUsageList usage;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "registeredProprietor"
                })

@Data

@Entity
                public static class Title {
                    @XmlElement(name = "RegisteredProprietor")
                    protected List<Message.Content.Application.RealEstateAsset.Title.RegisteredProprietor> registeredProprietor;
                    @XmlAttribute(name = "AutoConsol")
                    protected String autoConsol;
                    @XmlAttribute(name = "Block")
                    protected String block;
                    @XmlAttribute(name = "County")
                    protected String county;
                    @XmlAttribute(name = "District")
                    protected String district;
                    @XmlAttribute(name = "DuplicateTitleIssued")
                    protected YesNoList duplicateTitleIssued;
                    @XmlAttribute(name = "Extent")
                    protected String extent;
                    @XmlAttribute(name = "Folio")
                    protected String folio;
                    @XmlAttribute(name = "Location")
                    protected String location;
                    @XmlAttribute(name = "Lot")
                    protected String lot;
                    @XmlAttribute(name = "LotPlan")
                    protected String lotPlan;
                    @XmlAttribute(name = "OtherDetails")
                    protected String otherDetails;
                    @XmlAttribute(name = "Parcel")
                    protected String parcel;
                    @XmlAttribute(name = "Parish")
                    protected String parish;
                    @XmlAttribute(name = "Plan")
                    protected String plan;
                    @XmlAttribute(name = "PlanType")
                    protected PlanTypeList planType;
                    @XmlAttribute(name = "RealPropertyDescriptor")
                    protected String realPropertyDescriptor;
                    @XmlAttribute(name = "Register")
                    protected String register;
                    @XmlAttribute(name = "Section")
                    protected String section;
                    @XmlAttribute(name = "TenureType")
                    protected TenureTypeList tenureType;
                    @XmlAttribute(name = "TitleReference")
                    protected String titleReference;
                    @XmlAttribute(name = "TitleSystem")
                    protected TitleSystemList titleSystem;
                    @XmlAttribute(name = "Unit")
                    protected String unit;
                    @XmlAttribute(name = "UnregisteredLand")
                    protected YesNoList unregisteredLand;
                    @XmlAttribute(name = "UnregisteredPlan")
                    protected YesNoList unregisteredPlan;
                    @XmlAttribute(name = "Volume")
                    protected String volume;
                    public List<Message.Content.Application.RealEstateAsset.Title.RegisteredProprietor> getRegisteredProprietor() {
                        if (registeredProprietor == null) {
                            registeredProprietor = new ArrayList<Message.Content.Application.RealEstateAsset.Title.RegisteredProprietor>();
                        }
                        return this.registeredProprietor;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class RegisteredProprietor {
                        @XmlAttribute(name = "ChangeNameFormRequired")
                        protected YesNoList changeNameFormRequired;
                        @XmlAttribute(name = "Name")
                        protected String name;
                        @XmlAttribute(name = "x_RegisteredProprietor")
                        @XmlIDREF
                        protected Object xRegisteredProprietor;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class VisitContact {
                    @XmlAttribute(name = "BoatAccessOnly")
                    protected YesNoList boatAccessOnly;
                    @XmlAttribute(name = "Details")
                    protected String details;
                    @XmlAttribute(name = "FourWDAccessOnly")
                    protected YesNoList fourWDAccessOnly;
                    @XmlAttribute(name = "Type")
                    protected VisitContactTypeList type;
                    @XmlAttribute(name = "x_ContactParty")
                    @XmlIDREF
                    protected Object xContactParty;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Zoning {
                    @XmlAttribute(name = "Type")
                    protected String type;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "contact",
                "partner"
            })

@Data

@Entity
            public static class RelatedCompany {
                @XmlElement(name = "Contact")
                protected Message.Content.Application.RelatedCompany.Contact contact;
                @XmlElement(name = "Partner")
                protected List<Message.Content.Application.RelatedCompany.Partner> partner;
                @XmlAttribute(name = "ABN")
                protected String abn;
                @XmlAttribute(name = "ABNVerified")
                protected YesNoList abnVerified;
                @XmlAttribute(name = "ACN")
                protected String acn;
                @XmlAttribute(name = "BusinessName")
                protected String businessName;
                @XmlAttribute(name = "BusinessNameSameAsCompanyName")
                protected YesNoList businessNameSameAsCompanyName;
                @XmlAttribute(name = "BusinessStructure")
                protected BusinessStructureFullList businessStructure;
                @XmlAttribute(name = "CompanyName")
                protected String companyName;
                @XmlAttribute(name = "DateRegistered")
                protected XMLGregorianCalendar dateRegistered;
                @XmlAttribute(name = "GSTRegisteredDate")
                protected XMLGregorianCalendar gstRegisteredDate;
                @XmlAttribute(name = "NumberOfPartners")
                protected BigInteger numberOfPartners;
                @XmlAttribute(name = "RegisteredForGST")
                protected YesNoList registeredForGST;
                @XmlAttribute(name = "RegisteredInCountry")
                protected CountryCodeList registeredInCountry;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.RelatedCompany.Partner> getPartner() {
                    if (partner == null) {
                        partner = new ArrayList<Message.Content.Application.RelatedCompany.Partner>();
                    }
                    return this.partner;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contactPerson",
                    "officeFax",
                    "officeMobile",
                    "officePhone"
                })

@Data

@Entity
                public static class Contact {
                    @XmlElement(name = "ContactPerson")
                    protected Message.Content.Application.RelatedCompany.Contact.ContactPerson contactPerson;
                    @XmlElement(name = "OfficeFax")
                    protected PhoneType officeFax;
                    @XmlElement(name = "OfficeMobile")
                    protected PhoneType officeMobile;
                    @XmlElement(name = "OfficePhone")
                    protected PhoneType officePhone;
                    @XmlAttribute(name = "Email")
                    protected String email;
                    @XmlAttribute(name = "WebAddress")
                    protected String webAddress;
                    @XmlAttribute(name = "x_Address")
                    @XmlIDREF
                    protected Object xAddress;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ContactPerson {
                        @XmlAttribute(name = "FirstName")
                        protected String firstName;
                        @XmlAttribute(name = "NameTitle")
                        protected NameTitleList nameTitle;
                        @XmlAttribute(name = "Role")
                        protected String role;
                        @XmlAttribute(name = "Surname")
                        protected String surname;
                        @XmlAttribute(name = "x_ContactPerson")
                        @XmlIDREF
                        protected Object xContactPerson;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Partner {
                    @XmlAttribute(name = "PartnerType")
                    protected PartnerTypeList partnerType;
                    @XmlAttribute(name = "PercentOwned")
                    protected BigDecimal percentOwned;
                    @XmlAttribute(name = "x_Partner")
                    @XmlIDREF
                    protected Object xPartner;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "contact",
                "foreignTaxAssociation",
                "personName",
                "taxDeclarationDetails"
            })

@Data

@Entity
            public static class RelatedPerson {
                @XmlElement(name = "Contact")
                protected Message.Content.Application.RelatedPerson.Contact contact;
                @XmlElement(name = "ForeignTaxAssociation")
                protected ForeignTaxAssociationType foreignTaxAssociation;
                @XmlElement(name = "PersonName")
                protected PersonNameType personName;
                @XmlElement(name = "TaxDeclarationDetails")
                protected TaxDeclarationDetailsType taxDeclarationDetails;
                @XmlAttribute(name = "DateOfBirth")
                protected XMLGregorianCalendar dateOfBirth;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "homePhone",
                    "mobile",
                    "workPhone"
                })

@Data

@Entity
                public static class Contact {
                    @XmlElement(name = "HomePhone")
                    protected PhoneType homePhone;
                    @XmlElement(name = "Mobile")
                    protected PhoneType mobile;
                    @XmlElement(name = "WorkPhone")
                    protected PhoneType workPhone;
                    @XmlAttribute(name = "Email")
                    protected String email;
                    @XmlAttribute(name = "EmailType")
                    protected ContactEmailTypeList emailType;
                    @XmlAttribute(name = "PreferredContact")
                    protected PreferredContactPersonList preferredContact;
                    @XmlAttribute(name = "x_Address")
                    @XmlIDREF
                    protected Object xAddress;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "aggregator",
                "commission",
                "company",
                "introducer",
                "loanWriter"
            })

@Data

@Entity
            public static class SalesChannel {
                @XmlElement(name = "Aggregator")
                protected Message.Content.Application.SalesChannel.Aggregator aggregator;
                @XmlElement(name = "Commission")
                protected Message.Content.Application.SalesChannel.Commission commission;
                @XmlElement(name = "Company")
                protected Message.Content.Application.SalesChannel.Company company;
                @XmlElement(name = "Introducer")
                protected Message.Content.Application.SalesChannel.Introducer introducer;
                @XmlElement(name = "LoanWriter")
                protected Message.Content.Application.SalesChannel.LoanWriter loanWriter;
                @XmlAttribute(name = "Type")
                protected SalesChannelTypeList type;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contact"
                })

@Data

@Entity
                public static class Aggregator {
                    @XmlElement(name = "Contact")
                    protected Message.Content.Application.SalesChannel.Aggregator.Contact contact;
                    @XmlAttribute(name = "ABN")
                    protected String abn;
                    @XmlAttribute(name = "AccreditationNumber")
                    protected String accreditationNumber;
                    @XmlAttribute(name = "CompanyName")
                    protected String companyName;
                    @XmlAttribute(name = "LicenceNumber")
                    protected String licenceNumber;
                    @XmlAttribute(name = "LicenceType")
                    protected LicenceTypeList licenceType;
                    @XmlAttribute(name = "OtherIdentifier")
                    protected String otherIdentifier;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "officeFax",
                        "officePhone"
                    })

@Data

@Entity
                    public static class Contact {
                        @XmlElement(name = "OfficeFax")
                        protected PhoneType officeFax;
                        @XmlElement(name = "OfficePhone")
                        protected PhoneType officePhone;
                        @XmlAttribute(name = "Email")
                        protected String email;
                        @XmlAttribute(name = "WebAddress")
                        protected String webAddress;
                        @XmlAttribute(name = "x_Address")
                        @XmlIDREF
                        protected Object xAddress;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Commission {
                    @XmlAttribute(name = "CommissionAmount")
                    protected BigDecimal commissionAmount;
                    @XmlAttribute(name = "CommissionPaid")
                    protected YesNoList commissionPaid;
                    @XmlAttribute(name = "CommissionStructure")
                    protected CommissionStructureList commissionStructure;
                    @XmlAttribute(name = "OtherCommissionStructureDescription")
                    protected String otherCommissionStructureDescription;
                    @XmlAttribute(name = "PromotionCode")
                    protected String promotionCode;
                    @XmlAttribute(name = "ThirdPartyReferee")
                    protected YesNoList thirdPartyReferee;
                    @XmlAttribute(name = "Trail")
                    protected BigDecimal trail;
                    @XmlAttribute(name = "UpfrontPayment")
                    protected BigDecimal upfrontPayment;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contact"
                })

@Data

@Entity
                public static class Company {
                    @XmlElement(name = "Contact")
                    protected Message.Content.Application.SalesChannel.Company.Contact contact;
                    @XmlAttribute(name = "ABN")
                    protected String abn;
                    @XmlAttribute(name = "AccreditationNumber")
                    protected String accreditationNumber;
                    @XmlAttribute(name = "BSB")
                    protected String bsb;
                    @XmlAttribute(name = "BusinessName")
                    protected String businessName;
                    @XmlAttribute(name = "BusinessNameSameAsCompanyName")
                    protected YesNoList businessNameSameAsCompanyName;
                    @XmlAttribute(name = "CompanyName")
                    protected String companyName;
                    @XmlAttribute(name = "LicenceNumber")
                    protected String licenceNumber;
                    @XmlAttribute(name = "LicenceType")
                    protected LicenceTypeList licenceType;
                    @XmlAttribute(name = "OtherIdentifier")
                    protected String otherIdentifier;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "officeFax",
                        "officePhone"
                    })

@Data

@Entity
                    public static class Contact {
                        @XmlElement(name = "OfficeFax")
                        protected PhoneType officeFax;
                        @XmlElement(name = "OfficePhone")
                        protected PhoneType officePhone;
                        @XmlAttribute(name = "Email")
                        protected String email;
                        @XmlAttribute(name = "WebAddress")
                        protected String webAddress;
                        @XmlAttribute(name = "x_Address")
                        @XmlIDREF
                        protected Object xAddress;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Introducer {
                    @XmlAttribute(name = "CompanyName")
                    protected String companyName;
                    @XmlAttribute(name = "ContactName")
                    protected String contactName;
                    @XmlAttribute(name = "IntroducerID")
                    protected String introducerID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contact"
                })

@Data

@Entity
                public static class LoanWriter {
                    @XmlElement(name = "Contact")
                    protected Message.Content.Application.SalesChannel.LoanWriter.Contact contact;
                    @XmlAttribute(name = "AccreditationNumber")
                    protected String accreditationNumber;
                    @XmlAttribute(name = "Department")
                    protected String department;
                    @XmlAttribute(name = "FirstName")
                    protected String firstName;
                    @XmlAttribute(name = "LicenceNumber")
                    protected String licenceNumber;
                    @XmlAttribute(name = "LicenceType")
                    protected LicenceTypeList licenceType;
                    @XmlAttribute(name = "ManagerName")
                    protected String managerName;
                    @XmlAttribute(name = "NameTitle")
                    protected NameTitleList nameTitle;
                    @XmlAttribute(name = "OtherIdentifier")
                    protected String otherIdentifier;
                    @XmlAttribute(name = "PersonRole")
                    protected String personRole;
                    @XmlAttribute(name = "Surname")
                    protected String surname;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "fax",
                        "mobile",
                        "officePhone"
                    })

@Data

@Entity
                    public static class Contact {
                        @XmlElement(name = "Fax")
                        protected PhoneType fax;
                        @XmlElement(name = "Mobile")
                        protected PhoneType mobile;
                        @XmlElement(name = "OfficePhone")
                        protected PhoneType officePhone;
                        @XmlAttribute(name = "Email")
                        protected String email;
                        @XmlAttribute(name = "WebAddress")
                        protected String webAddress;
                        @XmlAttribute(name = "x_Address")
                        @XmlIDREF
                        protected Object xAddress;
                    }
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "security"
            })

@Data

@Entity
            public static class Settlement {
                @XmlElement(name = "Security")
                protected List<Message.Content.Application.Settlement.Security> security;
                @XmlAttribute(name = "PayoutFigure")
                protected BigDecimal payoutFigure;
                @XmlAttribute(name = "SettlementBookingDateTime")
                protected XMLGregorianCalendar settlementBookingDateTime;
                @XmlAttribute(name = "SettlementReferenceNumber")
                protected String settlementReferenceNumber;
                @XmlAttribute(name = "x_SettlementBookingAddress")
                @XmlIDREF
                protected Object xSettlementBookingAddress;
                public List<Message.Content.Application.Settlement.Security> getSecurity() {
                    if (security == null) {
                        security = new ArrayList<Message.Content.Application.Settlement.Security>();
                    }
                    return this.security;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Security {
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "splitLoanComponent"
            })

@Data

@Entity
            public static class SplitLoan {
                @XmlElement(name = "SplitLoanComponent")
                protected List<Message.Content.Application.SplitLoan.SplitLoanComponent> splitLoanComponent;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                public List<Message.Content.Application.SplitLoan.SplitLoanComponent> getSplitLoanComponent() {
                    if (splitLoanComponent == null) {
                        splitLoanComponent = new ArrayList<Message.Content.Application.SplitLoan.SplitLoanComponent>();
                    }
                    return this.splitLoanComponent;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SplitLoanComponent {
                    @XmlAttribute(name = "x_Liability")
                    @XmlIDREF
                    protected Object xLiability;
                    @XmlAttribute(name = "x_LoanDetails")
                    @XmlIDREF
                    protected Object xLoanDetails;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "documentationInstructions",
                "fee",
                "loanToValuationRatio",
                "serviceabilityResults",
                "signature"
            })

@Data

@Entity
            public static class Summary {
                @XmlElement(name = "DocumentationInstructions")
                protected DocumentationInstructionsType documentationInstructions;
                @XmlElement(name = "Fee")
                protected List<Message.Content.Application.Summary.Fee> fee;
                @XmlElement(name = "LoanToValuationRatio")
                protected Message.Content.Application.Summary.LoanToValuationRatio loanToValuationRatio;
                @XmlElement(name = "ServiceabilityResults")
                protected List<Message.Content.Application.Summary.ServiceabilityResults> serviceabilityResults;
                @XmlElement(name = "Signature")
                protected List<SignatureType> signature;
                @XmlAttribute(name = "AllPartiesAgreeToElectronicSignature")
                protected YesNoList allPartiesAgreeToElectronicSignature;
                @XmlAttribute(name = "FeesDisclosureDate")
                protected XMLGregorianCalendar feesDisclosureDate;
                public List<Message.Content.Application.Summary.Fee> getFee() {
                    if (fee == null) {
                        fee = new ArrayList<Message.Content.Application.Summary.Fee>();
                    }
                    return this.fee;
                }
                public List<Message.Content.Application.Summary.ServiceabilityResults> getServiceabilityResults() {
                    if (serviceabilityResults == null) {
                        serviceabilityResults = new ArrayList<Message.Content.Application.Summary.ServiceabilityResults>();
                    }
                    return this.serviceabilityResults;
                }
                public List<SignatureType> getSignature() {
                    if (signature == null) {
                        signature = new ArrayList<SignatureType>();
                    }
                    return this.signature;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "accountNumber",
                    "applicableDuration",
                    "creditCard",
                    "payableToAccount",
                    "percentage"
                })

@Data

@Entity
                public static class Fee {
                    @XmlElement(name = "AccountNumber")
                    protected FinancialAccountType accountNumber;
                    @XmlElement(name = "ApplicableDuration")
                    protected DurationType applicableDuration;
                    @XmlElement(name = "CreditCard")
                    protected Message.Content.Application.Summary.Fee.CreditCard creditCard;
                    @XmlElement(name = "PayableToAccount")
                    protected FinancialAccountType payableToAccount;
                    @XmlElement(name = "Percentage")
                    protected Message.Content.Application.Summary.Fee.Percentage percentage;
                    @XmlAttribute(name = "Amount")
                    protected BigDecimal amount;
                    @XmlAttribute(name = "CapitaliseFee")
                    protected YesNoList capitaliseFee;
                    @XmlAttribute(name = "Category")
                    protected FeeCategoryList category;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "FeeCode")
                    protected String feeCode;
                    @XmlAttribute(name = "Frequency")
                    protected FrequencyFullList frequency;
                    @XmlAttribute(name = "GSTAmount")
                    protected BigDecimal gstAmount;
                    @XmlAttribute(name = "IsDisclosed")
                    protected YesNoList isDisclosed;
                    @XmlAttribute(name = "IsEstimated")
                    protected YesNoList isEstimated;
                    @XmlAttribute(name = "ITCAmount")
                    protected BigDecimal itcAmount;
                    @XmlAttribute(name = "NumberOfRepeats")
                    protected BigInteger numberOfRepeats;
                    @XmlAttribute(name = "Paid")
                    protected YesNoList paid;
                    @XmlAttribute(name = "PayableTo")
                    protected String payableTo;
                    @XmlAttribute(name = "PayFeesFrom")
                    protected PayFeesFromList payFeesFrom;
                    @XmlAttribute(name = "PaymentTiming")
                    protected FeePaymentTimingList paymentTiming;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAttribute(name = "Type")
                    protected FeeTypeList type;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    @XmlAttribute(name = "x_Account")
                    @XmlIDREF
                    protected Object xAccount;
                    @XmlAttribute(name = "x_FinancialProduct")
                    @XmlIDREF
                    protected Object xFinancialProduct;
                    @XmlAttribute(name = "x_ProductSet")
                    @XmlIDREF
                    protected Object xProductSet;
                    @XmlAttribute(name = "x_Security")
                    @XmlIDREF
                    protected Object xSecurity;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class CreditCard {
                        @XmlAttribute(name = "CardHolderName")
                        protected String cardHolderName;
                        @XmlAttribute(name = "ExpiryMonth")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String expiryMonth;
                        @XmlAttribute(name = "ExpiryYear")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        protected String expiryYear;
                        @XmlAttribute(name = "Number")
                        protected String number;
                        @XmlAttribute(name = "Type")
                        protected CreditCardTypeList type;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Percentage {
                        @XmlAttribute(name = "CalculationBasis")
                        protected CalculationBasisList calculationBasis;
                        @XmlAttribute(name = "Rate")
                        protected BigDecimal rate;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contributingValuation"
                })

@Data

@Entity
                public static class LoanToValuationRatio {
                    @XmlElement(name = "ContributingValuation")
                    protected List<Message.Content.Application.Summary.LoanToValuationRatio.ContributingValuation> contributingValuation;
                    @XmlAttribute(name = "ApplicationLVR")
                    protected BigDecimal applicationLVR;
                    @XmlAttribute(name = "PeakDebtLVR")
                    protected BigDecimal peakDebtLVR;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    public List<Message.Content.Application.Summary.LoanToValuationRatio.ContributingValuation> getContributingValuation() {
                        if (contributingValuation == null) {
                            contributingValuation = new ArrayList<Message.Content.Application.Summary.LoanToValuationRatio.ContributingValuation>();
                        }
                        return this.contributingValuation;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ContributingValuation {
                        @XmlAttribute(name = "x_Valuation")
                        @XmlIDREF
                        protected Object xValuation;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "applicant",
                    "netDisposableIncome",
                    "totalGrossIncome",
                    "totalNetIncome",
                    "totalSystemCalculatedExpenses",
                    "totalSystemCalculatedLivingExpenses",
                    "totalUserStatedLivingExpenses"
                })

@Data

@Entity
                public static class ServiceabilityResults {
                    @XmlElement(name = "Applicant")
                    protected List<Message.Content.Application.Summary.ServiceabilityResults.Applicant> applicant;
                    @XmlElement(name = "NetDisposableIncome")
                    protected Message.Content.Application.Summary.ServiceabilityResults.NetDisposableIncome netDisposableIncome;
                    @XmlElement(name = "TotalGrossIncome")
                    protected Message.Content.Application.Summary.ServiceabilityResults.TotalGrossIncome totalGrossIncome;
                    @XmlElement(name = "TotalNetIncome")
                    protected Message.Content.Application.Summary.ServiceabilityResults.TotalNetIncome totalNetIncome;
                    @XmlElement(name = "TotalSystemCalculatedExpenses")
                    protected Message.Content.Application.Summary.ServiceabilityResults.TotalSystemCalculatedExpenses totalSystemCalculatedExpenses;
                    @XmlElement(name = "TotalSystemCalculatedLivingExpenses")
                    protected Message.Content.Application.Summary.ServiceabilityResults.TotalSystemCalculatedLivingExpenses totalSystemCalculatedLivingExpenses;
                    @XmlElement(name = "TotalUserStatedLivingExpenses")
                    protected Message.Content.Application.Summary.ServiceabilityResults.TotalUserStatedLivingExpenses totalUserStatedLivingExpenses;
                    @XmlAttribute(name = "DSR")
                    protected BigDecimal dsr;
                    @XmlAttribute(name = "DTI")
                    protected BigDecimal dti;
                    @XmlAttribute(name = "GroupIdentifier")
                    protected String groupIdentifier;
                    @XmlAttribute(name = "GroupName")
                    protected String groupName;
                    @XmlAttribute(name = "LTI")
                    protected BigDecimal lti;
                    @XmlAttribute(name = "MaximumLoanAmount")
                    protected BigDecimal maximumLoanAmount;
                    @XmlAttribute(name = "MaximumRepaymentAmount")
                    protected BigDecimal maximumRepaymentAmount;
                    @XmlAttribute(name = "MaximumRepaymentFrequency")
                    protected RepaymentFrequencyList maximumRepaymentFrequency;
                    @XmlAttribute(name = "MRIM")
                    protected BigDecimal mrim;
                    @XmlAttribute(name = "NSR")
                    protected BigDecimal nsr;
                    @XmlAttribute(name = "Serviceable")
                    protected YesNoList serviceable;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                    public List<Message.Content.Application.Summary.ServiceabilityResults.Applicant> getApplicant() {
                        if (applicant == null) {
                            applicant = new ArrayList<Message.Content.Application.Summary.ServiceabilityResults.Applicant>();
                        }
                        return this.applicant;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Applicant {
                        @XmlAttribute(name = "x_Party")
                        @XmlIDREF
                        protected Object xParty;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class NetDisposableIncome {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyShortList frequency;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class TotalGrossIncome {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyShortList frequency;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class TotalNetIncome {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyShortList frequency;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class TotalSystemCalculatedExpenses {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyShortList frequency;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class TotalSystemCalculatedLivingExpenses {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyShortList frequency;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class TotalUserStatedLivingExpenses {
                        @XmlAttribute(name = "Amount")
                        protected BigDecimal amount;
                        @XmlAttribute(name = "Frequency")
                        protected FrequencyShortList frequency;
                    }
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "beneficialOwner",
                "beneficiary",
                "business",
                "contact",
                "dealingNumber",
                "declaredIncome",
                "existingCustomer",
                "financialAnalysis",
                "foreignTaxAssociation",
                "incomePrevious",
                "incomePrior",
                "incomeRecent",
                "incomeYearToDate",
                "settlor",
                "sourceOfWealth",
                "trustDeedVariation",
                "trustee"
            })

@Data

@Entity
            public static class TrustApplicant {
                @XmlElement(name = "BeneficialOwner")
                protected List<Message.Content.Application.TrustApplicant.BeneficialOwner> beneficialOwner;
                @XmlElement(name = "Beneficiary")
                protected List<Message.Content.Application.TrustApplicant.Beneficiary> beneficiary;
                @XmlElement(name = "Business")
                protected Message.Content.Application.TrustApplicant.Business business;
                @XmlElement(name = "Contact")
                protected Message.Content.Application.TrustApplicant.Contact contact;
                @XmlElement(name = "DealingNumber")
                protected List<DealingNumberType> dealingNumber;
                @XmlElement(name = "DeclaredIncome")
                protected Message.Content.Application.TrustApplicant.DeclaredIncome declaredIncome;
                @XmlElement(name = "ExistingCustomer")
                protected Message.Content.Application.TrustApplicant.ExistingCustomer existingCustomer;
                @XmlElement(name = "FinancialAnalysis")
                protected Message.Content.Application.TrustApplicant.FinancialAnalysis financialAnalysis;
                @XmlElement(name = "ForeignTaxAssociation")
                protected ForeignTaxAssociationType foreignTaxAssociation;
                @XmlElement(name = "IncomePrevious")
                protected Message.Content.Application.TrustApplicant.IncomePrevious incomePrevious;
                @XmlElement(name = "IncomePrior")
                protected Message.Content.Application.TrustApplicant.IncomePrior incomePrior;
                @XmlElement(name = "IncomeRecent")
                protected Message.Content.Application.TrustApplicant.IncomeRecent incomeRecent;
                @XmlElement(name = "IncomeYearToDate")
                protected Message.Content.Application.TrustApplicant.IncomeYearToDate incomeYearToDate;
                @XmlElement(name = "Settlor")
                protected List<Message.Content.Application.TrustApplicant.Settlor> settlor;
                @XmlElement(name = "SourceOfWealth")
                protected List<Message.Content.Application.TrustApplicant.SourceOfWealth> sourceOfWealth;
                @XmlElement(name = "TrustDeedVariation")
                protected List<Message.Content.Application.TrustApplicant.TrustDeedVariation> trustDeedVariation;
                @XmlElement(name = "Trustee")
                protected List<Message.Content.Application.TrustApplicant.Trustee> trustee;
                @XmlAttribute(name = "ABN")
                protected String abn;
                @XmlAttribute(name = "ApplicantType")
                protected ApplicantTypeList applicantType;
                @XmlAttribute(name = "BusinessName")
                protected String businessName;
                @XmlAttribute(name = "BusinessNameSameAsTrustName")
                protected YesNoList businessNameSameAsTrustName;
                @XmlAttribute(name = "CountryEstablished")
                protected CountryCodeList countryEstablished;
                @XmlAttribute(name = "CustomerTypeCode")
                protected String customerTypeCode;
                @XmlAttribute(name = "CustomerTypeDescription")
                protected String customerTypeDescription;
                @XmlAttribute(name = "DocumentationType")
                protected String documentationType;
                @XmlAttribute(name = "Established")
                protected YesNoList established;
                @XmlAttribute(name = "EstablishmentDate")
                protected XMLGregorianCalendar establishmentDate;
                @XmlAttribute(name = "IsExistingCustomer")
                protected YesNoList isExistingCustomer;
                @XmlAttribute(name = "NumberOfBeneficiaries")
                protected BigInteger numberOfBeneficiaries;
                @XmlAttribute(name = "NumberOfTrustees")
                protected BigInteger numberOfTrustees;
                @XmlAttribute(name = "OECDCRSStatus")
                protected OecdCRSStatusList oecdcrsStatus;
                @XmlAttribute(name = "PrimaryApplicant")
                protected YesNoList primaryApplicant;
                @XmlAttribute(name = "SettlorName")
                protected String settlorName;
                @XmlAttribute(name = "TrustName")
                protected String trustName;
                @XmlAttribute(name = "TrustPurpose")
                protected TrustPurposeList trustPurpose;
                @XmlAttribute(name = "TrustStructure")
                protected TrustStructureList trustStructure;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
                @XmlAttribute(name = "VestingDate")
                protected XMLGregorianCalendar vestingDate;
                @XmlAttribute(name = "x_Accountant")
                @XmlIDREF
                protected Object xAccountant;
                public List<Message.Content.Application.TrustApplicant.BeneficialOwner> getBeneficialOwner() {
                    if (beneficialOwner == null) {
                        beneficialOwner = new ArrayList<Message.Content.Application.TrustApplicant.BeneficialOwner>();
                    }
                    return this.beneficialOwner;
                }
                public List<Message.Content.Application.TrustApplicant.Beneficiary> getBeneficiary() {
                    if (beneficiary == null) {
                        beneficiary = new ArrayList<Message.Content.Application.TrustApplicant.Beneficiary>();
                    }
                    return this.beneficiary;
                }
                public List<DealingNumberType> getDealingNumber() {
                    if (dealingNumber == null) {
                        dealingNumber = new ArrayList<DealingNumberType>();
                    }
                    return this.dealingNumber;
                }
                public List<Message.Content.Application.TrustApplicant.Settlor> getSettlor() {
                    if (settlor == null) {
                        settlor = new ArrayList<Message.Content.Application.TrustApplicant.Settlor>();
                    }
                    return this.settlor;
                }
                public List<Message.Content.Application.TrustApplicant.SourceOfWealth> getSourceOfWealth() {
                    if (sourceOfWealth == null) {
                        sourceOfWealth = new ArrayList<Message.Content.Application.TrustApplicant.SourceOfWealth>();
                    }
                    return this.sourceOfWealth;
                }
                public List<Message.Content.Application.TrustApplicant.TrustDeedVariation> getTrustDeedVariation() {
                    if (trustDeedVariation == null) {
                        trustDeedVariation = new ArrayList<Message.Content.Application.TrustApplicant.TrustDeedVariation>();
                    }
                    return this.trustDeedVariation;
                }
                public List<Message.Content.Application.TrustApplicant.Trustee> getTrustee() {
                    if (trustee == null) {
                        trustee = new ArrayList<Message.Content.Application.TrustApplicant.Trustee>();
                    }
                    return this.trustee;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class BeneficialOwner {
                    @XmlAttribute(name = "x_BeneficialOwner")
                    @XmlIDREF
                    protected Object xBeneficialOwner;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Beneficiary {
                    @XmlAttribute(name = "x_Beneficiary")
                    @XmlIDREF
                    protected Object xBeneficiary;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Business {
                    @XmlAttribute(name = "AustralianBIC")
                    protected String australianBIC;
                    @XmlAttribute(name = "CustomIndustryCode")
                    protected String customIndustryCode;
                    @XmlAttribute(name = "GICSCode")
                    protected String gicsCode;
                    @XmlAttribute(name = "Industry")
                    protected String industry;
                    @XmlAttribute(name = "IndustryCode")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    protected String industryCode;
                    @XmlAttribute(name = "MainBusinessActivity")
                    protected String mainBusinessActivity;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "contactPerson",
                    "officeFax",
                    "officeMobile",
                    "officePhone",
                    "principalTradingAddressDuration",
                    "registeredAddressDuration"
                })

@Data

@Entity
                public static class Contact {
                    @XmlElement(name = "ContactPerson")
                    protected Message.Content.Application.TrustApplicant.Contact.ContactPerson contactPerson;
                    @XmlElement(name = "OfficeFax")
                    protected PhoneType officeFax;
                    @XmlElement(name = "OfficeMobile")
                    protected PhoneType officeMobile;
                    @XmlElement(name = "OfficePhone")
                    protected PhoneType officePhone;
                    @XmlElement(name = "PrincipalTradingAddressDuration")
                    protected DurationType principalTradingAddressDuration;
                    @XmlElement(name = "RegisteredAddressDuration")
                    protected DurationType registeredAddressDuration;
                    @XmlAttribute(name = "Email")
                    protected String email;
                    @XmlAttribute(name = "PreferredContact")
                    protected PreferredContactCompanyList preferredContact;
                    @XmlAttribute(name = "PrincipalTradingAddressStartDate")
                    protected XMLGregorianCalendar principalTradingAddressStartDate;
                    @XmlAttribute(name = "RegisteredAddressStartDate")
                    protected XMLGregorianCalendar registeredAddressStartDate;
                    @XmlAttribute(name = "WebAddress")
                    protected String webAddress;
                    @XmlAttribute(name = "x_MailingAddress")
                    @XmlIDREF
                    protected Object xMailingAddress;
                    @XmlAttribute(name = "x_PrincipalTradingAddress")
                    @XmlIDREF
                    protected Object xPrincipalTradingAddress;
                    @XmlAttribute(name = "x_RegisteredAddress")
                    @XmlIDREF
                    protected Object xRegisteredAddress;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class ContactPerson {
                        @XmlAttribute(name = "FirstName")
                        protected String firstName;
                        @XmlAttribute(name = "NameTitle")
                        protected NameTitleList nameTitle;
                        @XmlAttribute(name = "Role")
                        protected String role;
                        @XmlAttribute(name = "Surname")
                        protected String surname;
                        @XmlAttribute(name = "x_ContactPerson")
                        @XmlIDREF
                        protected Object xContactPerson;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class DeclaredIncome {
                    @XmlAttribute(name = "IncomeAmount")
                    protected BigDecimal incomeAmount;
                    @XmlAttribute(name = "NetIncomeAmount")
                    protected BigDecimal netIncomeAmount;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "accountNumber"
                })

@Data

@Entity
                public static class ExistingCustomer {
                    @XmlElement(name = "AccountNumber")
                    protected FinancialAccountType accountNumber;
                    @XmlAttribute(name = "CustomerNumber")
                    protected String customerNumber;
                    @XmlAttribute(name = "CustomerSince")
                    protected XMLGregorianCalendar customerSince;
                    @XmlAttribute(name = "CustomerSinceMonth")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    protected String customerSinceMonth;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "companyFinancials"
                })

@Data

@Entity
                public static class FinancialAnalysis {
                    @XmlElement(name = "CompanyFinancials")
                    protected List<Message.Content.Application.TrustApplicant.FinancialAnalysis.CompanyFinancials> companyFinancials;
                    @XmlAttribute(name = "AnnualPaymentOnCommitments")
                    protected BigDecimal annualPaymentOnCommitments;
                    @XmlAttribute(name = "CompleteFinancialAnalysis")
                    protected YesNoList completeFinancialAnalysis;
                    public List<Message.Content.Application.TrustApplicant.FinancialAnalysis.CompanyFinancials> getCompanyFinancials() {
                        if (companyFinancials == null) {
                            companyFinancials = new ArrayList<Message.Content.Application.TrustApplicant.FinancialAnalysis.CompanyFinancials>();
                        }
                        return this.companyFinancials;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class CompanyFinancials {
                        @XmlAttribute(name = "x_CompanyFinancials")
                        @XmlIDREF
                        protected Object xCompanyFinancials;
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomePrevious {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.TrustApplicant.IncomePrevious.Addback addback;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                    protected YesNoList incomeGreaterThanPreviousYear;
                    @XmlAttribute(name = "ProfitAfterTax")
                    protected BigDecimal profitAfterTax;
                    @XmlAttribute(name = "ProfitBeforeTax")
                    protected BigDecimal profitBeforeTax;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAttribute(name = "TaxOfficeAssessments")
                    protected YesNoList taxOfficeAssessments;
                    @XmlAttribute(name = "x_Accountant")
                    @XmlIDREF
                    protected Object xAccountant;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.TrustApplicant.IncomePrevious.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToTrustee")
                        protected BigDecimal paymentToTrustee;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.TrustApplicant.IncomePrevious.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.TrustApplicant.IncomePrevious.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomePrior {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.TrustApplicant.IncomePrior.Addback addback;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                    protected YesNoList incomeGreaterThanPreviousYear;
                    @XmlAttribute(name = "ProfitAfterTax")
                    protected BigDecimal profitAfterTax;
                    @XmlAttribute(name = "ProfitBeforeTax")
                    protected BigDecimal profitBeforeTax;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAttribute(name = "TaxOfficeAssessments")
                    protected YesNoList taxOfficeAssessments;
                    @XmlAttribute(name = "x_Accountant")
                    @XmlIDREF
                    protected Object xAccountant;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.TrustApplicant.IncomePrior.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToTrustee")
                        protected BigDecimal paymentToTrustee;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.TrustApplicant.IncomePrior.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.TrustApplicant.IncomePrior.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomeRecent {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.TrustApplicant.IncomeRecent.Addback addback;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "IncomeGreaterThanPreviousYear")
                    protected YesNoList incomeGreaterThanPreviousYear;
                    @XmlAttribute(name = "ProfitAfterTax")
                    protected BigDecimal profitAfterTax;
                    @XmlAttribute(name = "ProfitBeforeTax")
                    protected BigDecimal profitBeforeTax;
                    @XmlAttribute(name = "ProofCode")
                    protected ProofCodeTrustList proofCode;
                    @XmlAttribute(name = "ProofSighted")
                    protected YesNoList proofSighted;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAttribute(name = "TaxOfficeAssessments")
                    protected YesNoList taxOfficeAssessments;
                    @XmlAttribute(name = "x_Accountant")
                    @XmlIDREF
                    protected Object xAccountant;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.TrustApplicant.IncomeRecent.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToTrustee")
                        protected BigDecimal paymentToTrustee;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.TrustApplicant.IncomeRecent.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.TrustApplicant.IncomeRecent.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "addback"
                })

@Data

@Entity
                public static class IncomeYearToDate {
                    @XmlElement(name = "Addback")
                    protected Message.Content.Application.TrustApplicant.IncomeYearToDate.Addback addback;
                    @XmlAttribute(name = "EndDate")
                    protected XMLGregorianCalendar endDate;
                    @XmlAttribute(name = "ProfitAfterTax")
                    protected BigDecimal profitAfterTax;
                    @XmlAttribute(name = "ProfitBeforeTax")
                    protected BigDecimal profitBeforeTax;
                    @XmlAttribute(name = "StartDate")
                    protected XMLGregorianCalendar startDate;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "otherAddback"
                    })

@Data

@Entity
                    public static class Addback {
                        @XmlElement(name = "OtherAddback")
                        protected List<Message.Content.Application.TrustApplicant.IncomeYearToDate.Addback.OtherAddback> otherAddback;
                        @XmlAttribute(name = "Allowances")
                        protected BigDecimal allowances;
                        @XmlAttribute(name = "AmortisationOfGoodwill")
                        protected BigDecimal amortisationOfGoodwill;
                        @XmlAttribute(name = "Bonus")
                        protected BigDecimal bonus;
                        @XmlAttribute(name = "CarryForwardLosses")
                        protected BigDecimal carryForwardLosses;
                        @XmlAttribute(name = "Depreciation")
                        protected BigDecimal depreciation;
                        @XmlAttribute(name = "Interest")
                        protected BigDecimal interest;
                        @XmlAttribute(name = "Lease")
                        protected BigDecimal lease;
                        @XmlAttribute(name = "NonCashBenefits")
                        protected BigDecimal nonCashBenefits;
                        @XmlAttribute(name = "NonRecurringExpenses")
                        protected BigDecimal nonRecurringExpenses;
                        @XmlAttribute(name = "PaymentToTrustee")
                        protected BigDecimal paymentToTrustee;
                        @XmlAttribute(name = "Salary")
                        protected BigDecimal salary;
                        @XmlAttribute(name = "SuperannuationExcess")
                        protected BigDecimal superannuationExcess;
                        public List<Message.Content.Application.TrustApplicant.IncomeYearToDate.Addback.OtherAddback> getOtherAddback() {
                            if (otherAddback == null) {
                                otherAddback = new ArrayList<Message.Content.Application.TrustApplicant.IncomeYearToDate.Addback.OtherAddback>();
                            }
                            return this.otherAddback;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class OtherAddback {
                            @XmlAttribute(name = "Amount")
                            protected BigDecimal amount;
                            @XmlAttribute(name = "Description")
                            protected String description;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Settlor {
                    @XmlAttribute(name = "x_Settlor")
                    @XmlIDREF
                    protected Object xSettlor;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class SourceOfWealth {
                    @XmlAttribute(name = "Detail")
                    protected String detail;
                    @XmlAttribute(name = "Percentage")
                    protected BigDecimal percentage;
                    @XmlAttribute(name = "Type")
                    protected SourceOfFundsTypeList type;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class TrustDeedVariation {
                    @XmlAttribute(name = "Date")
                    protected XMLGregorianCalendar date;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Trustee {
                    @XmlAttribute(name = "AppointmentDate")
                    protected XMLGregorianCalendar appointmentDate;
                    @XmlAttribute(name = "x_Trustee")
                    @XmlIDREF
                    protected Object xTrustee;
                }
            }
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "benefitToApplicants",
            "coApplicantInterview",
            "futureCircumstances",
            "interview",
            "loanTermSought",
            "preferences",
            "purposeOfApplication",
            "refinancingAndConsolidation",
            "retirementDetails"
        })

@Data

@Entity
        public static class NeedsAnalysis {
            @XmlElement(name = "BenefitToApplicants")
            protected Message.Content.NeedsAnalysis.BenefitToApplicants benefitToApplicants;
            @XmlElement(name = "CoApplicantInterview")
            protected Message.Content.NeedsAnalysis.CoApplicantInterview coApplicantInterview;
            @XmlElement(name = "FutureCircumstances")
            protected Message.Content.NeedsAnalysis.FutureCircumstances futureCircumstances;
            @XmlElement(name = "Interview")
            protected Message.Content.NeedsAnalysis.Interview interview;
            @XmlElement(name = "LoanTermSought")
            protected DurationType loanTermSought;
            @XmlElement(name = "Preferences")
            protected Message.Content.NeedsAnalysis.Preferences preferences;
            @XmlElement(name = "PurposeOfApplication")
            protected List<Message.Content.NeedsAnalysis.PurposeOfApplication> purposeOfApplication;
            @XmlElement(name = "RefinancingAndConsolidation")
            protected Message.Content.NeedsAnalysis.RefinancingAndConsolidation refinancingAndConsolidation;
            @XmlElement(name = "RetirementDetails")
            protected Message.Content.NeedsAnalysis.RetirementDetails retirementDetails;
            @XmlAttribute(name = "LoanAmountSought")
            protected BigDecimal loanAmountSought;
            @XmlAttribute(name = "LoanTermSoughtDescription")
            protected String loanTermSoughtDescription;
            @XmlAttribute(name = "PrimaryApplicationPurpose")
            protected PrimaryPurposeLoanPurposeList primaryApplicationPurpose;
            @XmlAttribute(name = "ProductSelection")
            protected String productSelection;
            @XmlAttribute(name = "PurposeSummary")
            protected String purposeSummary;
            @XmlAttribute(name = "UniqueID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            protected String uniqueID;
            public List<Message.Content.NeedsAnalysis.PurposeOfApplication> getPurposeOfApplication() {
                if (purposeOfApplication == null) {
                    purposeOfApplication = new ArrayList<Message.Content.NeedsAnalysis.PurposeOfApplication>();
                }
                return this.purposeOfApplication;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")

@Data

@Entity
            public static class BenefitToApplicants {
                @XmlAttribute(name = "AllApplicantsBenefit")
                protected YesNoList allApplicantsBenefit;
                @XmlAttribute(name = "BenefitEnquiries")
                protected String benefitEnquiries;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "applicant"
            })

@Data

@Entity
            public static class CoApplicantInterview {
                @XmlElement(name = "Applicant")
                protected List<Message.Content.NeedsAnalysis.CoApplicantInterview.Applicant> applicant;
                public List<Message.Content.NeedsAnalysis.CoApplicantInterview.Applicant> getApplicant() {
                    if (applicant == null) {
                        applicant = new ArrayList<Message.Content.NeedsAnalysis.CoApplicantInterview.Applicant>();
                    }
                    return this.applicant;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Applicant {
                    @XmlAttribute(name = "BenefitEnquiries")
                    protected BenefitEnquiriesList benefitEnquiries;
                    @XmlAttribute(name = "BenefitEnquiriesDescription")
                    protected String benefitEnquiriesDescription;
                    @XmlAttribute(name = "CoApplicantBenefit")
                    protected CoApplicantBenefitList coApplicantBenefit;
                    @XmlAttribute(name = "CoApplicantReason")
                    protected String coApplicantReason;
                    @XmlAttribute(name = "Name")
                    protected String name;
                    @XmlAttribute(name = "Number")
                    protected String number;
                    @XmlAttribute(name = "SuspectDifficultyUnderstandingObligations")
                    protected YesNoList suspectDifficultyUnderstandingObligations;
                    @XmlAttribute(name = "SuspectExperiencingFinancialAbuse")
                    protected YesNoList suspectExperiencingFinancialAbuse;
                    @XmlAttribute(name = "SuspectUnderPressure")
                    protected YesNoList suspectUnderPressure;
                    @XmlAttribute(name = "SuspectUnfairConduct")
                    protected YesNoList suspectUnfairConduct;
                    @XmlAttribute(name = "UnderstandsCoApplicantObligations")
                    protected YesNoList understandsCoApplicantObligations;
                    @XmlAttribute(name = "x_Applicant")
                    @XmlIDREF
                    protected Object xApplicant;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "applicant",
                "responsibleLending"
            })

@Data

@Entity
            public static class FutureCircumstances {
                @XmlElement(name = "Applicant")
                protected List<Message.Content.NeedsAnalysis.FutureCircumstances.Applicant> applicant;
                @XmlElement(name = "ResponsibleLending")
                protected ResponsibleLendingType responsibleLending;
                public List<Message.Content.NeedsAnalysis.FutureCircumstances.Applicant> getApplicant() {
                    if (applicant == null) {
                        applicant = new ArrayList<Message.Content.NeedsAnalysis.FutureCircumstances.Applicant>();
                    }
                    return this.applicant;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Applicant {
                    @XmlAttribute(name = "Name")
                    protected String name;
                    @XmlAttribute(name = "Number")
                    protected String number;
                    @XmlAttribute(name = "x_Applicant")
                    @XmlIDREF
                    protected Object xApplicant;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "attendee"
            })

@Data

@Entity
            public static class Interview {
                @XmlElement(name = "Attendee")
                protected List<Message.Content.NeedsAnalysis.Interview.Attendee> attendee;
                @XmlAttribute(name = "AllApplicantsPresent")
                protected YesNoList allApplicantsPresent;
                @XmlAttribute(name = "AllApplicantsUnderstandEnglish")
                protected YesNoList allApplicantsUnderstandEnglish;
                @XmlAttribute(name = "Date")
                protected XMLGregorianCalendar date;
                @XmlAttribute(name = "InterpreterRecommended")
                protected YesNoList interpreterRecommended;
                @XmlAttribute(name = "x_Location")
                @XmlIDREF
                protected Object xLocation;
                public List<Message.Content.NeedsAnalysis.Interview.Attendee> getAttendee() {
                    if (attendee == null) {
                        attendee = new ArrayList<Message.Content.NeedsAnalysis.Interview.Attendee>();
                    }
                    return this.attendee;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Attendee {
                    @XmlAttribute(name = "x_Party")
                    @XmlIDREF
                    protected Object xParty;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "fundsAccessTypeDetails",
                "interestRateTypeDetails",
                "repaymentTypeDetails"
            })

@Data

@Entity
            public static class Preferences {
                @XmlElement(name = "FundsAccessTypeDetails")
                protected Message.Content.NeedsAnalysis.Preferences.FundsAccessTypeDetails fundsAccessTypeDetails;
                @XmlElement(name = "InterestRateTypeDetails")
                protected Message.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails interestRateTypeDetails;
                @XmlElement(name = "RepaymentTypeDetails")
                protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails repaymentTypeDetails;
                @XmlAttribute(name = "ConflictDescription")
                protected String conflictDescription;
                @XmlAttribute(name = "ConflictExists")
                protected YesNoList conflictExists;
                @XmlAttribute(name = "FundsAccessType")
                protected FundsAccessTypeList fundsAccessType;
                @XmlAttribute(name = "InterestRateType")
                protected InterestRateTypeList interestRateType;
                @XmlAttribute(name = "OtherPreferences")
                protected String otherPreferences;
                @XmlAttribute(name = "PreferredLenders")
                protected YesNoList preferredLenders;
                @XmlAttribute(name = "PreferredLendersDetails")
                protected String preferredLendersDetails;
                @XmlAttribute(name = "PrioritiesAndReasons")
                protected String prioritiesAndReasons;
                @XmlAttribute(name = "RepaymentType")
                protected PaymentTypeList repaymentType;
                @XmlAttribute(name = "Summary")
                protected String summary;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "offsetAccount",
                    "redraw"
                })

@Data

@Entity
                public static class FundsAccessTypeDetails {
                    @XmlElement(name = "OffsetAccount")
                    protected Message.Content.NeedsAnalysis.Preferences.FundsAccessTypeDetails.OffsetAccount offsetAccount;
                    @XmlElement(name = "Redraw")
                    protected Message.Content.NeedsAnalysis.Preferences.FundsAccessTypeDetails.Redraw redraw;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "reason"
                    })

@Data

@Entity
                    public static class OffsetAccount {
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.FundsAccessTypeDetails.OffsetAccount.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "AllowsAccessToFunds")
                            protected YesNoList allowsAccessToFunds;
                            @XmlAttribute(name = "AllowsPayingOffLoanSooner")
                            protected YesNoList allowsPayingOffLoanSooner;
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "ForTaxPurposes")
                            protected YesNoList forTaxPurposes;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "reason"
                    })

@Data

@Entity
                    public static class Redraw {
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.FundsAccessTypeDetails.Redraw.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "FlexibilityToAccessPrepaidFundsIfNeeded")
                            protected YesNoList flexibilityToAccessPrepaidFundsIfNeeded;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "fixedAndVariableRate",
                    "fixedRate",
                    "variableRate"
                })

@Data

@Entity
                public static class InterestRateTypeDetails {
                    @XmlElement(name = "FixedAndVariableRate")
                    protected Message.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.FixedAndVariableRate fixedAndVariableRate;
                    @XmlElement(name = "FixedRate")
                    protected Message.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.FixedRate fixedRate;
                    @XmlElement(name = "VariableRate")
                    protected Message.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.VariableRate variableRate;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "fixedPeriodDuration",
                        "reason"
                    })

@Data

@Entity
                    public static class FixedAndVariableRate {
                        @XmlElement(name = "FixedPeriodDuration")
                        protected DurationType fixedPeriodDuration;
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.FixedAndVariableRate.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "Flexibility")
                            protected YesNoList flexibility;
                            @XmlAttribute(name = "LimitingRateIncreaseRisk")
                            protected YesNoList limitingRateIncreaseRisk;
                            protected YesNoList other;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "fixedPeriodDuration",
                        "reason"
                    })

@Data

@Entity
                    public static class FixedRate {
                        @XmlElement(name = "FixedPeriodDuration")
                        protected DurationType fixedPeriodDuration;
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.FixedRate.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "AvoidingRateIncreaseRisk")
                            protected YesNoList avoidingRateIncreaseRisk;
                            @XmlAttribute(name = "Description")
                            protected String description;
                            protected YesNoList other;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "reason"
                    })

@Data

@Entity
                    public static class VariableRate {
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.InterestRateTypeDetails.VariableRate.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "Flexibility")
                            protected YesNoList flexibility;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                            @XmlAttribute(name = "PotentialRateDecreases")
                            protected YesNoList potentialRateDecreases;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "interestInAdvance",
                    "interestOnly",
                    "lineOfCredit",
                    "principalAndInterest"
                })

@Data

@Entity
                public static class RepaymentTypeDetails {
                    @XmlElement(name = "InterestInAdvance")
                    protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.InterestInAdvance interestInAdvance;
                    @XmlElement(name = "InterestOnly")
                    protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.InterestOnly interestOnly;
                    @XmlElement(name = "LineOfCredit")
                    protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.LineOfCredit lineOfCredit;
                    @XmlElement(name = "PrincipalAndInterest")
                    protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.PrincipalAndInterest principalAndInterest;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "reason"
                    })

@Data

@Entity
                    public static class InterestInAdvance {
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.InterestInAdvance.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "DiscountsOnInterestRate")
                            protected YesNoList discountsOnInterestRate;
                            @XmlAttribute(name = "ForTaxPurposes")
                            protected YesNoList forTaxPurposes;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                            public String getDescription() {
                                return description;
                            }
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "interestOnlyDuration",
                        "reason"
                    })

@Data

@Entity
                    public static class InterestOnly {
                        @XmlElement(name = "InterestOnlyDuration")
                        protected DurationType interestOnlyDuration;
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.InterestOnly.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "InterestOnlyDurationReason")
                        protected String interestOnlyDurationReason;
                        @XmlAttribute(name = "RepaymentFrequency")
                        protected FrequencyShortList repaymentFrequency;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "AccommodateAnticipatedNonRecurringExpenseItem")
                            protected YesNoList accommodateAnticipatedNonRecurringExpenseItem;
                            @XmlAttribute(name = "AccommodateTemporaryReductionInIncome")
                            protected YesNoList accommodateTemporaryReductionInIncome;
                            @XmlAttribute(name = "CreateFundsForInvestmentPurposes")
                            protected YesNoList createFundsForInvestmentPurposes;
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "MaximiseCashFlow")
                            protected YesNoList maximiseCashFlow;
                            @XmlAttribute(name = "MinimiseCashFlowImpactDuringConstruction")
                            protected YesNoList minimiseCashFlowImpactDuringConstruction;
                            @XmlAttribute(name = "MinimiseCashFlowImpactDuringTheBridgingPeriod")
                            protected YesNoList minimiseCashFlowImpactDuringTheBridgingPeriod;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                            @XmlAttribute(name = "PlanToConvertToInvestmentProperty")
                            protected YesNoList planToConvertToInvestmentProperty;
                            @XmlAttribute(name = "PrincipalReductionsInAnOffsetFacility")
                            protected YesNoList principalReductionsInAnOffsetFacility;
                            @XmlAttribute(name = "Recommendation")
                            protected YesNoList recommendation;
                            @XmlAttribute(name = "TaxationOrAccountingReasons")
                            protected YesNoList taxationOrAccountingReasons;
                            @XmlAttribute(name = "VariableAndUnpredictableIncome")
                            protected YesNoList variableAndUnpredictableIncome;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "reason",
                        "repaymentPlan"
                    })

@Data

@Entity
                    public static class LineOfCredit {
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.LineOfCredit.Reason reason;
                        @XmlElement(name = "RepaymentPlan")
                        protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.LineOfCredit.RepaymentPlan repaymentPlan;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "AllowsAccessToFundsAtAnyTime")
                            protected YesNoList allowsAccessToFundsAtAnyTime;
                            @XmlAttribute(name = "AnticipatedVariableCashFlows")
                            protected YesNoList anticipatedVariableCashFlows;
                            @XmlAttribute(name = "AssistsWithInvestmentPurchasesAndTaxPlanning")
                            protected YesNoList assistsWithInvestmentPurchasesAndTaxPlanning;
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "FlexibilityToManageRepayments")
                            protected YesNoList flexibilityToManageRepayments;
                            @XmlAttribute(name = "NoNeedToApplyForFurtherLendingInFuture")
                            protected YesNoList noNeedToApplyForFurtherLendingInFuture;
                            @XmlAttribute(name = "OngoingNeedForFunds")
                            protected YesNoList ongoingNeedForFunds;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class RepaymentPlan {
                            @XmlAttribute(name = "CoApplicantIncome")
                            protected YesNoList coApplicantIncome;
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "Downsizing")
                            protected YesNoList downsizing;
                            @XmlAttribute(name = "IncomeFromOtherInvestments")
                            protected YesNoList incomeFromOtherInvestments;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                            @XmlAttribute(name = "RepaymentOfLoanPriorToEndOfTerm")
                            protected YesNoList repaymentOfLoanPriorToEndOfTerm;
                            @XmlAttribute(name = "SaleOfAssets")
                            protected YesNoList saleOfAssets;
                            @XmlAttribute(name = "Savings")
                            protected YesNoList savings;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "reason"
                    })

@Data

@Entity
                    public static class PrincipalAndInterest {
                        @XmlElement(name = "Reason")
                        protected Message.Content.NeedsAnalysis.Preferences.RepaymentTypeDetails.PrincipalAndInterest.Reason reason;
                        @XmlAttribute(name = "Importance")
                        protected ImportanceList importance;
                        @XmlAttribute(name = "RepaymentFrequency")
                        protected FrequencyShortList repaymentFrequency;
                        @XmlAttribute(name = "RisksExplained")
                        protected YesNoList risksExplained;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Reason {
                            @XmlAttribute(name = "BuildUpEquityFromTheStart")
                            protected YesNoList buildUpEquityFromTheStart;
                            @XmlAttribute(name = "Description")
                            protected String description;
                            @XmlAttribute(name = "HigherLendingLimit")
                            protected YesNoList higherLendingLimit;
                            @XmlAttribute(name = "LowerDepositRequired")
                            protected YesNoList lowerDepositRequired;
                            @XmlAttribute(name = "MinimiseInterestPaidOverLifeOfLoan")
                            protected YesNoList minimiseInterestPaidOverLifeOfLoan;
                            @XmlAttribute(name = "Other")
                            protected YesNoList other;
                        }
                    }
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")

@Data

@Entity
            public static class PurposeOfApplication {
                @XmlAttribute(name = "Amount")
                protected BigDecimal amount;
                @XmlAttribute(name = "Description")
                protected String description;
                @XmlAttribute(name = "Purpose")
                protected PurposeOfApplicationList purpose;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "refinancingReason"
            })

@Data

@Entity
            public static class RefinancingAndConsolidation {
                @XmlElement(name = "RefinancingReason")
                protected Message.Content.NeedsAnalysis.RefinancingAndConsolidation.RefinancingReason refinancingReason;
                @XmlAttribute(name = "DetailsOfCreditCardPlan")
                protected String detailsOfCreditCardPlan;
                @XmlAttribute(name = "ExplainedIncreaseInterestRisk")
                protected YesNoList explainedIncreaseInterestRisk;
                @XmlAttribute(name = "ExplainedIncreaseLoanTermRisk")
                protected YesNoList explainedIncreaseLoanTermRisk;
                @XmlAttribute(name = "PlanToCloseOrReduceCreditCard")
                protected YesNoList planToCloseOrReduceCreditCard;
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class RefinancingReason {
                    @XmlAttribute(name = "CloseToEndOfCurrentLoanTerm")
                    protected YesNoList closeToEndOfCurrentLoanTerm;
                    @XmlAttribute(name = "CloseToEndOfCurrentLoanTermDetails")
                    protected String closeToEndOfCurrentLoanTermDetails;
                    @XmlAttribute(name = "DebtConsolidation")
                    protected YesNoList debtConsolidation;
                    @XmlAttribute(name = "DebtConsolidationDetails")
                    protected String debtConsolidationDetails;
                    @XmlAttribute(name = "DissatisfactionWithCurrentLender")
                    protected YesNoList dissatisfactionWithCurrentLender;
                    @XmlAttribute(name = "DissatisfactionWithCurrentLenderDetails")
                    protected String dissatisfactionWithCurrentLenderDetails;
                    @XmlAttribute(name = "GreaterFlexibility")
                    protected YesNoList greaterFlexibility;
                    @XmlAttribute(name = "GreaterFlexibilityDetails")
                    protected String greaterFlexibilityDetails;
                    @XmlAttribute(name = "IncreaseTotalLoanAmount")
                    protected YesNoList increaseTotalLoanAmount;
                    @XmlAttribute(name = "IncreaseTotalLoanAmountDetails")
                    protected String increaseTotalLoanAmountDetails;
                    @XmlAttribute(name = "LowerInterestRate")
                    protected YesNoList lowerInterestRate;
                    @XmlAttribute(name = "LowerInterestRateDetails")
                    protected String lowerInterestRateDetails;
                    @XmlAttribute(name = "Other")
                    protected YesNoList other;
                    @XmlAttribute(name = "OtherDetails")
                    protected String otherDetails;
                    @XmlAttribute(name = "ReducedRepayments")
                    protected YesNoList reducedRepayments;
                    @XmlAttribute(name = "ReducedRepaymentsDetails")
                    protected String reducedRepaymentsDetails;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "applicant",
                "repaymentOptions"
            })

@Data

@Entity
            public static class RetirementDetails {
                @XmlElement(name = "Applicant")
                protected List<Message.Content.NeedsAnalysis.RetirementDetails.Applicant> applicant;
                @XmlElement(name = "RepaymentOptions")
                protected Message.Content.NeedsAnalysis.RetirementDetails.RepaymentOptions repaymentOptions;
                public List<Message.Content.NeedsAnalysis.RetirementDetails.Applicant> getApplicant() {
                    if (applicant == null) {
                        applicant = new ArrayList<Message.Content.NeedsAnalysis.RetirementDetails.Applicant>();
                    }
                    return this.applicant;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "repaymentOptions"
                })

@Data

@Entity
                public static class Applicant {
                    @XmlElement(name = "RepaymentOptions")
                    protected Message.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions repaymentOptions;
                    @XmlAttribute(name = "AgeAtEndOfLoan")
                    protected BigInteger ageAtEndOfLoan;
                    @XmlAttribute(name = "IntendedRetirementAge")
                    protected BigInteger intendedRetirementAge;
                    @XmlAttribute(name = "IntendedRetirementAgeDetails")
                    protected String intendedRetirementAgeDetails;
                    @XmlAttribute(name = "Name")
                    protected String name;
                    @XmlAttribute(name = "Number")
                    protected String number;
                    @XmlAttribute(name = "UnderstandsImpactOnRetirementPlans")
                    protected YesNoList understandsImpactOnRetirementPlans;
                    @XmlAttribute(name = "x_Applicant")
                    @XmlIDREF
                    protected Object xApplicant;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "recurringIncomeFromSuperannuationDetails",
                        "saleOfAssetsDetails",
                        "savingsDetails",
                        "superannuationLumpSumFollowingRetirementDetails"
                    })

@Data

@Entity
                    public static class RepaymentOptions {
                        @XmlElement(name = "RecurringIncomeFromSuperannuationDetails")
                        protected Message.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.RecurringIncomeFromSuperannuationDetails recurringIncomeFromSuperannuationDetails;
                        @XmlElement(name = "SaleOfAssetsDetails")
                        protected Message.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.SaleOfAssetsDetails saleOfAssetsDetails;
                        @XmlElement(name = "SavingsDetails")
                        protected Message.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.SavingsDetails savingsDetails;
                        @XmlElement(name = "SuperannuationLumpSumFollowingRetirementDetails")
                        protected Message.Content.NeedsAnalysis.RetirementDetails.Applicant.RepaymentOptions.SuperannuationLumpSumFollowingRetirementDetails superannuationLumpSumFollowingRetirementDetails;
                        @XmlAttribute(name = "CoApplicantIncome")
                        protected YesNoList coApplicantIncome;
                        @XmlAttribute(name = "Description")
                        protected String description;
                        @XmlAttribute(name = "DownsizingHome")
                        protected YesNoList downsizingHome;
                        @XmlAttribute(name = "IncomeFromOtherInvestments")
                        protected YesNoList incomeFromOtherInvestments;
                        @XmlAttribute(name = "Other")
                        protected YesNoList other;
                        @XmlAttribute(name = "RecurringIncomeFromSuperannuation")
                        protected YesNoList recurringIncomeFromSuperannuation;
                        @XmlAttribute(name = "RepaymentOfLoanPriorToRetirement")
                        protected YesNoList repaymentOfLoanPriorToRetirement;
                        @XmlAttribute(name = "SaleOfAssets")
                        protected YesNoList saleOfAssets;
                        @XmlAttribute(name = "Savings")
                        protected YesNoList savings;
                        @XmlAttribute(name = "SuperannuationLumpSumFollowingRetirement")
                        protected YesNoList superannuationLumpSumFollowingRetirement;
                        @XmlAttribute(name = "WorkPastStatutoryRetirementAge")
                        protected YesNoList workPastStatutoryRetirementAge;
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class RecurringIncomeFromSuperannuationDetails {
                            @XmlAttribute(name = "FinancialPlannerDocumentation")
                            protected YesNoList financialPlannerDocumentation;
                            @XmlAttribute(name = "FinancialPlannerDocumentationDescription")
                            protected String financialPlannerDocumentationDescription;
                            @XmlAttribute(name = "SuperStatementShowingProjectedRecurringIncome")
                            protected YesNoList superStatementShowingProjectedRecurringIncome;
                            @XmlAttribute(name = "SuperStatementShowingProjectedRecurringIncomeDescription")
                            protected String superStatementShowingProjectedRecurringIncomeDescription;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class SaleOfAssetsDetails {
                            @XmlAttribute(name = "LenderHeldSecurity")
                            protected YesNoList lenderHeldSecurity;
                            @XmlAttribute(name = "LenderHeldSecurityDescription")
                            protected String lenderHeldSecurityDescription;
                            @XmlAttribute(name = "OtherAssets")
                            protected YesNoList otherAssets;
                            @XmlAttribute(name = "OtherAssetsDescription")
                            protected String otherAssetsDescription;
                            @XmlAttribute(name = "OtherLenderHeldSecurity")
                            protected YesNoList otherLenderHeldSecurity;
                            @XmlAttribute(name = "OtherLenderHeldSecurityDescription")
                            protected String otherLenderHeldSecurityDescription;
                            @XmlAttribute(name = "Shares")
                            protected YesNoList shares;
                            @XmlAttribute(name = "SharesDescription")
                            protected String sharesDescription;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class SavingsDetails {
                            @XmlAttribute(name = "LenderHeldSavingsAccount")
                            protected YesNoList lenderHeldSavingsAccount;
                            @XmlAttribute(name = "LenderHeldSavingsAccountDescription")
                            protected String lenderHeldSavingsAccountDescription;
                            @XmlAttribute(name = "OtherLenderHeldSavingsAccount")
                            protected YesNoList otherLenderHeldSavingsAccount;
                            @XmlAttribute(name = "OtherLenderHeldSavingsAccountDescription")
                            protected String otherLenderHeldSavingsAccountDescription;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class SuperannuationLumpSumFollowingRetirementDetails {
                            @XmlAttribute(name = "FinancialPlannerDocumentation")
                            protected YesNoList financialPlannerDocumentation;
                            @XmlAttribute(name = "FinancialPlannerDocumentationDescription")
                            protected String financialPlannerDocumentationDescription;
                            @XmlAttribute(name = "SuperStatementShowingProjectedSuperannuationAmount")
                            protected YesNoList superStatementShowingProjectedSuperannuationAmount;
                            @XmlAttribute(name = "SuperStatementShowingProjectedSuperannuationAmountDescription")
                            protected String superStatementShowingProjectedSuperannuationAmountDescription;
                        }
                    }
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "recurringIncomeFromSuperannuationDetails",
                    "saleOfAssetsDetails",
                    "savingsDetails",
                    "superannuationLumpSumFollowingRetirementDetails"
                })

@Data

@Entity
                public static class RepaymentOptions {
                    @XmlElement(name = "RecurringIncomeFromSuperannuationDetails")
                    protected Message.Content.NeedsAnalysis.RetirementDetails.RepaymentOptions.RecurringIncomeFromSuperannuationDetails recurringIncomeFromSuperannuationDetails;
                    @XmlElement(name = "SaleOfAssetsDetails")
                    protected Message.Content.NeedsAnalysis.RetirementDetails.RepaymentOptions.SaleOfAssetsDetails saleOfAssetsDetails;
                    @XmlElement(name = "SavingsDetails")
                    protected Message.Content.NeedsAnalysis.RetirementDetails.RepaymentOptions.SavingsDetails savingsDetails;
                    @XmlElement(name = "SuperannuationLumpSumFollowingRetirementDetails")
                    protected Message.Content.NeedsAnalysis.RetirementDetails.RepaymentOptions.SuperannuationLumpSumFollowingRetirementDetails superannuationLumpSumFollowingRetirementDetails;
                    @XmlAttribute(name = "CoApplicantIncome")
                    protected YesNoList coApplicantIncome;
                    @XmlAttribute(name = "Description")
                    protected String description;
                    @XmlAttribute(name = "DownsizingHome")
                    protected YesNoList downsizingHome;
                    @XmlAttribute(name = "IncomeFromOtherInvestments")
                    protected YesNoList incomeFromOtherInvestments;
                    @XmlAttribute(name = "Other")
                    protected YesNoList other;
                    @XmlAttribute(name = "RecurringIncomeFromSuperannuation")
                    protected YesNoList recurringIncomeFromSuperannuation;
                    @XmlAttribute(name = "RepaymentOfLoanPriorToRetirement")
                    protected YesNoList repaymentOfLoanPriorToRetirement;
                    @XmlAttribute(name = "SaleOfAssets")
                    protected YesNoList saleOfAssets;
                    @XmlAttribute(name = "Savings")
                    protected YesNoList savings;
                    @XmlAttribute(name = "SuperannuationLumpSumFollowingRetirement")
                    protected YesNoList superannuationLumpSumFollowingRetirement;
                    @XmlAttribute(name = "WorkPastStatutoryRetirementAge")
                    protected YesNoList workPastStatutoryRetirementAge;
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class RecurringIncomeFromSuperannuationDetails {
                        @XmlAttribute(name = "FinancialPlannerDocumentation")
                        protected YesNoList financialPlannerDocumentation;
                        @XmlAttribute(name = "FinancialPlannerDocumentationDescription")
                        protected String financialPlannerDocumentationDescription;
                        @XmlAttribute(name = "SuperStatementShowingProjectedRecurringIncome")
                        protected YesNoList superStatementShowingProjectedRecurringIncome;
                        @XmlAttribute(name = "SuperStatementShowingProjectedRecurringIncomeDescription")
                        protected String superStatementShowingProjectedRecurringIncomeDescription;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class SaleOfAssetsDetails {
                        @XmlAttribute(name = "LenderHeldSecurity")
                        protected YesNoList lenderHeldSecurity;
                        @XmlAttribute(name = "LenderHeldSecurityDescription")
                        protected String lenderHeldSecurityDescription;
                        @XmlAttribute(name = "OtherAssets")
                        protected YesNoList otherAssets;
                        @XmlAttribute(name = "OtherAssetsDescription")
                        protected String otherAssetsDescription;
                        @XmlAttribute(name = "OtherLenderHeldProperty")
                        protected YesNoList otherLenderHeldProperty;
                        @XmlAttribute(name = "OtherLenderHeldPropertyDescription")
                        protected String otherLenderHeldPropertyDescription;
                        @XmlAttribute(name = "OtherLenderHeldSecurity")
                        protected YesNoList otherLenderHeldSecurity;
                        @XmlAttribute(name = "OtherLenderHeldSecurityDescription")
                        protected String otherLenderHeldSecurityDescription;
                        @XmlAttribute(name = "Shares")
                        protected YesNoList shares;
                        @XmlAttribute(name = "SharesDescription")
                        protected String sharesDescription;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class SavingsDetails {
                        @XmlAttribute(name = "LenderHeldSavingsAccount")
                        protected YesNoList lenderHeldSavingsAccount;
                        @XmlAttribute(name = "LenderHeldSavingsAccountDescription")
                        protected String lenderHeldSavingsAccountDescription;
                        @XmlAttribute(name = "OtherLenderHeldSavingsAccount")
                        protected YesNoList otherLenderHeldSavingsAccount;
                        @XmlAttribute(name = "OtherLenderHeldSavingsAccountDescription")
                        protected String otherLenderHeldSavingsAccountDescription;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class SuperannuationLumpSumFollowingRetirementDetails {
                        @XmlAttribute(name = "FinancialPlannerDocumentation")
                        protected YesNoList financialPlannerDocumentation;
                        @XmlAttribute(name = "FinancialPlannerDocumentationDescription")
                        protected String financialPlannerDocumentationDescription;
                        @XmlAttribute(name = "SuperStatementShowingProjectedSuperannuationAmount")
                        protected YesNoList superStatementShowingProjectedSuperannuationAmount;
                        @XmlAttribute(name = "SuperStatementShowingProjectedSuperannuationAmountDescription")
                        protected String superStatementShowingProjectedSuperannuationAmountDescription;
                    }
                }
            }
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "applicant"
        })

@Data

@Entity
        public static class StatementOfPosition {
            @XmlElement(name = "Applicant")
            protected List<Message.Content.StatementOfPosition.Applicant> applicant;
            @XmlAttribute(name = "Date")
            protected XMLGregorianCalendar date;
            @XmlAttribute(name = "IsSigned")
            protected YesNoList isSigned;
            @XmlAttribute(name = "UniqueID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            protected String uniqueID;
            public List<Message.Content.StatementOfPosition.Applicant> getApplicant() {
                if (applicant == null) {
                    applicant = new ArrayList<Message.Content.StatementOfPosition.Applicant>();
                }
                return this.applicant;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")

@Data

@Entity
            public static class Applicant {
                @XmlAttribute(name = "x_Applicant")
                @XmlIDREF
                protected Object xApplicant;
            }
        }
    }
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "applicationInstructions",
        "errorInstructions"
    })

@Data

@Entity
    public static class Instructions {
        @XmlElement(name = "ApplicationInstructions")
        protected Message.Instructions.ApplicationInstructions applicationInstructions;
        @XmlElement(name = "ErrorInstructions")
        protected List<Message.Instructions.ErrorInstructions> errorInstructions;
        public List<Message.Instructions.ErrorInstructions> getErrorInstructions() {
            if (errorInstructions == null) {
                errorInstructions = new ArrayList<Message.Instructions.ErrorInstructions>();
            }
            return this.errorInstructions;
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "submit",
            "update"
        })

@Data

@Entity
        public static class ApplicationInstructions {
            @XmlElement(name = "Submit")
            protected Message.Instructions.ApplicationInstructions.Submit submit;
            @XmlElement(name = "Update")
            protected Message.Instructions.ApplicationInstructions.Update update;
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "condition"
            })

@Data

@Entity
            public static class Submit {
                @XmlElement(name = "Condition")
                protected List<Message.Instructions.ApplicationInstructions.Submit.Condition> condition;
                @XmlAttribute(name = "AssessmentType")
                protected AssessmentTypeApplicationInstructionsList assessmentType;
                @XmlAttribute(name = "IsAccountVariation")
                protected YesNoList isAccountVariation;
                @XmlAttribute(name = "IsResubmission")
                protected YesNoList isResubmission;
                @XmlAttribute(name = "IsSubmissionDocuments")
                protected YesNoList isSubmissionDocuments;
                @XmlAttribute(name = "IsSupportingDocuments")
                protected YesNoList isSupportingDocuments;
                public List<Message.Instructions.ApplicationInstructions.Submit.Condition> getCondition() {
                    if (condition == null) {
                        condition = new ArrayList<Message.Instructions.ApplicationInstructions.Submit.Condition>();
                    }
                    return this.condition;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Condition {
                    @XmlAttribute(name = "ConditionResponseDescription")
                    protected String conditionResponseDescription;
                    @XmlAttribute(name = "ConditionResponseStatus")
                    protected ConditionResponseStatusList conditionResponseStatus;
                    @XmlAttribute(name = "LoanConditionText")
                    protected String loanConditionText;
                    @XmlAttribute(name = "x_SupportingDocument")
                    @XmlIDREF
                    protected Object xSupportingDocument;
                }
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "event",
                "status"
            })

@Data

@Entity
            public static class Update {
                @XmlElement(name = "Event")
                protected List<Message.Instructions.ApplicationInstructions.Update.Event> event;
                @XmlElement(name = "Status")
                protected Message.Instructions.ApplicationInstructions.Update.Status status;
                public List<Message.Instructions.ApplicationInstructions.Update.Event> getEvent() {
                    if (event == null) {
                        event = new ArrayList<Message.Instructions.ApplicationInstructions.Update.Event>();
                    }
                    return this.event;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "")

@Data

@Entity
                public static class Event {
                    @XmlAttribute(name = "DateTime")
                    protected XMLGregorianCalendar dateTime;
                    @XmlAttribute(name = "Details")
                    protected String details;
                    @XmlAttribute(name = "Name", required = true)
                    protected EventNameApplicationInstructionsList name;
                    @XmlAttribute(name = "UniqueID")
                    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                    @XmlID
                    protected String uniqueID;
                }
                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "condition",
                    "declined",
                    "preApproved"
                })

@Data

@Entity
                public static class Status {
                    @XmlElement(name = "Condition")
                    protected List<Message.Instructions.ApplicationInstructions.Update.Status.Condition> condition;
                    @XmlElement(name = "Declined")
                    protected List<Message.Instructions.ApplicationInstructions.Update.Status.Declined> declined;
                    @XmlElement(name = "PreApproved")
                    protected List<Message.Instructions.ApplicationInstructions.Update.Status.PreApproved> preApproved;
                    @XmlAttribute(name = "DateTime")
                    protected XMLGregorianCalendar dateTime;
                    @XmlAttribute(name = "Details")
                    protected String details;
                    @XmlAttribute(name = "Name", required = true)
                    protected StatusNameApplicationInstructionsList name;
                    public List<Message.Instructions.ApplicationInstructions.Update.Status.Condition> getCondition() {
                        if (condition == null) {
                            condition = new ArrayList<Message.Instructions.ApplicationInstructions.Update.Status.Condition>();
                        }
                        return this.condition;
                    }
                    public List<Message.Instructions.ApplicationInstructions.Update.Status.Declined> getDeclined() {
                        if (declined == null) {
                            declined = new ArrayList<Message.Instructions.ApplicationInstructions.Update.Status.Declined>();
                        }
                        return this.declined;
                    }
                    public List<Message.Instructions.ApplicationInstructions.Update.Status.PreApproved> getPreApproved() {
                        if (preApproved == null) {
                            preApproved = new ArrayList<Message.Instructions.ApplicationInstructions.Update.Status.PreApproved>();
                        }
                        return this.preApproved;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "", propOrder = {
                        "product"
                    })

@Data

@Entity
                    public static class Condition {
                        @XmlElement(name = "Product")
                        protected List<Message.Instructions.ApplicationInstructions.Update.Status.Condition.Product> product;
                        @XmlAttribute(name = "ConditionOwner")
                        protected ConditionOwnerApplicationInstructionsList conditionOwner;
                        @XmlAttribute(name = "ConditionStatus", required = true)
                        protected ConditionStatusApplicationInstructionsList conditionStatus;
                        @XmlAttribute(name = "ConditionType")
                        protected String conditionType;
                        @XmlAttribute(name = "CreatedDateTime")
                        protected XMLGregorianCalendar createdDateTime;
                        @XmlAttribute(name = "DocRequirement")
                        protected YesNoList docRequirement;
                        @XmlAttribute(name = "LoanConditionText")
                        protected String loanConditionText;
                        @XmlAttribute(name = "PreconditionToStage", required = true)
                        protected PreConditionToStageApplicationInstructionsList preconditionToStage;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                        @XmlAttribute(name = "UpdatedDateTime")
                        protected XMLGregorianCalendar updatedDateTime;
                        @XmlAttribute(name = "x_SupportingDocument")
                        @XmlIDREF
                        protected Object xSupportingDocument;
                        public List<Message.Instructions.ApplicationInstructions.Update.Status.Condition.Product> getProduct() {
                            if (product == null) {
                                product = new ArrayList<Message.Instructions.ApplicationInstructions.Update.Status.Condition.Product>();
                            }
                            return this.product;
                        }
                        @XmlAccessorType(XmlAccessType.FIELD)
                        @XmlType(name = "")

@Data

@Entity
                        public static class Product {
                            @XmlAttribute(name = "x_FinancialProduct")
                            @XmlIDREF
                            protected Object xFinancialProduct;
                        }
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class Declined {
                        @XmlAttribute(name = "CreditReportingBody")
                        protected CreditReportingBodyList creditReportingBody;
                        @XmlAttribute(name = "Details")
                        protected String details;
                        @XmlAttribute(name = "Reason", required = true)
                        protected DeclinedReasonApplicationInstructionsList reason;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                    @XmlAccessorType(XmlAccessType.FIELD)
                    @XmlType(name = "")

@Data

@Entity
                    public static class PreApproved {
                        @XmlAttribute(name = "EstablishmentAndGovernmentFees")
                        protected BigDecimal establishmentAndGovernmentFees;
                        @XmlAttribute(name = "EstimatedBorrowingPower")
                        protected BigDecimal estimatedBorrowingPower;
                        @XmlAttribute(name = "EstimatedRepaymentAmount")
                        protected BigDecimal estimatedRepaymentAmount;
                        @XmlAttribute(name = "UniqueID")
                        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                        @XmlID
                        protected String uniqueID;
                    }
                }
            }
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "annotation"
        })

@Data

@Entity
        public static class ErrorInstructions {
            @XmlElement(name = "Annotation")
            protected List<Message.Instructions.ErrorInstructions.Annotation> annotation;
            @XmlAttribute(name = "ErrorSource")
            protected ErrorSourceList errorSource;
            @XmlAttribute(name = "ErrorSourceVersion")
            protected String errorSourceVersion;
            @XmlAttribute(name = "Type", required = true)
            protected ErrorInstructionsTypeList type;
            @XmlAttribute(name = "UniqueID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            protected String uniqueID;
            @XmlAttribute(name = "XPath")
            protected String xPath;
            public List<Message.Instructions.ErrorInstructions.Annotation> getAnnotation() {
                if (annotation == null) {
                    annotation = new ArrayList<Message.Instructions.ErrorInstructions.Annotation>();
                }
                return this.annotation;
            }
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")

@Data

@Entity
            public static class Annotation {
                @XmlAttribute(name = "Details")
                protected String details;
                @XmlAttribute(name = "Type")
                protected AnnotationTypeList type;
                @XmlAttribute(name = "UniqueID")
                @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
                @XmlID
                protected String uniqueID;
            }
        }
    }
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "phoneNumber",
        "relatedSoftware",
        "software"
    })

@Data

@Entity
    public static class Publisher {
        @XmlElement(name = "PhoneNumber")
        protected PhoneType phoneNumber;
        @XmlElement(name = "RelatedSoftware")
        protected List<Message.Publisher.RelatedSoftware> relatedSoftware;
        @XmlElement(name = "Software")
        protected Message.Publisher.Software software;
        @XmlAttribute(name = "CompanyName")
        protected String companyName;
        @XmlAttribute(name = "ContactName")
        protected String contactName;
        @XmlAttribute(name = "Email")
        protected String email;
        @XmlAttribute(name = "LIXICode", required = true)
        protected String lixiCode;
        @XmlAttribute(name = "PublishedDateTime")
        protected XMLGregorianCalendar publishedDateTime;
        public List<Message.Publisher.RelatedSoftware> getRelatedSoftware() {
            if (relatedSoftware == null) {
                relatedSoftware = new ArrayList<Message.Publisher.RelatedSoftware>();
            }
            return this.relatedSoftware;
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")

@Data

@Entity
        public static class RelatedSoftware {
            @XmlAttribute(name = "Description")
            protected String description;
            @XmlAttribute(name = "Environment")
            protected String environment;
            @XmlAttribute(name = "LIXICode")
            protected String lixiCode;
            @XmlAttribute(name = "Name")
            protected String name;
            @XmlAttribute(name = "TechnicalEmail")
            protected String technicalEmail;
            @XmlAttribute(name = "Version")
            protected String version;
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")

@Data

@Entity
        public static class Software {
            @XmlAttribute(name = "Description")
            protected String description;
            @XmlAttribute(name = "Environment")
            protected String environment;
            @XmlAttribute(name = "LIXICode", required = true)
            protected String lixiCode;
            @XmlAttribute(name = "Name")
            protected String name;
            @XmlAttribute(name = "TechnicalEmail")
            protected String technicalEmail;
            @XmlAttribute(name = "Version")
            protected String version;
        }
    }
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "software"
    })

@Data

@Entity
    public static class Recipient {
        @XmlElement(name = "Software")
        protected Message.Recipient.Software software;
        @XmlAttribute(name = "Description")
        protected String description;
        @XmlAttribute(name = "LIXICode", required = true)
        protected String lixiCode;
        @XmlAttribute(name = "RoutingCode")
        protected String routingCode;
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")

@Data

@Entity
        public static class Software {
            @XmlAttribute(name = "Environment")
            protected String environment;
        }
    }
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")

@Data

@Entity
    public static class SchemaVersion {
        @XmlAttribute(name = "GuidebookCode")
        protected String guidebookCode;
        @XmlAttribute(name = "GuidebookName")
        protected String guidebookName;
        @XmlAttribute(name = "GuidebookVersion")
        protected String guidebookVersion;
        @XmlAttribute(name = "LIXICustomVersion")
        protected String lixiCustomVersion;
        @XmlAttribute(name = "LIXITransactionType", required = true)
        protected String lixiTransactionType;
        @XmlAttribute(name = "LIXIVersion", required = true)
        protected String lixiVersion;
        public String getGuidebookCode() {
            return guidebookCode;
        }
        
        public void setGuidebookCode(String value) {
            this.guidebookCode = value;
        }
        
        public String getGuidebookName() {
            return guidebookName;
        }
        
        public void setGuidebookName(String value) {
            this.guidebookName = value;
        }
        
        public String getGuidebookVersion() {
            return guidebookVersion;
        }
        
        public void setGuidebookVersion(String value) {
            this.guidebookVersion = value;
        }
        
        public String getLIXICustomVersion() {
            return lixiCustomVersion;
        }
        
        public void setLIXICustomVersion(String value) {
            this.lixiCustomVersion = value;
        }
        
        public String getLIXITransactionType() {
            if (lixiTransactionType == null) {
                return "CAL";
            } else {
                return lixiTransactionType;
            }
        }
        
        public void setLIXITransactionType(String value) {
            this.lixiTransactionType = value;
        }
        
        public String getLIXIVersion() {
            if (lixiVersion == null) {
                return "2.6.21";
            } else {
                return lixiVersion;
            }
        }
        
        public void setLIXIVersion(String value) {
            this.lixiVersion = value;
        }
    }
    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "identifier"
    })

@Data

@Entity
    public static class TransformMetadata {
        @XmlElement(name = "Identifier")
        protected List<Message.TransformMetadata.Identifier> identifier;
        public List<Message.TransformMetadata.Identifier> getIdentifier() {
            if (identifier == null) {
                identifier = new ArrayList<Message.TransformMetadata.Identifier>();
            }
            return this.identifier;
        }
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")

@Data

@Entity
        public static class Identifier {
            @XmlAttribute(name = "AttributeName")
            protected String attributeName;
            @XmlAttribute(name = "ExternalID")
            protected String externalID;
            @XmlAttribute(name = "UniqueID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            protected String uniqueID;
            @XmlAttribute(name = "x_Context")
            @XmlIDREF
            protected Object xContext;
        }
    }
}
