//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "statusNameApplicationInstructionsList")
@XmlEnum
public enum StatusNameApplicationInstructionsList {
    
    @XmlEnumValue("Application Received")
    APPLICATION_RECEIVED("Application Received"),
    
    @XmlEnumValue("Application Registered")
    APPLICATION_REGISTERED("Application Registered"),
    
    @XmlEnumValue("Application Sent")
    APPLICATION_SENT("Application Sent"),
    
    @XmlEnumValue("Application Settled")
    APPLICATION_SETTLED("Application Settled"),
    
    @XmlEnumValue("Cancelled")
    CANCELLED("Cancelled"),
    
    @XmlEnumValue("Conditionally Approved")
    CONDITIONALLY_APPROVED("Conditionally Approved"),
    
    @XmlEnumValue("Declined")
    DECLINED("Declined"),
    
    @XmlEnumValue("Indicatively Approved")
    INDICATIVELY_APPROVED("Indicatively Approved"),
    
    @XmlEnumValue("PreApproved")
    PRE_APPROVED("PreApproved"),
    
    @XmlEnumValue("Ready for Settlement")
    READY_FOR_SETTLEMENT("Ready for Settlement"),
    
    @XmlEnumValue("Referred to Assessor")
    REFERRED_TO_ASSESSOR("Referred to Assessor"),
    
    @XmlEnumValue("Reverted to Capture")
    REVERTED_TO_CAPTURE("Reverted to Capture"),
    
    @XmlEnumValue("Unconditionally Approved")
    UNCONDITIONALLY_APPROVED("Unconditionally Approved"),
    
    @XmlEnumValue("Withdrawn")
    WITHDRAWN("Withdrawn");
    private final String value;
    StatusNameApplicationInstructionsList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static StatusNameApplicationInstructionsList fromValue(String v) {
        for (StatusNameApplicationInstructionsList c: StatusNameApplicationInstructionsList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
