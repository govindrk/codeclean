//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "insurerList")
@XmlEnum
public enum InsurerList {
    
    AAMI("AAMI"),
    
    @XmlEnumValue("AIA Australia")
    AIA_AUSTRALIA("AIA Australia"),
    
    @XmlEnumValue("Allianz Australia")
    ALLIANZ_AUSTRALIA("Allianz Australia"),
    
    @XmlEnumValue("AMP Limited")
    AMP_LIMITED("AMP Limited"),
    
    API("API"),
    
    APIA("APIA"),
    
    @XmlEnumValue("Asteron Life (Suncorp)")
    ASTERON_LIFE_SUNCORP("Asteron Life (Suncorp)"),
    
    @XmlEnumValue("Atradius")
    ATRADIUS("Atradius"),
    
    @XmlEnumValue("Australian Pensioners Insurance")
    AUSTRALIAN_PENSIONERS_INSURANCE("Australian Pensioners Insurance"),
    
    @XmlEnumValue("Australian Unity")
    AUSTRALIAN_UNITY("Australian Unity"),
    
    @XmlEnumValue("Auto and General Insurance")
    AUTO_AND_GENERAL_INSURANCE("Auto and General Insurance"),
    
    @XmlEnumValue("AXA Australia")
    AXA_AUSTRALIA("AXA Australia"),
    
    @XmlEnumValue("Bingle")
    BINGLE("Bingle"),
    
    @XmlEnumValue("BUPA Australia")
    BUPA_AUSTRALIA("BUPA Australia"),
    
    @XmlEnumValue("Buzz")
    BUZZ("Buzz"),
    
    @XmlEnumValue("Calliden Insurance")
    CALLIDEN_INSURANCE("Calliden Insurance"),
    
    @XmlEnumValue("CGU Insurance")
    CGU_INSURANCE("CGU Insurance"),
    
    CHU("CHU"),
    
    @XmlEnumValue("Chubb")
    CHUBB("Chubb"),
    
    CIC("CIC"),
    
    CIL("CIL"),
    
    @XmlEnumValue("Colonial")
    COLONIAL("Colonial"),
    
    @XmlEnumValue("CommInsure")
    COMM_INSURE("CommInsure"),
    
    @XmlEnumValue("Commonwealth Bank")
    COMMONWEALTH_BANK("Commonwealth Bank"),
    
    @XmlEnumValue("Defence Services Homes")
    DEFENCE_SERVICES_HOMES("Defence Services Homes"),
    
    @XmlEnumValue("Elders")
    ELDERS("Elders"),
    
    @XmlEnumValue("Esanda")
    ESANDA("Esanda"),
    
    FAI("FAI"),
    
    @XmlEnumValue("Fortis")
    FORTIS("Fortis"),
    
    @XmlEnumValue("Genworth Financial")
    GENWORTH_FINANCIAL("Genworth Financial"),
    
    GIO("GIO"),
    
    @XmlEnumValue("Guardian Insurance")
    GUARDIAN_INSURANCE("Guardian Insurance"),
    
    @XmlEnumValue("Guild")
    GUILD("Guild"),
    
    HBF("HBF"),
    
    ING("ING"),
    
    @XmlEnumValue("Insurance Australia Group")
    INSURANCE_AUSTRALIA_GROUP("Insurance Australia Group"),
    
    @XmlEnumValue("InsureMyRide")
    INSURE_MY_RIDE("InsureMyRide"),
    
    @XmlEnumValue("Just Car")
    JUST_CAR("Just Car"),
    
    @XmlEnumValue("LFI Group Pty Ltd")
    LFI_GROUP_PTY_LTD("LFI Group Pty Ltd"),
    
    @XmlEnumValue("Lifebroker")
    LIFEBROKER("Lifebroker"),
    
    @XmlEnumValue("Macquarie Life")
    MACQUARIE_LIFE("Macquarie Life"),
    
    @XmlEnumValue("Manchester Unity Australia")
    MANCHESTER_UNITY_AUSTRALIA("Manchester Unity Australia"),
    
    @XmlEnumValue("Medibank Private")
    MEDIBANK_PRIVATE("Medibank Private"),
    
    @XmlEnumValue("Mercantile Mutual")
    MERCANTILE_MUTUAL("Mercantile Mutual"),
    
    MLC("MLC"),
    
    MMI("MMI"),
    
    @XmlEnumValue("Mutual Community")
    MUTUAL_COMMUNITY("Mutual Community"),
    
    NCUIS("NCUIS"),
    
    @XmlEnumValue("NIB Health Funds")
    NIB_HEALTH_FUNDS("NIB Health Funds"),
    
    @XmlEnumValue("NRMA Insurance")
    NRMA_INSURANCE("NRMA Insurance"),
    
    NZI("NZI"),
    
    @XmlEnumValue("OnePath (ANZ)")
    ONE_PATH_ANZ("OnePath (ANZ)"),
    
    @XmlEnumValue("Other")
    OTHER("Other"),
    
    @XmlEnumValue("Q Report Jewellery Insurance")
    Q_REPORT_JEWELLERY_INSURANCE("Q Report Jewellery Insurance"),
    
    QBE("QBE"),
    
    @XmlEnumValue("QBE Insurance - MemberCare")
    QBE_INSURANCE_MEMBER_CARE("QBE Insurance - MemberCare"),
    
    RAC("RAC"),
    
    @XmlEnumValue("RAC WA")
    RAC_WA("RAC WA"),
    
    @XmlEnumValue("RACQ Insurance")
    RACQ_INSURANCE("RACQ Insurance"),
    
    RACV("RACV"),
    
    @XmlEnumValue("Real Insurance")
    REAL_INSURANCE("Real Insurance"),
    
    @XmlEnumValue("Redwood Advisory")
    REDWOOD_ADVISORY("Redwood Advisory"),
    
    SGIC("SGIC"),
    
    SGIO("SGIO"),
    
    @XmlEnumValue("Shannons")
    SHANNONS("Shannons"),
    
    @XmlEnumValue("Smart Business Insurance Pty Ltd.")
    SMART_BUSINESS_INSURANCE_PTY_LTD("Smart Business Insurance Pty Ltd."),
    
    @XmlEnumValue("Sun Alliance")
    SUN_ALLIANCE("Sun Alliance"),
    
    @XmlEnumValue("Suncorp")
    SUNCORP("Suncorp"),
    
    @XmlEnumValue("Super Cheap Auto Group")
    SUPER_CHEAP_AUTO_GROUP("Super Cheap Auto Group"),
    
    @XmlEnumValue("Superannuation Warehouse")
    SUPERANNUATION_WAREHOUSE("Superannuation Warehouse"),
    
    @XmlEnumValue("Swann")
    SWANN("Swann"),
    
    @XmlEnumValue("TAL (Tower Australia)")
    TAL_TOWER_AUSTRALIA("TAL (Tower Australia)"),
    
    @XmlEnumValue("Terri Scheer")
    TERRI_SCHEER("Terri Scheer"),
    
    TIO("TIO"),
    
    @XmlEnumValue("TradeCover")
    TRADE_COVER("TradeCover"),
    
    VACC("VACC"),
    
    @XmlEnumValue("Vero")
    VERO("Vero"),
    
    @XmlEnumValue("Western QBE")
    WESTERN_QBE("Western QBE"),
    
    @XmlEnumValue("Westfarmers")
    WESTFARMERS("Westfarmers"),
    
    @XmlEnumValue("Westpac Insurance Services")
    WESTPAC_INSURANCE_SERVICES("Westpac Insurance Services"),
    
    @XmlEnumValue("World Marine and General")
    WORLD_MARINE_AND_GENERAL("World Marine and General"),
    
    @XmlEnumValue("You.insured")
    YOU_INSURED("You.insured"),
    
    @XmlEnumValue("Zurich Australia")
    ZURICH_AUSTRALIA("Zurich Australia");
    private final String value;
    InsurerList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static InsurerList fromValue(String v) {
        for (InsurerList c: InsurerList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
