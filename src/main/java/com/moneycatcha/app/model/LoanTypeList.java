//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "loanTypeList")
@XmlEnum
public enum LoanTypeList {
    
    @XmlEnumValue("Bridging Finance")
    BRIDGING_FINANCE("Bridging Finance"),
    
    @XmlEnumValue("Chattel Mortgage")
    CHATTEL_MORTGAGE("Chattel Mortgage"),
    
    @XmlEnumValue("Commercial Bill")
    COMMERCIAL_BILL("Commercial Bill"),
    
    @XmlEnumValue("Commercial Hire Purchase")
    COMMERCIAL_HIRE_PURCHASE("Commercial Hire Purchase"),
    
    @XmlEnumValue("Credit Card")
    CREDIT_CARD("Credit Card"),
    
    @XmlEnumValue("Finance Lease")
    FINANCE_LEASE("Finance Lease"),
    
    @XmlEnumValue("Invoice Financing Loan")
    INVOICE_FINANCING_LOAN("Invoice Financing Loan"),
    
    @XmlEnumValue("Lease")
    LEASE("Lease"),
    
    @XmlEnumValue("Line of Credit")
    LINE_OF_CREDIT("Line of Credit"),
    
    @XmlEnumValue("Margin Loan")
    MARGIN_LOAN("Margin Loan"),
    
    @XmlEnumValue("Mortgage Loan")
    MORTGAGE_LOAN("Mortgage Loan"),
    
    @XmlEnumValue("Operating Lease")
    OPERATING_LEASE("Operating Lease"),
    
    @XmlEnumValue("Other Loan")
    OTHER_LOAN("Other Loan"),
    
    @XmlEnumValue("Overdraft")
    OVERDRAFT("Overdraft"),
    
    @XmlEnumValue("Personal Loan")
    PERSONAL_LOAN("Personal Loan"),
    
    @XmlEnumValue("Reverse Mortgage")
    REVERSE_MORTGAGE("Reverse Mortgage"),
    
    @XmlEnumValue("Term Loan")
    TERM_LOAN("Term Loan"),
    
    @XmlEnumValue("Trade Finance Loan")
    TRADE_FINANCE_LOAN("Trade Finance Loan");
    private final String value;
    LoanTypeList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static LoanTypeList fromValue(String v) {
        for (LoanTypeList c: LoanTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
