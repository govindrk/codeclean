//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "earthMovingMiningAndConstructionTypeList")
@XmlEnum
public enum EarthMovingMiningAndConstructionTypeList {
    
    @XmlEnumValue("Concrete Equipment")
    CONCRETE_EQUIPMENT("Concrete Equipment"),
    
    @XmlEnumValue("Conveyor")
    CONVEYOR("Conveyor"),
    
    @XmlEnumValue("Crushing / Screening")
    CRUSHING_SCREENING("Crushing / Screening"),
    
    @XmlEnumValue("Dozer")
    DOZER("Dozer"),
    
    @XmlEnumValue("Drill Rig")
    DRILL_RIG("Drill Rig"),
    
    @XmlEnumValue("Excavator / Face Shovel")
    EXCAVATOR_FACE_SHOVEL("Excavator / Face Shovel"),
    
    @XmlEnumValue("Forestry")
    FORESTRY("Forestry"),
    
    @XmlEnumValue("Grader")
    GRADER("Grader"),
    
    @XmlEnumValue("Loader")
    LOADER("Loader"),
    
    @XmlEnumValue("Off Highway Truck")
    OFF_HIGHWAY_TRUCK("Off Highway Truck"),
    
    @XmlEnumValue("Other")
    OTHER("Other"),
    
    @XmlEnumValue("Road Maintenance")
    ROAD_MAINTENANCE("Road Maintenance"),
    
    @XmlEnumValue("Roller / Compacting")
    ROLLER_COMPACTING("Roller / Compacting"),
    
    @XmlEnumValue("Scraper")
    SCRAPER("Scraper"),
    
    @XmlEnumValue("Sweeping / Cleaning")
    SWEEPING_CLEANING("Sweeping / Cleaning"),
    
    @XmlEnumValue("Trenching")
    TRENCHING("Trenching");
    private final String value;
    EarthMovingMiningAndConstructionTypeList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static EarthMovingMiningAndConstructionTypeList fromValue(String v) {
        for (EarthMovingMiningAndConstructionTypeList c: EarthMovingMiningAndConstructionTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
