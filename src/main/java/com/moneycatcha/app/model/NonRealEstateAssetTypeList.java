//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.20 at 10:22:11 PM AWST 
//
package com.moneycatcha.app.model;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
@XmlType(name = "nonRealEstateAssetTypeList")
@XmlEnum
public enum NonRealEstateAssetTypeList {
    
    @XmlEnumValue("Agricultural")
    AGRICULTURAL("Agricultural"),
    
    @XmlEnumValue("Aircraft")
    AIRCRAFT("Aircraft"),
    
    @XmlEnumValue("Business")
    BUSINESS("Business"),
    
    @XmlEnumValue("Cleaning")
    CLEANING("Cleaning"),
    
    @XmlEnumValue("Earth Moving, Mining and Construction")
    EARTH_MOVING_MINING_AND_CONSTRUCTION("Earth Moving, Mining and Construction"),
    
    @XmlEnumValue("Financial Asset")
    FINANCIAL_ASSET("Financial Asset"),
    
    @XmlEnumValue("Hospitality and Leisure")
    HOSPITALITY_AND_LEISURE("Hospitality and Leisure"),
    
    @XmlEnumValue("IT and AV Equipment")
    IT_AND_AV_EQUIPMENT("IT and AV Equipment"),
    
    @XmlEnumValue("Materials Handling and Lifting")
    MATERIALS_HANDLING_AND_LIFTING("Materials Handling and Lifting"),
    
    @XmlEnumValue("Medical")
    MEDICAL("Medical"),
    
    @XmlEnumValue("Mobile Computing")
    MOBILE_COMPUTING("Mobile Computing"),
    
    @XmlEnumValue("Motor Vehicle and Transport")
    MOTOR_VEHICLE_AND_TRANSPORT("Motor Vehicle and Transport"),
    
    @XmlEnumValue("Office Equipment")
    OFFICE_EQUIPMENT("Office Equipment"),
    
    @XmlEnumValue("Other")
    OTHER("Other"),
    
    @XmlEnumValue("Plant, Equipment and Industrial")
    PLANT_EQUIPMENT_AND_INDUSTRIAL("Plant, Equipment and Industrial"),
    
    @XmlEnumValue("Tools of Trade")
    TOOLS_OF_TRADE("Tools of Trade");
    private final String value;
    NonRealEstateAssetTypeList(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static NonRealEstateAssetTypeList fromValue(String v) {
        for (NonRealEstateAssetTypeList c: NonRealEstateAssetTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
